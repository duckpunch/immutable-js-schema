{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            8,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 8
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            15,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 15
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "lodash",
        "raw": "'lodash'",
        "range": [
          26,
          34
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 26
          },
          "end": {
            "line": 1,
            "column": 34
          }
        }
      },
      "range": [
        0,
        35
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 35
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "range": [
            44,
            47
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 8
            },
            "end": {
              "line": 2,
              "column": 11
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "range": [
            49,
            53
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 13
            },
            "end": {
              "line": 2,
              "column": 17
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "immutable",
        "raw": "'immutable'",
        "range": [
          60,
          71
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 24
          },
          "end": {
            "line": 2,
            "column": 35
          }
        }
      },
      "range": [
        36,
        72
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 36
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key any value to test\n * @param {*} value any value to test\n * @returns {Boolean} whether the key/value match the pair\n ",
          "range": [
            75,
            327
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "checkPair",
        "range": [
          337,
          346
        ],
        "loc": {
          "start": {
            "line": 14,
            "column": 9
          },
          "end": {
            "line": 14,
            "column": 18
          }
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pair",
          "range": [
            347,
            351
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 19
            },
            "end": {
              "line": 14,
              "column": 23
            }
          }
        },
        {
          "type": "Identifier",
          "name": "key",
          "range": [
            353,
            356
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 25
            },
            "end": {
              "line": 14,
              "column": 28
            }
          }
        },
        {
          "type": "Identifier",
          "name": "value",
          "range": [
            358,
            363
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 30
            },
            "end": {
              "line": 14,
              "column": 35
            }
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "ArrayPattern",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "key_check",
                      "range": [
                        378,
                        387
                      ],
                      "loc": {
                        "start": {
                          "line": 15,
                          "column": 11
                        },
                        "end": {
                          "line": 15,
                          "column": 20
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "value_check",
                      "range": [
                        389,
                        400
                      ],
                      "loc": {
                        "start": {
                          "line": 15,
                          "column": 22
                        },
                        "end": {
                          "line": 15,
                          "column": 33
                        }
                      }
                    }
                  ],
                  "range": [
                    377,
                    401
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 10
                    },
                    "end": {
                      "line": 15,
                      "column": 34
                    }
                  }
                },
                "init": {
                  "type": "Identifier",
                  "name": "pair",
                  "range": [
                    404,
                    408
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 37
                    },
                    "end": {
                      "line": 15,
                      "column": 41
                    }
                  }
                },
                "range": [
                  377,
                  408
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 10
                  },
                  "end": {
                    "line": 15,
                    "column": 41
                  }
                }
              }
            ],
            "kind": "const",
            "range": [
              371,
              409
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 4
              },
              "end": {
                "line": 15,
                "column": 42
              }
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "key_check",
                  "range": [
                    421,
                    430
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 11
                    },
                    "end": {
                      "line": 16,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "key",
                    "range": [
                      431,
                      434
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 21
                      },
                      "end": {
                        "line": 16,
                        "column": 24
                      }
                    }
                  }
                ],
                "range": [
                  421,
                  435
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 11
                  },
                  "end": {
                    "line": 16,
                    "column": 25
                  }
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "value_check",
                  "range": [
                    439,
                    450
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 29
                    },
                    "end": {
                      "line": 16,
                      "column": 40
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      451,
                      456
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 41
                      },
                      "end": {
                        "line": 16,
                        "column": 46
                      }
                    }
                  }
                ],
                "range": [
                  439,
                  457
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 29
                  },
                  "end": {
                    "line": 16,
                    "column": 47
                  }
                }
              },
              "range": [
                421,
                457
              ],
              "loc": {
                "start": {
                  "line": 16,
                  "column": 11
                },
                "end": {
                  "line": 16,
                  "column": 47
                }
              }
            },
            "range": [
              414,
              458
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 4
              },
              "end": {
                "line": 16,
                "column": 48
              }
            }
          }
        ],
        "range": [
          365,
          460
        ],
        "loc": {
          "start": {
            "line": 14,
            "column": 37
          },
          "end": {
            "line": 17,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        328,
        460
      ],
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key any value to test\n * @param {*} value any value to test\n * @returns {Boolean} whether the key/value match the pair\n ",
          "range": [
            75,
            327
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            463,
            1053
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "MapSchema",
          "range": [
            1070,
            1079
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 16
            },
            "end": {
              "line": 36,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                1083,
                1093
              ],
              "loc": {
                "start": {
                  "line": 36,
                  "column": 29
                },
                "end": {
                  "line": 36,
                  "column": 39
                }
              }
            },
            "range": [
              1080,
              1093
            ],
            "loc": {
              "start": {
                "line": 36,
                "column": 26
              },
              "end": {
                "line": 36,
                "column": 39
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "pairs",
                    "range": [
                      1107,
                      1112
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 10
                      },
                      "end": {
                        "line": 37,
                        "column": 15
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "chunk",
                      "range": [
                        1115,
                        1120
                      ],
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 18
                        },
                        "end": {
                          "line": 37,
                          "column": 23
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "validators",
                        "range": [
                          1121,
                          1131
                        ],
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 24
                          },
                          "end": {
                            "line": 37,
                            "column": 34
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "range": [
                          1133,
                          1134
                        ],
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 36
                          },
                          "end": {
                            "line": 37,
                            "column": 37
                          }
                        }
                      }
                    ],
                    "range": [
                      1115,
                      1135
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 18
                      },
                      "end": {
                        "line": 37,
                        "column": 38
                      }
                    }
                  },
                  "range": [
                    1107,
                    1135
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 10
                    },
                    "end": {
                      "line": 37,
                      "column": 38
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                1101,
                1136
              ],
              "loc": {
                "start": {
                  "line": 37,
                  "column": 4
                },
                "end": {
                  "line": 37,
                  "column": 39
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "%",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "validators",
                      "range": [
                        1145,
                        1155
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 8
                        },
                        "end": {
                          "line": 38,
                          "column": 18
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "range": [
                        1156,
                        1162
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 19
                        },
                        "end": {
                          "line": 38,
                          "column": 25
                        }
                      }
                    },
                    "range": [
                      1145,
                      1162
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 8
                      },
                      "end": {
                        "line": 38,
                        "column": 25
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "range": [
                      1165,
                      1166
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 28
                      },
                      "end": {
                        "line": 38,
                        "column": 29
                      }
                    }
                  },
                  "range": [
                    1145,
                    1166
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 8
                    },
                    "end": {
                      "line": 38,
                      "column": 29
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "range": [
                    1171,
                    1172
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 34
                    },
                    "end": {
                      "line": 38,
                      "column": 35
                    }
                  }
                },
                "range": [
                  1145,
                  1172
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 8
                  },
                  "end": {
                    "line": 38,
                    "column": 35
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Literal",
                      "value": "Must have even length of validators",
                      "raw": "'Must have even length of validators'",
                      "range": [
                        1190,
                        1227
                      ],
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 14
                        },
                        "end": {
                          "line": 39,
                          "column": 51
                        }
                      }
                    },
                    "range": [
                      1184,
                      1228
                    ],
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 8
                      },
                      "end": {
                        "line": 39,
                        "column": 52
                      }
                    }
                  }
                ],
                "range": [
                  1174,
                  1234
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 37
                  },
                  "end": {
                    "line": 40,
                    "column": 5
                  }
                }
              },
              "alternate": null,
              "range": [
                1141,
                1234
              ],
              "loc": {
                "start": {
                  "line": 38,
                  "column": 4
                },
                "end": {
                  "line": 40,
                  "column": 5
                }
              }
            },
            {
              "type": "FunctionDeclaration",
              "id": {
                "type": "Identifier",
                "name": "validatePair",
                "range": [
                  1249,
                  1261
                ],
                "loc": {
                  "start": {
                    "line": 42,
                    "column": 13
                  },
                  "end": {
                    "line": 42,
                    "column": 25
                  }
                }
              },
              "params": [
                {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    1262,
                    1267
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 26
                    },
                    "end": {
                      "line": 42,
                      "column": 31
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "key",
                  "range": [
                    1269,
                    1272
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 33
                    },
                    "end": {
                      "line": 42,
                      "column": 36
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "some",
                        "range": [
                          1291,
                          1295
                        ],
                        "loc": {
                          "start": {
                            "line": 43,
                            "column": 15
                          },
                          "end": {
                            "line": 43,
                            "column": 19
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "pairs",
                          "range": [
                            1296,
                            1301
                          ],
                          "loc": {
                            "start": {
                              "line": 43,
                              "column": 20
                            },
                            "end": {
                              "line": 43,
                              "column": 25
                            }
                          }
                        },
                        {
                          "type": "ArrowFunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "pair",
                              "range": [
                                1303,
                                1307
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 27
                                },
                                "end": {
                                  "line": 43,
                                  "column": 31
                                }
                              }
                            }
                          ],
                          "body": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "checkPair",
                              "range": [
                                1311,
                                1320
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 35
                                },
                                "end": {
                                  "line": 43,
                                  "column": 44
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "pair",
                                "range": [
                                  1321,
                                  1325
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 45
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 49
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "key",
                                "range": [
                                  1327,
                                  1330
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 51
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 54
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "value",
                                "range": [
                                  1332,
                                  1337
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 56
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 61
                                  }
                                }
                              }
                            ],
                            "range": [
                              1311,
                              1338
                            ],
                            "loc": {
                              "start": {
                                "line": 43,
                                "column": 35
                              },
                              "end": {
                                "line": 43,
                                "column": 62
                              }
                            }
                          },
                          "generator": false,
                          "expression": true,
                          "range": [
                            1303,
                            1338
                          ],
                          "loc": {
                            "start": {
                              "line": 43,
                              "column": 27
                            },
                            "end": {
                              "line": 43,
                              "column": 62
                            }
                          }
                        }
                      ],
                      "range": [
                        1291,
                        1339
                      ],
                      "loc": {
                        "start": {
                          "line": 43,
                          "column": 15
                        },
                        "end": {
                          "line": 43,
                          "column": 63
                        }
                      }
                    },
                    "range": [
                      1284,
                      1340
                    ],
                    "loc": {
                      "start": {
                        "line": 43,
                        "column": 8
                      },
                      "end": {
                        "line": 43,
                        "column": 64
                      }
                    }
                  }
                ],
                "range": [
                  1274,
                  1346
                ],
                "loc": {
                  "start": {
                    "line": 42,
                    "column": 38
                  },
                  "end": {
                    "line": 44,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1240,
                1346
              ],
              "loc": {
                "start": {
                  "line": 42,
                  "column": 4
                },
                "end": {
                  "line": 44,
                  "column": 5
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      1368,
                      1377
                    ],
                    "loc": {
                      "start": {
                        "line": 46,
                        "column": 20
                      },
                      "end": {
                        "line": 46,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Map",
                            "range": [
                              1393,
                              1396
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 12
                              },
                              "end": {
                                "line": 47,
                                "column": 15
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isMap",
                            "range": [
                              1397,
                              1402
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 16
                              },
                              "end": {
                                "line": 47,
                                "column": 21
                              }
                            }
                          },
                          "range": [
                            1393,
                            1402
                          ],
                          "loc": {
                            "start": {
                              "line": 47,
                              "column": 12
                            },
                            "end": {
                              "line": 47,
                              "column": 21
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              1403,
                              1412
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 22
                              },
                              "end": {
                                "line": 47,
                                "column": 31
                              }
                            }
                          }
                        ],
                        "range": [
                          1393,
                          1413
                        ],
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 12
                          },
                          "end": {
                            "line": 47,
                            "column": 32
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    1436,
                                    1445
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    1446,
                                    1451
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  1436,
                                  1451
                                ],
                                "loc": {
                                  "start": {
                                    "line": 48,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 48,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "validatePair",
                                  "range": [
                                    1452,
                                    1464
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 47
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1436,
                                1465
                              ],
                              "loc": {
                                "start": {
                                  "line": 48,
                                  "column": 19
                                },
                                "end": {
                                  "line": 48,
                                  "column": 48
                                }
                              }
                            },
                            "range": [
                              1429,
                              1466
                            ],
                            "loc": {
                              "start": {
                                "line": 48,
                                "column": 12
                              },
                              "end": {
                                "line": 48,
                                "column": 49
                              }
                            }
                          }
                        ],
                        "range": [
                          1415,
                          1476
                        ],
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 34
                          },
                          "end": {
                            "line": 49,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                1503,
                                1508
                              ],
                              "loc": {
                                "start": {
                                  "line": 50,
                                  "column": 19
                                },
                                "end": {
                                  "line": 50,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              1496,
                              1509
                            ],
                            "loc": {
                              "start": {
                                "line": 50,
                                "column": 12
                              },
                              "end": {
                                "line": 50,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          1482,
                          1519
                        ],
                        "loc": {
                          "start": {
                            "line": 49,
                            "column": 15
                          },
                          "end": {
                            "line": 51,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1389,
                        1519
                      ],
                      "loc": {
                        "start": {
                          "line": 47,
                          "column": 8
                        },
                        "end": {
                          "line": 51,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1379,
                    1525
                  ],
                  "loc": {
                    "start": {
                      "line": 46,
                      "column": 31
                    },
                    "end": {
                      "line": 52,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1359,
                  1525
                ],
                "loc": {
                  "start": {
                    "line": 46,
                    "column": 11
                  },
                  "end": {
                    "line": 52,
                    "column": 5
                  }
                }
              },
              "range": [
                1352,
                1526
              ],
              "loc": {
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 52,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            1095,
            1528
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 41
            },
            "end": {
              "line": 53,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1061,
          1528
        ],
        "loc": {
          "start": {
            "line": 36,
            "column": 7
          },
          "end": {
            "line": 53,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
            "range": [
              463,
              1053
            ],
            "loc": {
              "start": {
                "line": 20,
                "column": 0
              },
              "end": {
                "line": 35,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1531,
              2052
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1054,
        1528
      ],
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 53,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            463,
            1053
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1531,
            2052
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "FixedListSchema",
          "range": [
            2069,
            2084
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 16
            },
            "end": {
              "line": 70,
              "column": 31
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2088,
                2098
              ],
              "loc": {
                "start": {
                  "line": 70,
                  "column": 35
                },
                "end": {
                  "line": 70,
                  "column": 45
                }
              }
            },
            "range": [
              2085,
              2098
            ],
            "loc": {
              "start": {
                "line": 70,
                "column": 32
              },
              "end": {
                "line": 70,
                "column": 45
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2122,
                      2131
                    ],
                    "loc": {
                      "start": {
                        "line": 71,
                        "column": 20
                      },
                      "end": {
                        "line": 71,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "List",
                              "range": [
                                2147,
                                2151
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 12
                                },
                                "end": {
                                  "line": 72,
                                  "column": 16
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isList",
                              "range": [
                                2152,
                                2158
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 17
                                },
                                "end": {
                                  "line": 72,
                                  "column": 23
                                }
                              }
                            },
                            "range": [
                              2147,
                              2158
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 12
                              },
                              "end": {
                                "line": 72,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2159,
                                2168
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 24
                                },
                                "end": {
                                  "line": 72,
                                  "column": 33
                                }
                              }
                            }
                          ],
                          "range": [
                            2147,
                            2169
                          ],
                          "loc": {
                            "start": {
                              "line": 72,
                              "column": 12
                            },
                            "end": {
                              "line": 72,
                              "column": 34
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2173,
                                2182
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 38
                                },
                                "end": {
                                  "line": 72,
                                  "column": 47
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "size",
                              "range": [
                                2183,
                                2187
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 48
                                },
                                "end": {
                                  "line": 72,
                                  "column": 52
                                }
                              }
                            },
                            "range": [
                              2173,
                              2187
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 38
                              },
                              "end": {
                                "line": 72,
                                "column": 52
                              }
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "validators",
                              "range": [
                                2192,
                                2202
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 57
                                },
                                "end": {
                                  "line": 72,
                                  "column": 67
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length",
                              "range": [
                                2203,
                                2209
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 68
                                },
                                "end": {
                                  "line": 72,
                                  "column": 74
                                }
                              }
                            },
                            "range": [
                              2192,
                              2209
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 57
                              },
                              "end": {
                                "line": 72,
                                "column": 74
                              }
                            }
                          },
                          "range": [
                            2173,
                            2209
                          ],
                          "loc": {
                            "start": {
                              "line": 72,
                              "column": 38
                            },
                            "end": {
                              "line": 72,
                              "column": 74
                            }
                          }
                        },
                        "range": [
                          2147,
                          2209
                        ],
                        "loc": {
                          "start": {
                            "line": 72,
                            "column": 12
                          },
                          "end": {
                            "line": 72,
                            "column": 74
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2232,
                                    2241
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2242,
                                    2247
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2232,
                                  2247
                                ],
                                "loc": {
                                  "start": {
                                    "line": 73,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 73,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2249,
                                        2254
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 36
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 41
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "index",
                                      "range": [
                                        2256,
                                        2261
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 43
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 48
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2266,
                                          2276
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 53
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 63
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "index",
                                        "range": [
                                          2277,
                                          2282
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 64
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 69
                                          }
                                        }
                                      },
                                      "range": [
                                        2266,
                                        2283
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 53
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 70
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "value",
                                        "range": [
                                          2284,
                                          2289
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 71
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 76
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2266,
                                      2290
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 73,
                                        "column": 53
                                      },
                                      "end": {
                                        "line": 73,
                                        "column": 77
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2248,
                                    2290
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 77
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2232,
                                2291
                              ],
                              "loc": {
                                "start": {
                                  "line": 73,
                                  "column": 19
                                },
                                "end": {
                                  "line": 73,
                                  "column": 78
                                }
                              }
                            },
                            "range": [
                              2225,
                              2292
                            ],
                            "loc": {
                              "start": {
                                "line": 73,
                                "column": 12
                              },
                              "end": {
                                "line": 73,
                                "column": 79
                              }
                            }
                          }
                        ],
                        "range": [
                          2211,
                          2302
                        ],
                        "loc": {
                          "start": {
                            "line": 72,
                            "column": 76
                          },
                          "end": {
                            "line": 74,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                2329,
                                2334
                              ],
                              "loc": {
                                "start": {
                                  "line": 75,
                                  "column": 19
                                },
                                "end": {
                                  "line": 75,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              2322,
                              2335
                            ],
                            "loc": {
                              "start": {
                                "line": 75,
                                "column": 12
                              },
                              "end": {
                                "line": 75,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2308,
                          2345
                        ],
                        "loc": {
                          "start": {
                            "line": 74,
                            "column": 15
                          },
                          "end": {
                            "line": 76,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2143,
                        2345
                      ],
                      "loc": {
                        "start": {
                          "line": 72,
                          "column": 8
                        },
                        "end": {
                          "line": 76,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2133,
                    2351
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 31
                    },
                    "end": {
                      "line": 77,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2113,
                  2351
                ],
                "loc": {
                  "start": {
                    "line": 71,
                    "column": 11
                  },
                  "end": {
                    "line": 77,
                    "column": 5
                  }
                }
              },
              "range": [
                2106,
                2352
              ],
              "loc": {
                "start": {
                  "line": 71,
                  "column": 4
                },
                "end": {
                  "line": 77,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2100,
            2354
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 47
            },
            "end": {
              "line": 78,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2060,
          2354
        ],
        "loc": {
          "start": {
            "line": 70,
            "column": 7
          },
          "end": {
            "line": 78,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1531,
              2052
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2357,
              2847
            ],
            "loc": {
              "start": {
                "line": 81,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2053,
        2354
      ],
      "loc": {
        "start": {
          "line": 70,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1531,
            2052
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2357,
            2847
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ListSchema",
          "range": [
            2864,
            2874
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 16
            },
            "end": {
              "line": 94,
              "column": 26
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2878,
                2888
              ],
              "loc": {
                "start": {
                  "line": 94,
                  "column": 30
                },
                "end": {
                  "line": 94,
                  "column": 40
                }
              }
            },
            "range": [
              2875,
              2888
            ],
            "loc": {
              "start": {
                "line": 94,
                "column": 27
              },
              "end": {
                "line": 94,
                "column": 40
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2912,
                      2921
                    ],
                    "loc": {
                      "start": {
                        "line": 95,
                        "column": 20
                      },
                      "end": {
                        "line": 95,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "List",
                            "range": [
                              2937,
                              2941
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 12
                              },
                              "end": {
                                "line": 96,
                                "column": 16
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isList",
                            "range": [
                              2942,
                              2948
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 17
                              },
                              "end": {
                                "line": 96,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            2937,
                            2948
                          ],
                          "loc": {
                            "start": {
                              "line": 96,
                              "column": 12
                            },
                            "end": {
                              "line": 96,
                              "column": 23
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              2949,
                              2958
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 24
                              },
                              "end": {
                                "line": 96,
                                "column": 33
                              }
                            }
                          }
                        ],
                        "range": [
                          2937,
                          2959
                        ],
                        "loc": {
                          "start": {
                            "line": 96,
                            "column": 12
                          },
                          "end": {
                            "line": 96,
                            "column": 34
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2982,
                                    2991
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 97,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 97,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2992,
                                    2997
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 97,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 97,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2982,
                                  2997
                                ],
                                "loc": {
                                  "start": {
                                    "line": 97,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 97,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        3015,
                                        3020
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 98,
                                          "column": 16
                                        },
                                        "end": {
                                          "line": 98,
                                          "column": 21
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "some",
                                      "range": [
                                        3024,
                                        3028
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 98,
                                          "column": 25
                                        },
                                        "end": {
                                          "line": 98,
                                          "column": 29
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          3029,
                                          3039
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 98,
                                            "column": 30
                                          },
                                          "end": {
                                            "line": 98,
                                            "column": 40
                                          }
                                        }
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              3041,
                                              3050
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 98,
                                                "column": 42
                                              },
                                              "end": {
                                                "line": 98,
                                                "column": 51
                                              }
                                            }
                                          }
                                        ],
                                        "body": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              3054,
                                              3063
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 98,
                                                "column": 55
                                              },
                                              "end": {
                                                "line": 98,
                                                "column": 64
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value",
                                              "range": [
                                                3064,
                                                3069
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 98,
                                                  "column": 65
                                                },
                                                "end": {
                                                  "line": 98,
                                                  "column": 70
                                                }
                                              }
                                            }
                                          ],
                                          "range": [
                                            3054,
                                            3070
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 98,
                                              "column": 55
                                            },
                                            "end": {
                                              "line": 98,
                                              "column": 71
                                            }
                                          }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "range": [
                                          3041,
                                          3070
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 98,
                                            "column": 42
                                          },
                                          "end": {
                                            "line": 98,
                                            "column": 71
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      3024,
                                      3071
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 98,
                                        "column": 25
                                      },
                                      "end": {
                                        "line": 98,
                                        "column": 72
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    3015,
                                    3071
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 98,
                                      "column": 16
                                    },
                                    "end": {
                                      "line": 98,
                                      "column": 72
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2982,
                                3085
                              ],
                              "loc": {
                                "start": {
                                  "line": 97,
                                  "column": 19
                                },
                                "end": {
                                  "line": 99,
                                  "column": 13
                                }
                              }
                            },
                            "range": [
                              2975,
                              3086
                            ],
                            "loc": {
                              "start": {
                                "line": 97,
                                "column": 12
                              },
                              "end": {
                                "line": 99,
                                "column": 14
                              }
                            }
                          }
                        ],
                        "range": [
                          2961,
                          3096
                        ],
                        "loc": {
                          "start": {
                            "line": 96,
                            "column": 36
                          },
                          "end": {
                            "line": 100,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                3123,
                                3128
                              ],
                              "loc": {
                                "start": {
                                  "line": 101,
                                  "column": 19
                                },
                                "end": {
                                  "line": 101,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              3116,
                              3129
                            ],
                            "loc": {
                              "start": {
                                "line": 101,
                                "column": 12
                              },
                              "end": {
                                "line": 101,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          3102,
                          3139
                        ],
                        "loc": {
                          "start": {
                            "line": 100,
                            "column": 15
                          },
                          "end": {
                            "line": 102,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2933,
                        3139
                      ],
                      "loc": {
                        "start": {
                          "line": 96,
                          "column": 8
                        },
                        "end": {
                          "line": 102,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2923,
                    3145
                  ],
                  "loc": {
                    "start": {
                      "line": 95,
                      "column": 31
                    },
                    "end": {
                      "line": 103,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2903,
                  3145
                ],
                "loc": {
                  "start": {
                    "line": 95,
                    "column": 11
                  },
                  "end": {
                    "line": 103,
                    "column": 5
                  }
                }
              },
              "range": [
                2896,
                3146
              ],
              "loc": {
                "start": {
                  "line": 95,
                  "column": 4
                },
                "end": {
                  "line": 103,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2890,
            3148
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 42
            },
            "end": {
              "line": 104,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2855,
          3148
        ],
        "loc": {
          "start": {
            "line": 94,
            "column": 7
          },
          "end": {
            "line": 104,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2357,
              2847
            ],
            "loc": {
              "start": {
                "line": 81,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3151,
              3482
            ],
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 118,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2848,
        3148
      ],
      "loc": {
        "start": {
          "line": 94,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2357,
            2847
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3151,
            3482
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 0
            },
            "end": {
              "line": 118,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Exactly",
          "range": [
            3499,
            3506
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 16
            },
            "end": {
              "line": 119,
              "column": 23
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "value",
            "range": [
              3507,
              3512
            ],
            "loc": {
              "start": {
                "line": 119,
                "column": 24
              },
              "end": {
                "line": 119,
                "column": 29
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3527,
                      3536
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 11
                      },
                      "end": {
                        "line": 120,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      3540,
                      3545
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 24
                      },
                      "end": {
                        "line": 120,
                        "column": 29
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3550,
                      3559
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 34
                      },
                      "end": {
                        "line": 120,
                        "column": 43
                      }
                    }
                  },
                  "range": [
                    3540,
                    3559
                  ],
                  "loc": {
                    "start": {
                      "line": 120,
                      "column": 24
                    },
                    "end": {
                      "line": 120,
                      "column": 43
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3527,
                  3559
                ],
                "loc": {
                  "start": {
                    "line": 120,
                    "column": 11
                  },
                  "end": {
                    "line": 120,
                    "column": 43
                  }
                }
              },
              "range": [
                3520,
                3560
              ],
              "loc": {
                "start": {
                  "line": 120,
                  "column": 4
                },
                "end": {
                  "line": 120,
                  "column": 44
                }
              }
            }
          ],
          "range": [
            3514,
            3562
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 31
            },
            "end": {
              "line": 121,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3490,
          3562
        ],
        "loc": {
          "start": {
            "line": 119,
            "column": 7
          },
          "end": {
            "line": 121,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3151,
              3482
            ],
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 118,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3565,
              3993
            ],
            "loc": {
              "start": {
                "line": 124,
                "column": 0
              },
              "end": {
                "line": 137,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        3483,
        3562
      ],
      "loc": {
        "start": {
          "line": 119,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3151,
            3482
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 0
            },
            "end": {
              "line": 118,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3565,
            3993
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0
            },
            "end": {
              "line": 137,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "OneOf",
          "range": [
            4010,
            4015
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 16
            },
            "end": {
              "line": 138,
              "column": 21
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "values",
              "range": [
                4019,
                4025
              ],
              "loc": {
                "start": {
                  "line": 138,
                  "column": 25
                },
                "end": {
                  "line": 138,
                  "column": 31
                }
              }
            },
            "range": [
              4016,
              4025
            ],
            "loc": {
              "start": {
                "line": 138,
                "column": 22
              },
              "end": {
                "line": 138,
                "column": 31
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      4040,
                      4049
                    ],
                    "loc": {
                      "start": {
                        "line": 139,
                        "column": 11
                      },
                      "end": {
                        "line": 139,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "some",
                    "range": [
                      4053,
                      4057
                    ],
                    "loc": {
                      "start": {
                        "line": 139,
                        "column": 24
                      },
                      "end": {
                        "line": 139,
                        "column": 28
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "values",
                      "range": [
                        4058,
                        4064
                      ],
                      "loc": {
                        "start": {
                          "line": 139,
                          "column": 29
                        },
                        "end": {
                          "line": 139,
                          "column": 35
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "Exactly",
                      "range": [
                        4066,
                        4073
                      ],
                      "loc": {
                        "start": {
                          "line": 139,
                          "column": 37
                        },
                        "end": {
                          "line": 139,
                          "column": 44
                        }
                      }
                    }
                  ],
                  "range": [
                    4053,
                    4074
                  ],
                  "loc": {
                    "start": {
                      "line": 139,
                      "column": 24
                    },
                    "end": {
                      "line": 139,
                      "column": 45
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  4040,
                  4074
                ],
                "loc": {
                  "start": {
                    "line": 139,
                    "column": 11
                  },
                  "end": {
                    "line": 139,
                    "column": 45
                  }
                }
              },
              "range": [
                4033,
                4075
              ],
              "loc": {
                "start": {
                  "line": 139,
                  "column": 4
                },
                "end": {
                  "line": 139,
                  "column": 46
                }
              }
            }
          ],
          "range": [
            4027,
            4077
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 33
            },
            "end": {
              "line": 140,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          4001,
          4077
        ],
        "loc": {
          "start": {
            "line": 138,
            "column": 7
          },
          "end": {
            "line": 140,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3565,
              3993
            ],
            "loc": {
              "start": {
                "line": 124,
                "column": 0
              },
              "end": {
                "line": 137,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        3994,
        4077
      ],
      "loc": {
        "start": {
          "line": 138,
          "column": 0
        },
        "end": {
          "line": 140,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3565,
            3993
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0
            },
            "end": {
              "line": 137,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    4077
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 140,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key any value to test\n * @param {*} value any value to test\n * @returns {Boolean} whether the key/value match the pair\n ",
      "range": [
        75,
        327
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
      "range": [
        463,
        1053
      ],
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
      "range": [
        1531,
        2052
      ],
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 69,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
      "range": [
        2357,
        2847
      ],
      "loc": {
        "start": {
          "line": 81,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
      "range": [
        3151,
        3482
      ],
      "loc": {
        "start": {
          "line": 107,
          "column": 0
        },
        "end": {
          "line": 118,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
      "range": [
        3565,
        3993
      ],
      "loc": {
        "start": {
          "line": 124,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 3
        }
      }
    }
  ]
}