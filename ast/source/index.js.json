{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            8,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 8
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            15,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 15
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "lodash",
        "raw": "'lodash'",
        "range": [
          26,
          34
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 26
          },
          "end": {
            "line": 1,
            "column": 34
          }
        }
      },
      "range": [
        0,
        35
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 35
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "range": [
            44,
            47
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 8
            },
            "end": {
              "line": 2,
              "column": 11
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "range": [
            49,
            53
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 13
            },
            "end": {
              "line": 2,
              "column": 17
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "immutable",
        "raw": "'immutable'",
        "range": [
          60,
          71
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 24
          },
          "end": {
            "line": 2,
            "column": 35
          }
        }
      },
      "range": [
        36,
        72
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 36
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n * @returns\n ",
          "range": [
            75,
            244
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "checkPair",
        "range": [
          254,
          263
        ],
        "loc": {
          "start": {
            "line": 14,
            "column": 9
          },
          "end": {
            "line": 14,
            "column": 18
          }
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pair",
          "range": [
            264,
            268
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 19
            },
            "end": {
              "line": 14,
              "column": 23
            }
          }
        },
        {
          "type": "Identifier",
          "name": "key",
          "range": [
            270,
            273
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 25
            },
            "end": {
              "line": 14,
              "column": 28
            }
          }
        },
        {
          "type": "Identifier",
          "name": "value",
          "range": [
            275,
            280
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 30
            },
            "end": {
              "line": 14,
              "column": 35
            }
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "ArrayPattern",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "key_check",
                      "range": [
                        295,
                        304
                      ],
                      "loc": {
                        "start": {
                          "line": 15,
                          "column": 11
                        },
                        "end": {
                          "line": 15,
                          "column": 20
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "value_check",
                      "range": [
                        306,
                        317
                      ],
                      "loc": {
                        "start": {
                          "line": 15,
                          "column": 22
                        },
                        "end": {
                          "line": 15,
                          "column": 33
                        }
                      }
                    }
                  ],
                  "range": [
                    294,
                    318
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 10
                    },
                    "end": {
                      "line": 15,
                      "column": 34
                    }
                  }
                },
                "init": {
                  "type": "Identifier",
                  "name": "pair",
                  "range": [
                    321,
                    325
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 37
                    },
                    "end": {
                      "line": 15,
                      "column": 41
                    }
                  }
                },
                "range": [
                  294,
                  325
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 10
                  },
                  "end": {
                    "line": 15,
                    "column": 41
                  }
                }
              }
            ],
            "kind": "const",
            "range": [
              288,
              326
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 4
              },
              "end": {
                "line": 15,
                "column": 42
              }
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "key_check",
                  "range": [
                    338,
                    347
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 11
                    },
                    "end": {
                      "line": 16,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "key",
                    "range": [
                      348,
                      351
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 21
                      },
                      "end": {
                        "line": 16,
                        "column": 24
                      }
                    }
                  }
                ],
                "range": [
                  338,
                  352
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 11
                  },
                  "end": {
                    "line": 16,
                    "column": 25
                  }
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "value_check",
                  "range": [
                    356,
                    367
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 29
                    },
                    "end": {
                      "line": 16,
                      "column": 40
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      368,
                      373
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 41
                      },
                      "end": {
                        "line": 16,
                        "column": 46
                      }
                    }
                  }
                ],
                "range": [
                  356,
                  374
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 29
                  },
                  "end": {
                    "line": 16,
                    "column": 47
                  }
                }
              },
              "range": [
                338,
                374
              ],
              "loc": {
                "start": {
                  "line": 16,
                  "column": 11
                },
                "end": {
                  "line": 16,
                  "column": 47
                }
              }
            },
            "range": [
              331,
              375
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 4
              },
              "end": {
                "line": 16,
                "column": 48
              }
            }
          }
        ],
        "range": [
          282,
          377
        ],
        "loc": {
          "start": {
            "line": 14,
            "column": 37
          },
          "end": {
            "line": 17,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        245,
        377
      ],
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n * @returns\n ",
          "range": [
            75,
            244
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            380,
            970
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "MapSchema",
          "range": [
            987,
            996
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 16
            },
            "end": {
              "line": 36,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                1000,
                1010
              ],
              "loc": {
                "start": {
                  "line": 36,
                  "column": 29
                },
                "end": {
                  "line": 36,
                  "column": 39
                }
              }
            },
            "range": [
              997,
              1010
            ],
            "loc": {
              "start": {
                "line": 36,
                "column": 26
              },
              "end": {
                "line": 36,
                "column": 39
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "pairs",
                    "range": [
                      1024,
                      1029
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 10
                      },
                      "end": {
                        "line": 37,
                        "column": 15
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "chunk",
                      "range": [
                        1032,
                        1037
                      ],
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 18
                        },
                        "end": {
                          "line": 37,
                          "column": 23
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "validators",
                        "range": [
                          1038,
                          1048
                        ],
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 24
                          },
                          "end": {
                            "line": 37,
                            "column": 34
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "range": [
                          1050,
                          1051
                        ],
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 36
                          },
                          "end": {
                            "line": 37,
                            "column": 37
                          }
                        }
                      }
                    ],
                    "range": [
                      1032,
                      1052
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 18
                      },
                      "end": {
                        "line": 37,
                        "column": 38
                      }
                    }
                  },
                  "range": [
                    1024,
                    1052
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 10
                    },
                    "end": {
                      "line": 37,
                      "column": 38
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                1018,
                1053
              ],
              "loc": {
                "start": {
                  "line": 37,
                  "column": 4
                },
                "end": {
                  "line": 37,
                  "column": 39
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "%",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "validators",
                      "range": [
                        1062,
                        1072
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 8
                        },
                        "end": {
                          "line": 38,
                          "column": 18
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "range": [
                        1073,
                        1079
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 19
                        },
                        "end": {
                          "line": 38,
                          "column": 25
                        }
                      }
                    },
                    "range": [
                      1062,
                      1079
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 8
                      },
                      "end": {
                        "line": 38,
                        "column": 25
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "range": [
                      1082,
                      1083
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 28
                      },
                      "end": {
                        "line": 38,
                        "column": 29
                      }
                    }
                  },
                  "range": [
                    1062,
                    1083
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 8
                    },
                    "end": {
                      "line": 38,
                      "column": 29
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "range": [
                    1088,
                    1089
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 34
                    },
                    "end": {
                      "line": 38,
                      "column": 35
                    }
                  }
                },
                "range": [
                  1062,
                  1089
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 8
                  },
                  "end": {
                    "line": 38,
                    "column": 35
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Literal",
                      "value": "Must have even length of validators",
                      "raw": "'Must have even length of validators'",
                      "range": [
                        1107,
                        1144
                      ],
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 14
                        },
                        "end": {
                          "line": 39,
                          "column": 51
                        }
                      }
                    },
                    "range": [
                      1101,
                      1145
                    ],
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 8
                      },
                      "end": {
                        "line": 39,
                        "column": 52
                      }
                    }
                  }
                ],
                "range": [
                  1091,
                  1151
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 37
                  },
                  "end": {
                    "line": 40,
                    "column": 5
                  }
                }
              },
              "alternate": null,
              "range": [
                1058,
                1151
              ],
              "loc": {
                "start": {
                  "line": 38,
                  "column": 4
                },
                "end": {
                  "line": 40,
                  "column": 5
                }
              }
            },
            {
              "type": "FunctionDeclaration",
              "id": {
                "type": "Identifier",
                "name": "validatePair",
                "range": [
                  1166,
                  1178
                ],
                "loc": {
                  "start": {
                    "line": 42,
                    "column": 13
                  },
                  "end": {
                    "line": 42,
                    "column": 25
                  }
                }
              },
              "params": [
                {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    1179,
                    1184
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 26
                    },
                    "end": {
                      "line": 42,
                      "column": 31
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "key",
                  "range": [
                    1186,
                    1189
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 33
                    },
                    "end": {
                      "line": 42,
                      "column": 36
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "some",
                        "range": [
                          1208,
                          1212
                        ],
                        "loc": {
                          "start": {
                            "line": 43,
                            "column": 15
                          },
                          "end": {
                            "line": 43,
                            "column": 19
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "pairs",
                          "range": [
                            1213,
                            1218
                          ],
                          "loc": {
                            "start": {
                              "line": 43,
                              "column": 20
                            },
                            "end": {
                              "line": 43,
                              "column": 25
                            }
                          }
                        },
                        {
                          "type": "ArrowFunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "pair",
                              "range": [
                                1220,
                                1224
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 27
                                },
                                "end": {
                                  "line": 43,
                                  "column": 31
                                }
                              }
                            }
                          ],
                          "body": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "checkPair",
                              "range": [
                                1228,
                                1237
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 35
                                },
                                "end": {
                                  "line": 43,
                                  "column": 44
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "pair",
                                "range": [
                                  1238,
                                  1242
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 45
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 49
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "key",
                                "range": [
                                  1244,
                                  1247
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 51
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 54
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "value",
                                "range": [
                                  1249,
                                  1254
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 56
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 61
                                  }
                                }
                              }
                            ],
                            "range": [
                              1228,
                              1255
                            ],
                            "loc": {
                              "start": {
                                "line": 43,
                                "column": 35
                              },
                              "end": {
                                "line": 43,
                                "column": 62
                              }
                            }
                          },
                          "generator": false,
                          "expression": true,
                          "range": [
                            1220,
                            1255
                          ],
                          "loc": {
                            "start": {
                              "line": 43,
                              "column": 27
                            },
                            "end": {
                              "line": 43,
                              "column": 62
                            }
                          }
                        }
                      ],
                      "range": [
                        1208,
                        1256
                      ],
                      "loc": {
                        "start": {
                          "line": 43,
                          "column": 15
                        },
                        "end": {
                          "line": 43,
                          "column": 63
                        }
                      }
                    },
                    "range": [
                      1201,
                      1257
                    ],
                    "loc": {
                      "start": {
                        "line": 43,
                        "column": 8
                      },
                      "end": {
                        "line": 43,
                        "column": 64
                      }
                    }
                  }
                ],
                "range": [
                  1191,
                  1263
                ],
                "loc": {
                  "start": {
                    "line": 42,
                    "column": 38
                  },
                  "end": {
                    "line": 44,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1157,
                1263
              ],
              "loc": {
                "start": {
                  "line": 42,
                  "column": 4
                },
                "end": {
                  "line": 44,
                  "column": 5
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      1285,
                      1294
                    ],
                    "loc": {
                      "start": {
                        "line": 46,
                        "column": 20
                      },
                      "end": {
                        "line": 46,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Map",
                            "range": [
                              1310,
                              1313
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 12
                              },
                              "end": {
                                "line": 47,
                                "column": 15
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isMap",
                            "range": [
                              1314,
                              1319
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 16
                              },
                              "end": {
                                "line": 47,
                                "column": 21
                              }
                            }
                          },
                          "range": [
                            1310,
                            1319
                          ],
                          "loc": {
                            "start": {
                              "line": 47,
                              "column": 12
                            },
                            "end": {
                              "line": 47,
                              "column": 21
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              1320,
                              1329
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 22
                              },
                              "end": {
                                "line": 47,
                                "column": 31
                              }
                            }
                          }
                        ],
                        "range": [
                          1310,
                          1330
                        ],
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 12
                          },
                          "end": {
                            "line": 47,
                            "column": 32
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    1353,
                                    1362
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    1363,
                                    1368
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  1353,
                                  1368
                                ],
                                "loc": {
                                  "start": {
                                    "line": 48,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 48,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "validatePair",
                                  "range": [
                                    1369,
                                    1381
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 47
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1353,
                                1382
                              ],
                              "loc": {
                                "start": {
                                  "line": 48,
                                  "column": 19
                                },
                                "end": {
                                  "line": 48,
                                  "column": 48
                                }
                              }
                            },
                            "range": [
                              1346,
                              1383
                            ],
                            "loc": {
                              "start": {
                                "line": 48,
                                "column": 12
                              },
                              "end": {
                                "line": 48,
                                "column": 49
                              }
                            }
                          }
                        ],
                        "range": [
                          1332,
                          1393
                        ],
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 34
                          },
                          "end": {
                            "line": 49,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                1420,
                                1425
                              ],
                              "loc": {
                                "start": {
                                  "line": 50,
                                  "column": 19
                                },
                                "end": {
                                  "line": 50,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              1413,
                              1426
                            ],
                            "loc": {
                              "start": {
                                "line": 50,
                                "column": 12
                              },
                              "end": {
                                "line": 50,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          1399,
                          1436
                        ],
                        "loc": {
                          "start": {
                            "line": 49,
                            "column": 15
                          },
                          "end": {
                            "line": 51,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1306,
                        1436
                      ],
                      "loc": {
                        "start": {
                          "line": 47,
                          "column": 8
                        },
                        "end": {
                          "line": 51,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1296,
                    1442
                  ],
                  "loc": {
                    "start": {
                      "line": 46,
                      "column": 31
                    },
                    "end": {
                      "line": 52,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1276,
                  1442
                ],
                "loc": {
                  "start": {
                    "line": 46,
                    "column": 11
                  },
                  "end": {
                    "line": 52,
                    "column": 5
                  }
                }
              },
              "range": [
                1269,
                1443
              ],
              "loc": {
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 52,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            1012,
            1445
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 41
            },
            "end": {
              "line": 53,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          978,
          1445
        ],
        "loc": {
          "start": {
            "line": 36,
            "column": 7
          },
          "end": {
            "line": 53,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
            "range": [
              380,
              970
            ],
            "loc": {
              "start": {
                "line": 20,
                "column": 0
              },
              "end": {
                "line": 35,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1448,
              1969
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        971,
        1445
      ],
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 53,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            380,
            970
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1448,
            1969
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "FixedListSchema",
          "range": [
            1986,
            2001
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 16
            },
            "end": {
              "line": 70,
              "column": 31
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2005,
                2015
              ],
              "loc": {
                "start": {
                  "line": 70,
                  "column": 35
                },
                "end": {
                  "line": 70,
                  "column": 45
                }
              }
            },
            "range": [
              2002,
              2015
            ],
            "loc": {
              "start": {
                "line": 70,
                "column": 32
              },
              "end": {
                "line": 70,
                "column": 45
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2039,
                      2048
                    ],
                    "loc": {
                      "start": {
                        "line": 71,
                        "column": 20
                      },
                      "end": {
                        "line": 71,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "List",
                              "range": [
                                2064,
                                2068
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 12
                                },
                                "end": {
                                  "line": 72,
                                  "column": 16
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isList",
                              "range": [
                                2069,
                                2075
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 17
                                },
                                "end": {
                                  "line": 72,
                                  "column": 23
                                }
                              }
                            },
                            "range": [
                              2064,
                              2075
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 12
                              },
                              "end": {
                                "line": 72,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2076,
                                2085
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 24
                                },
                                "end": {
                                  "line": 72,
                                  "column": 33
                                }
                              }
                            }
                          ],
                          "range": [
                            2064,
                            2086
                          ],
                          "loc": {
                            "start": {
                              "line": 72,
                              "column": 12
                            },
                            "end": {
                              "line": 72,
                              "column": 34
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2090,
                                2099
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 38
                                },
                                "end": {
                                  "line": 72,
                                  "column": 47
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "size",
                              "range": [
                                2100,
                                2104
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 48
                                },
                                "end": {
                                  "line": 72,
                                  "column": 52
                                }
                              }
                            },
                            "range": [
                              2090,
                              2104
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 38
                              },
                              "end": {
                                "line": 72,
                                "column": 52
                              }
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "validators",
                              "range": [
                                2109,
                                2119
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 57
                                },
                                "end": {
                                  "line": 72,
                                  "column": 67
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length",
                              "range": [
                                2120,
                                2126
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 68
                                },
                                "end": {
                                  "line": 72,
                                  "column": 74
                                }
                              }
                            },
                            "range": [
                              2109,
                              2126
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 57
                              },
                              "end": {
                                "line": 72,
                                "column": 74
                              }
                            }
                          },
                          "range": [
                            2090,
                            2126
                          ],
                          "loc": {
                            "start": {
                              "line": 72,
                              "column": 38
                            },
                            "end": {
                              "line": 72,
                              "column": 74
                            }
                          }
                        },
                        "range": [
                          2064,
                          2126
                        ],
                        "loc": {
                          "start": {
                            "line": 72,
                            "column": 12
                          },
                          "end": {
                            "line": 72,
                            "column": 74
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2149,
                                    2158
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2159,
                                    2164
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2149,
                                  2164
                                ],
                                "loc": {
                                  "start": {
                                    "line": 73,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 73,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2166,
                                        2171
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 36
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 41
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "index",
                                      "range": [
                                        2173,
                                        2178
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 43
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 48
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2183,
                                          2193
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 53
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 63
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "index",
                                        "range": [
                                          2194,
                                          2199
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 64
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 69
                                          }
                                        }
                                      },
                                      "range": [
                                        2183,
                                        2200
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 53
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 70
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "value",
                                        "range": [
                                          2201,
                                          2206
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 71
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 76
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2183,
                                      2207
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 73,
                                        "column": 53
                                      },
                                      "end": {
                                        "line": 73,
                                        "column": 77
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2165,
                                    2207
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 77
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2149,
                                2208
                              ],
                              "loc": {
                                "start": {
                                  "line": 73,
                                  "column": 19
                                },
                                "end": {
                                  "line": 73,
                                  "column": 78
                                }
                              }
                            },
                            "range": [
                              2142,
                              2209
                            ],
                            "loc": {
                              "start": {
                                "line": 73,
                                "column": 12
                              },
                              "end": {
                                "line": 73,
                                "column": 79
                              }
                            }
                          }
                        ],
                        "range": [
                          2128,
                          2219
                        ],
                        "loc": {
                          "start": {
                            "line": 72,
                            "column": 76
                          },
                          "end": {
                            "line": 74,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                2246,
                                2251
                              ],
                              "loc": {
                                "start": {
                                  "line": 75,
                                  "column": 19
                                },
                                "end": {
                                  "line": 75,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              2239,
                              2252
                            ],
                            "loc": {
                              "start": {
                                "line": 75,
                                "column": 12
                              },
                              "end": {
                                "line": 75,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2225,
                          2262
                        ],
                        "loc": {
                          "start": {
                            "line": 74,
                            "column": 15
                          },
                          "end": {
                            "line": 76,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2060,
                        2262
                      ],
                      "loc": {
                        "start": {
                          "line": 72,
                          "column": 8
                        },
                        "end": {
                          "line": 76,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2050,
                    2268
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 31
                    },
                    "end": {
                      "line": 77,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2030,
                  2268
                ],
                "loc": {
                  "start": {
                    "line": 71,
                    "column": 11
                  },
                  "end": {
                    "line": 77,
                    "column": 5
                  }
                }
              },
              "range": [
                2023,
                2269
              ],
              "loc": {
                "start": {
                  "line": 71,
                  "column": 4
                },
                "end": {
                  "line": 77,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2017,
            2271
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 47
            },
            "end": {
              "line": 78,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1977,
          2271
        ],
        "loc": {
          "start": {
            "line": 70,
            "column": 7
          },
          "end": {
            "line": 78,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1448,
              1969
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2274,
              2764
            ],
            "loc": {
              "start": {
                "line": 81,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1970,
        2271
      ],
      "loc": {
        "start": {
          "line": 70,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1448,
            1969
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2274,
            2764
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ListSchema",
          "range": [
            2781,
            2791
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 16
            },
            "end": {
              "line": 94,
              "column": 26
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2795,
                2805
              ],
              "loc": {
                "start": {
                  "line": 94,
                  "column": 30
                },
                "end": {
                  "line": 94,
                  "column": 40
                }
              }
            },
            "range": [
              2792,
              2805
            ],
            "loc": {
              "start": {
                "line": 94,
                "column": 27
              },
              "end": {
                "line": 94,
                "column": 40
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2829,
                      2838
                    ],
                    "loc": {
                      "start": {
                        "line": 95,
                        "column": 20
                      },
                      "end": {
                        "line": 95,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "List",
                            "range": [
                              2854,
                              2858
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 12
                              },
                              "end": {
                                "line": 96,
                                "column": 16
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isList",
                            "range": [
                              2859,
                              2865
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 17
                              },
                              "end": {
                                "line": 96,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            2854,
                            2865
                          ],
                          "loc": {
                            "start": {
                              "line": 96,
                              "column": 12
                            },
                            "end": {
                              "line": 96,
                              "column": 23
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              2866,
                              2875
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 24
                              },
                              "end": {
                                "line": 96,
                                "column": 33
                              }
                            }
                          }
                        ],
                        "range": [
                          2854,
                          2876
                        ],
                        "loc": {
                          "start": {
                            "line": 96,
                            "column": 12
                          },
                          "end": {
                            "line": 96,
                            "column": 34
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2899,
                                    2908
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 97,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 97,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2909,
                                    2914
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 97,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 97,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2899,
                                  2914
                                ],
                                "loc": {
                                  "start": {
                                    "line": 97,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 97,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2932,
                                        2937
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 98,
                                          "column": 16
                                        },
                                        "end": {
                                          "line": 98,
                                          "column": 21
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "some",
                                      "range": [
                                        2941,
                                        2945
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 98,
                                          "column": 25
                                        },
                                        "end": {
                                          "line": 98,
                                          "column": 29
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2946,
                                          2956
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 98,
                                            "column": 30
                                          },
                                          "end": {
                                            "line": 98,
                                            "column": 40
                                          }
                                        }
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2958,
                                              2967
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 98,
                                                "column": 42
                                              },
                                              "end": {
                                                "line": 98,
                                                "column": 51
                                              }
                                            }
                                          }
                                        ],
                                        "body": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2971,
                                              2980
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 98,
                                                "column": 55
                                              },
                                              "end": {
                                                "line": 98,
                                                "column": 64
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value",
                                              "range": [
                                                2981,
                                                2986
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 98,
                                                  "column": 65
                                                },
                                                "end": {
                                                  "line": 98,
                                                  "column": 70
                                                }
                                              }
                                            }
                                          ],
                                          "range": [
                                            2971,
                                            2987
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 98,
                                              "column": 55
                                            },
                                            "end": {
                                              "line": 98,
                                              "column": 71
                                            }
                                          }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "range": [
                                          2958,
                                          2987
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 98,
                                            "column": 42
                                          },
                                          "end": {
                                            "line": 98,
                                            "column": 71
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2941,
                                      2988
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 98,
                                        "column": 25
                                      },
                                      "end": {
                                        "line": 98,
                                        "column": 72
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2932,
                                    2988
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 98,
                                      "column": 16
                                    },
                                    "end": {
                                      "line": 98,
                                      "column": 72
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2899,
                                3002
                              ],
                              "loc": {
                                "start": {
                                  "line": 97,
                                  "column": 19
                                },
                                "end": {
                                  "line": 99,
                                  "column": 13
                                }
                              }
                            },
                            "range": [
                              2892,
                              3003
                            ],
                            "loc": {
                              "start": {
                                "line": 97,
                                "column": 12
                              },
                              "end": {
                                "line": 99,
                                "column": 14
                              }
                            }
                          }
                        ],
                        "range": [
                          2878,
                          3013
                        ],
                        "loc": {
                          "start": {
                            "line": 96,
                            "column": 36
                          },
                          "end": {
                            "line": 100,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                3040,
                                3045
                              ],
                              "loc": {
                                "start": {
                                  "line": 101,
                                  "column": 19
                                },
                                "end": {
                                  "line": 101,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              3033,
                              3046
                            ],
                            "loc": {
                              "start": {
                                "line": 101,
                                "column": 12
                              },
                              "end": {
                                "line": 101,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          3019,
                          3056
                        ],
                        "loc": {
                          "start": {
                            "line": 100,
                            "column": 15
                          },
                          "end": {
                            "line": 102,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2850,
                        3056
                      ],
                      "loc": {
                        "start": {
                          "line": 96,
                          "column": 8
                        },
                        "end": {
                          "line": 102,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2840,
                    3062
                  ],
                  "loc": {
                    "start": {
                      "line": 95,
                      "column": 31
                    },
                    "end": {
                      "line": 103,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2820,
                  3062
                ],
                "loc": {
                  "start": {
                    "line": 95,
                    "column": 11
                  },
                  "end": {
                    "line": 103,
                    "column": 5
                  }
                }
              },
              "range": [
                2813,
                3063
              ],
              "loc": {
                "start": {
                  "line": 95,
                  "column": 4
                },
                "end": {
                  "line": 103,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2807,
            3065
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 42
            },
            "end": {
              "line": 104,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2772,
          3065
        ],
        "loc": {
          "start": {
            "line": 94,
            "column": 7
          },
          "end": {
            "line": 104,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2274,
              2764
            ],
            "loc": {
              "start": {
                "line": 81,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3068,
              3399
            ],
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 118,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2765,
        3065
      ],
      "loc": {
        "start": {
          "line": 94,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2274,
            2764
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3068,
            3399
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 0
            },
            "end": {
              "line": 118,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Exactly",
          "range": [
            3416,
            3423
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 16
            },
            "end": {
              "line": 119,
              "column": 23
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "value",
            "range": [
              3424,
              3429
            ],
            "loc": {
              "start": {
                "line": 119,
                "column": 24
              },
              "end": {
                "line": 119,
                "column": 29
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3444,
                      3453
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 11
                      },
                      "end": {
                        "line": 120,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      3457,
                      3462
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 24
                      },
                      "end": {
                        "line": 120,
                        "column": 29
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3467,
                      3476
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 34
                      },
                      "end": {
                        "line": 120,
                        "column": 43
                      }
                    }
                  },
                  "range": [
                    3457,
                    3476
                  ],
                  "loc": {
                    "start": {
                      "line": 120,
                      "column": 24
                    },
                    "end": {
                      "line": 120,
                      "column": 43
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3444,
                  3476
                ],
                "loc": {
                  "start": {
                    "line": 120,
                    "column": 11
                  },
                  "end": {
                    "line": 120,
                    "column": 43
                  }
                }
              },
              "range": [
                3437,
                3477
              ],
              "loc": {
                "start": {
                  "line": 120,
                  "column": 4
                },
                "end": {
                  "line": 120,
                  "column": 44
                }
              }
            }
          ],
          "range": [
            3431,
            3479
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 31
            },
            "end": {
              "line": 121,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3407,
          3479
        ],
        "loc": {
          "start": {
            "line": 119,
            "column": 7
          },
          "end": {
            "line": 121,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3068,
              3399
            ],
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 118,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3482,
              3910
            ],
            "loc": {
              "start": {
                "line": 124,
                "column": 0
              },
              "end": {
                "line": 137,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        3400,
        3479
      ],
      "loc": {
        "start": {
          "line": 119,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3068,
            3399
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 0
            },
            "end": {
              "line": 118,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3482,
            3910
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0
            },
            "end": {
              "line": 137,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "OneOf",
          "range": [
            3927,
            3932
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 16
            },
            "end": {
              "line": 138,
              "column": 21
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "values",
              "range": [
                3936,
                3942
              ],
              "loc": {
                "start": {
                  "line": 138,
                  "column": 25
                },
                "end": {
                  "line": 138,
                  "column": 31
                }
              }
            },
            "range": [
              3933,
              3942
            ],
            "loc": {
              "start": {
                "line": 138,
                "column": 22
              },
              "end": {
                "line": 138,
                "column": 31
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3957,
                      3966
                    ],
                    "loc": {
                      "start": {
                        "line": 139,
                        "column": 11
                      },
                      "end": {
                        "line": 139,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "some",
                    "range": [
                      3970,
                      3974
                    ],
                    "loc": {
                      "start": {
                        "line": 139,
                        "column": 24
                      },
                      "end": {
                        "line": 139,
                        "column": 28
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "values",
                      "range": [
                        3975,
                        3981
                      ],
                      "loc": {
                        "start": {
                          "line": 139,
                          "column": 29
                        },
                        "end": {
                          "line": 139,
                          "column": 35
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "Exactly",
                      "range": [
                        3983,
                        3990
                      ],
                      "loc": {
                        "start": {
                          "line": 139,
                          "column": 37
                        },
                        "end": {
                          "line": 139,
                          "column": 44
                        }
                      }
                    }
                  ],
                  "range": [
                    3970,
                    3991
                  ],
                  "loc": {
                    "start": {
                      "line": 139,
                      "column": 24
                    },
                    "end": {
                      "line": 139,
                      "column": 45
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3957,
                  3991
                ],
                "loc": {
                  "start": {
                    "line": 139,
                    "column": 11
                  },
                  "end": {
                    "line": 139,
                    "column": 45
                  }
                }
              },
              "range": [
                3950,
                3992
              ],
              "loc": {
                "start": {
                  "line": 139,
                  "column": 4
                },
                "end": {
                  "line": 139,
                  "column": 46
                }
              }
            }
          ],
          "range": [
            3944,
            3994
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 33
            },
            "end": {
              "line": 140,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3918,
          3994
        ],
        "loc": {
          "start": {
            "line": 138,
            "column": 7
          },
          "end": {
            "line": 140,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3482,
              3910
            ],
            "loc": {
              "start": {
                "line": 124,
                "column": 0
              },
              "end": {
                "line": 137,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        3911,
        3994
      ],
      "loc": {
        "start": {
          "line": 138,
          "column": 0
        },
        "end": {
          "line": 140,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3482,
            3910
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0
            },
            "end": {
              "line": 137,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    3994
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 140,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n * @returns\n ",
      "range": [
        75,
        244
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
      "range": [
        380,
        970
      ],
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
      "range": [
        1448,
        1969
      ],
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 69,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
      "range": [
        2274,
        2764
      ],
      "loc": {
        "start": {
          "line": 81,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
      "range": [
        3068,
        3399
      ],
      "loc": {
        "start": {
          "line": 107,
          "column": 0
        },
        "end": {
          "line": 118,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
      "range": [
        3482,
        3910
      ],
      "loc": {
        "start": {
          "line": 124,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 3
        }
      }
    }
  ]
}