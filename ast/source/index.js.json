{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            8,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 8
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            15,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 15
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "lodash",
        "raw": "'lodash'",
        "range": [
          26,
          34
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 26
          },
          "end": {
            "line": 1,
            "column": 34
          }
        }
      },
      "range": [
        0,
        35
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 35
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "range": [
            44,
            47
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 8
            },
            "end": {
              "line": 2,
              "column": 11
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "range": [
            49,
            53
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 13
            },
            "end": {
              "line": 2,
              "column": 17
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "immutable",
        "raw": "'immutable'",
        "range": [
          60,
          71
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 24
          },
          "end": {
            "line": 2,
            "column": 35
          }
        }
      },
      "range": [
        36,
        72
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 36
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n ",
          "range": [
            75,
            94
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "checkPair",
        "range": [
          104,
          113
        ],
        "loc": {
          "start": {
            "line": 8,
            "column": 9
          },
          "end": {
            "line": 8,
            "column": 18
          }
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pair",
          "range": [
            114,
            118
          ],
          "loc": {
            "start": {
              "line": 8,
              "column": 19
            },
            "end": {
              "line": 8,
              "column": 23
            }
          }
        },
        {
          "type": "Identifier",
          "name": "key",
          "range": [
            120,
            123
          ],
          "loc": {
            "start": {
              "line": 8,
              "column": 25
            },
            "end": {
              "line": 8,
              "column": 28
            }
          }
        },
        {
          "type": "Identifier",
          "name": "value",
          "range": [
            125,
            130
          ],
          "loc": {
            "start": {
              "line": 8,
              "column": 30
            },
            "end": {
              "line": 8,
              "column": 35
            }
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "ArrayPattern",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "key_check",
                      "range": [
                        145,
                        154
                      ],
                      "loc": {
                        "start": {
                          "line": 9,
                          "column": 11
                        },
                        "end": {
                          "line": 9,
                          "column": 20
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "value_check",
                      "range": [
                        156,
                        167
                      ],
                      "loc": {
                        "start": {
                          "line": 9,
                          "column": 22
                        },
                        "end": {
                          "line": 9,
                          "column": 33
                        }
                      }
                    }
                  ],
                  "range": [
                    144,
                    168
                  ],
                  "loc": {
                    "start": {
                      "line": 9,
                      "column": 10
                    },
                    "end": {
                      "line": 9,
                      "column": 34
                    }
                  }
                },
                "init": {
                  "type": "Identifier",
                  "name": "pair",
                  "range": [
                    171,
                    175
                  ],
                  "loc": {
                    "start": {
                      "line": 9,
                      "column": 37
                    },
                    "end": {
                      "line": 9,
                      "column": 41
                    }
                  }
                },
                "range": [
                  144,
                  175
                ],
                "loc": {
                  "start": {
                    "line": 9,
                    "column": 10
                  },
                  "end": {
                    "line": 9,
                    "column": 41
                  }
                }
              }
            ],
            "kind": "const",
            "range": [
              138,
              176
            ],
            "loc": {
              "start": {
                "line": 9,
                "column": 4
              },
              "end": {
                "line": 9,
                "column": 42
              }
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "key_check",
                  "range": [
                    188,
                    197
                  ],
                  "loc": {
                    "start": {
                      "line": 10,
                      "column": 11
                    },
                    "end": {
                      "line": 10,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "key",
                    "range": [
                      198,
                      201
                    ],
                    "loc": {
                      "start": {
                        "line": 10,
                        "column": 21
                      },
                      "end": {
                        "line": 10,
                        "column": 24
                      }
                    }
                  }
                ],
                "range": [
                  188,
                  202
                ],
                "loc": {
                  "start": {
                    "line": 10,
                    "column": 11
                  },
                  "end": {
                    "line": 10,
                    "column": 25
                  }
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "value_check",
                  "range": [
                    206,
                    217
                  ],
                  "loc": {
                    "start": {
                      "line": 10,
                      "column": 29
                    },
                    "end": {
                      "line": 10,
                      "column": 40
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      218,
                      223
                    ],
                    "loc": {
                      "start": {
                        "line": 10,
                        "column": 41
                      },
                      "end": {
                        "line": 10,
                        "column": 46
                      }
                    }
                  }
                ],
                "range": [
                  206,
                  224
                ],
                "loc": {
                  "start": {
                    "line": 10,
                    "column": 29
                  },
                  "end": {
                    "line": 10,
                    "column": 47
                  }
                }
              },
              "range": [
                188,
                224
              ],
              "loc": {
                "start": {
                  "line": 10,
                  "column": 11
                },
                "end": {
                  "line": 10,
                  "column": 47
                }
              }
            },
            "range": [
              181,
              225
            ],
            "loc": {
              "start": {
                "line": 10,
                "column": 4
              },
              "end": {
                "line": 10,
                "column": 48
              }
            }
          }
        ],
        "range": [
          132,
          227
        ],
        "loc": {
          "start": {
            "line": 8,
            "column": 37
          },
          "end": {
            "line": 11,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        95,
        227
      ],
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n ",
          "range": [
            75,
            94
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            230,
            820
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 29,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "MapSchema",
          "range": [
            837,
            846
          ],
          "loc": {
            "start": {
              "line": 30,
              "column": 16
            },
            "end": {
              "line": 30,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                850,
                860
              ],
              "loc": {
                "start": {
                  "line": 30,
                  "column": 29
                },
                "end": {
                  "line": 30,
                  "column": 39
                }
              }
            },
            "range": [
              847,
              860
            ],
            "loc": {
              "start": {
                "line": 30,
                "column": 26
              },
              "end": {
                "line": 30,
                "column": 39
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "pairs",
                    "range": [
                      874,
                      879
                    ],
                    "loc": {
                      "start": {
                        "line": 31,
                        "column": 10
                      },
                      "end": {
                        "line": 31,
                        "column": 15
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "chunk",
                      "range": [
                        882,
                        887
                      ],
                      "loc": {
                        "start": {
                          "line": 31,
                          "column": 18
                        },
                        "end": {
                          "line": 31,
                          "column": 23
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "validators",
                        "range": [
                          888,
                          898
                        ],
                        "loc": {
                          "start": {
                            "line": 31,
                            "column": 24
                          },
                          "end": {
                            "line": 31,
                            "column": 34
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "range": [
                          900,
                          901
                        ],
                        "loc": {
                          "start": {
                            "line": 31,
                            "column": 36
                          },
                          "end": {
                            "line": 31,
                            "column": 37
                          }
                        }
                      }
                    ],
                    "range": [
                      882,
                      902
                    ],
                    "loc": {
                      "start": {
                        "line": 31,
                        "column": 18
                      },
                      "end": {
                        "line": 31,
                        "column": 38
                      }
                    }
                  },
                  "range": [
                    874,
                    902
                  ],
                  "loc": {
                    "start": {
                      "line": 31,
                      "column": 10
                    },
                    "end": {
                      "line": 31,
                      "column": 38
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                868,
                903
              ],
              "loc": {
                "start": {
                  "line": 31,
                  "column": 4
                },
                "end": {
                  "line": 31,
                  "column": 39
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "%",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "validators",
                      "range": [
                        912,
                        922
                      ],
                      "loc": {
                        "start": {
                          "line": 32,
                          "column": 8
                        },
                        "end": {
                          "line": 32,
                          "column": 18
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "range": [
                        923,
                        929
                      ],
                      "loc": {
                        "start": {
                          "line": 32,
                          "column": 19
                        },
                        "end": {
                          "line": 32,
                          "column": 25
                        }
                      }
                    },
                    "range": [
                      912,
                      929
                    ],
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 8
                      },
                      "end": {
                        "line": 32,
                        "column": 25
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "range": [
                      932,
                      933
                    ],
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 28
                      },
                      "end": {
                        "line": 32,
                        "column": 29
                      }
                    }
                  },
                  "range": [
                    912,
                    933
                  ],
                  "loc": {
                    "start": {
                      "line": 32,
                      "column": 8
                    },
                    "end": {
                      "line": 32,
                      "column": 29
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "range": [
                    938,
                    939
                  ],
                  "loc": {
                    "start": {
                      "line": 32,
                      "column": 34
                    },
                    "end": {
                      "line": 32,
                      "column": 35
                    }
                  }
                },
                "range": [
                  912,
                  939
                ],
                "loc": {
                  "start": {
                    "line": 32,
                    "column": 8
                  },
                  "end": {
                    "line": 32,
                    "column": 35
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Literal",
                      "value": "Must have even length of validators",
                      "raw": "'Must have even length of validators'",
                      "range": [
                        957,
                        994
                      ],
                      "loc": {
                        "start": {
                          "line": 33,
                          "column": 14
                        },
                        "end": {
                          "line": 33,
                          "column": 51
                        }
                      }
                    },
                    "range": [
                      951,
                      995
                    ],
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 8
                      },
                      "end": {
                        "line": 33,
                        "column": 52
                      }
                    }
                  }
                ],
                "range": [
                  941,
                  1001
                ],
                "loc": {
                  "start": {
                    "line": 32,
                    "column": 37
                  },
                  "end": {
                    "line": 34,
                    "column": 5
                  }
                }
              },
              "alternate": null,
              "range": [
                908,
                1001
              ],
              "loc": {
                "start": {
                  "line": 32,
                  "column": 4
                },
                "end": {
                  "line": 34,
                  "column": 5
                }
              }
            },
            {
              "type": "FunctionDeclaration",
              "id": {
                "type": "Identifier",
                "name": "validatePair",
                "range": [
                  1016,
                  1028
                ],
                "loc": {
                  "start": {
                    "line": 36,
                    "column": 13
                  },
                  "end": {
                    "line": 36,
                    "column": 25
                  }
                }
              },
              "params": [
                {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    1029,
                    1034
                  ],
                  "loc": {
                    "start": {
                      "line": 36,
                      "column": 26
                    },
                    "end": {
                      "line": 36,
                      "column": 31
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "key",
                  "range": [
                    1036,
                    1039
                  ],
                  "loc": {
                    "start": {
                      "line": 36,
                      "column": 33
                    },
                    "end": {
                      "line": 36,
                      "column": 36
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "some",
                        "range": [
                          1058,
                          1062
                        ],
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 15
                          },
                          "end": {
                            "line": 37,
                            "column": 19
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "pairs",
                          "range": [
                            1063,
                            1068
                          ],
                          "loc": {
                            "start": {
                              "line": 37,
                              "column": 20
                            },
                            "end": {
                              "line": 37,
                              "column": 25
                            }
                          }
                        },
                        {
                          "type": "ArrowFunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "pair",
                              "range": [
                                1070,
                                1074
                              ],
                              "loc": {
                                "start": {
                                  "line": 37,
                                  "column": 27
                                },
                                "end": {
                                  "line": 37,
                                  "column": 31
                                }
                              }
                            }
                          ],
                          "body": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "checkPair",
                              "range": [
                                1078,
                                1087
                              ],
                              "loc": {
                                "start": {
                                  "line": 37,
                                  "column": 35
                                },
                                "end": {
                                  "line": 37,
                                  "column": 44
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "pair",
                                "range": [
                                  1088,
                                  1092
                                ],
                                "loc": {
                                  "start": {
                                    "line": 37,
                                    "column": 45
                                  },
                                  "end": {
                                    "line": 37,
                                    "column": 49
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "key",
                                "range": [
                                  1094,
                                  1097
                                ],
                                "loc": {
                                  "start": {
                                    "line": 37,
                                    "column": 51
                                  },
                                  "end": {
                                    "line": 37,
                                    "column": 54
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "value",
                                "range": [
                                  1099,
                                  1104
                                ],
                                "loc": {
                                  "start": {
                                    "line": 37,
                                    "column": 56
                                  },
                                  "end": {
                                    "line": 37,
                                    "column": 61
                                  }
                                }
                              }
                            ],
                            "range": [
                              1078,
                              1105
                            ],
                            "loc": {
                              "start": {
                                "line": 37,
                                "column": 35
                              },
                              "end": {
                                "line": 37,
                                "column": 62
                              }
                            }
                          },
                          "generator": false,
                          "expression": true,
                          "range": [
                            1070,
                            1105
                          ],
                          "loc": {
                            "start": {
                              "line": 37,
                              "column": 27
                            },
                            "end": {
                              "line": 37,
                              "column": 62
                            }
                          }
                        }
                      ],
                      "range": [
                        1058,
                        1106
                      ],
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 15
                        },
                        "end": {
                          "line": 37,
                          "column": 63
                        }
                      }
                    },
                    "range": [
                      1051,
                      1107
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 8
                      },
                      "end": {
                        "line": 37,
                        "column": 64
                      }
                    }
                  }
                ],
                "range": [
                  1041,
                  1113
                ],
                "loc": {
                  "start": {
                    "line": 36,
                    "column": 38
                  },
                  "end": {
                    "line": 38,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1007,
                1113
              ],
              "loc": {
                "start": {
                  "line": 36,
                  "column": 4
                },
                "end": {
                  "line": 38,
                  "column": 5
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      1135,
                      1144
                    ],
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 20
                      },
                      "end": {
                        "line": 40,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Map",
                            "range": [
                              1160,
                              1163
                            ],
                            "loc": {
                              "start": {
                                "line": 41,
                                "column": 12
                              },
                              "end": {
                                "line": 41,
                                "column": 15
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isMap",
                            "range": [
                              1164,
                              1169
                            ],
                            "loc": {
                              "start": {
                                "line": 41,
                                "column": 16
                              },
                              "end": {
                                "line": 41,
                                "column": 21
                              }
                            }
                          },
                          "range": [
                            1160,
                            1169
                          ],
                          "loc": {
                            "start": {
                              "line": 41,
                              "column": 12
                            },
                            "end": {
                              "line": 41,
                              "column": 21
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              1170,
                              1179
                            ],
                            "loc": {
                              "start": {
                                "line": 41,
                                "column": 22
                              },
                              "end": {
                                "line": 41,
                                "column": 31
                              }
                            }
                          }
                        ],
                        "range": [
                          1160,
                          1180
                        ],
                        "loc": {
                          "start": {
                            "line": 41,
                            "column": 12
                          },
                          "end": {
                            "line": 41,
                            "column": 32
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    1203,
                                    1212
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 42,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 42,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    1213,
                                    1218
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 42,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 42,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  1203,
                                  1218
                                ],
                                "loc": {
                                  "start": {
                                    "line": 42,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 42,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "validatePair",
                                  "range": [
                                    1219,
                                    1231
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 42,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 42,
                                      "column": 47
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1203,
                                1232
                              ],
                              "loc": {
                                "start": {
                                  "line": 42,
                                  "column": 19
                                },
                                "end": {
                                  "line": 42,
                                  "column": 48
                                }
                              }
                            },
                            "range": [
                              1196,
                              1233
                            ],
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 12
                              },
                              "end": {
                                "line": 42,
                                "column": 49
                              }
                            }
                          }
                        ],
                        "range": [
                          1182,
                          1243
                        ],
                        "loc": {
                          "start": {
                            "line": 41,
                            "column": 34
                          },
                          "end": {
                            "line": 43,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                1270,
                                1275
                              ],
                              "loc": {
                                "start": {
                                  "line": 44,
                                  "column": 19
                                },
                                "end": {
                                  "line": 44,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              1263,
                              1276
                            ],
                            "loc": {
                              "start": {
                                "line": 44,
                                "column": 12
                              },
                              "end": {
                                "line": 44,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          1249,
                          1286
                        ],
                        "loc": {
                          "start": {
                            "line": 43,
                            "column": 15
                          },
                          "end": {
                            "line": 45,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1156,
                        1286
                      ],
                      "loc": {
                        "start": {
                          "line": 41,
                          "column": 8
                        },
                        "end": {
                          "line": 45,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1146,
                    1292
                  ],
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 31
                    },
                    "end": {
                      "line": 46,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1126,
                  1292
                ],
                "loc": {
                  "start": {
                    "line": 40,
                    "column": 11
                  },
                  "end": {
                    "line": 46,
                    "column": 5
                  }
                }
              },
              "range": [
                1119,
                1293
              ],
              "loc": {
                "start": {
                  "line": 40,
                  "column": 4
                },
                "end": {
                  "line": 46,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            862,
            1295
          ],
          "loc": {
            "start": {
              "line": 30,
              "column": 41
            },
            "end": {
              "line": 47,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          828,
          1295
        ],
        "loc": {
          "start": {
            "line": 30,
            "column": 7
          },
          "end": {
            "line": 47,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
            "range": [
              230,
              820
            ],
            "loc": {
              "start": {
                "line": 14,
                "column": 0
              },
              "end": {
                "line": 29,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1298,
              1819
            ],
            "loc": {
              "start": {
                "line": 50,
                "column": 0
              },
              "end": {
                "line": 63,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        821,
        1295
      ],
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 47,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            230,
            820
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 29,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1298,
            1819
          ],
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 63,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "FixedListSchema",
          "range": [
            1836,
            1851
          ],
          "loc": {
            "start": {
              "line": 64,
              "column": 16
            },
            "end": {
              "line": 64,
              "column": 31
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                1855,
                1865
              ],
              "loc": {
                "start": {
                  "line": 64,
                  "column": 35
                },
                "end": {
                  "line": 64,
                  "column": 45
                }
              }
            },
            "range": [
              1852,
              1865
            ],
            "loc": {
              "start": {
                "line": 64,
                "column": 32
              },
              "end": {
                "line": 64,
                "column": 45
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      1889,
                      1898
                    ],
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 20
                      },
                      "end": {
                        "line": 65,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "List",
                              "range": [
                                1914,
                                1918
                              ],
                              "loc": {
                                "start": {
                                  "line": 66,
                                  "column": 12
                                },
                                "end": {
                                  "line": 66,
                                  "column": 16
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isList",
                              "range": [
                                1919,
                                1925
                              ],
                              "loc": {
                                "start": {
                                  "line": 66,
                                  "column": 17
                                },
                                "end": {
                                  "line": 66,
                                  "column": 23
                                }
                              }
                            },
                            "range": [
                              1914,
                              1925
                            ],
                            "loc": {
                              "start": {
                                "line": 66,
                                "column": 12
                              },
                              "end": {
                                "line": 66,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                1926,
                                1935
                              ],
                              "loc": {
                                "start": {
                                  "line": 66,
                                  "column": 24
                                },
                                "end": {
                                  "line": 66,
                                  "column": 33
                                }
                              }
                            }
                          ],
                          "range": [
                            1914,
                            1936
                          ],
                          "loc": {
                            "start": {
                              "line": 66,
                              "column": 12
                            },
                            "end": {
                              "line": 66,
                              "column": 34
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                1940,
                                1949
                              ],
                              "loc": {
                                "start": {
                                  "line": 66,
                                  "column": 38
                                },
                                "end": {
                                  "line": 66,
                                  "column": 47
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "size",
                              "range": [
                                1950,
                                1954
                              ],
                              "loc": {
                                "start": {
                                  "line": 66,
                                  "column": 48
                                },
                                "end": {
                                  "line": 66,
                                  "column": 52
                                }
                              }
                            },
                            "range": [
                              1940,
                              1954
                            ],
                            "loc": {
                              "start": {
                                "line": 66,
                                "column": 38
                              },
                              "end": {
                                "line": 66,
                                "column": 52
                              }
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "validators",
                              "range": [
                                1959,
                                1969
                              ],
                              "loc": {
                                "start": {
                                  "line": 66,
                                  "column": 57
                                },
                                "end": {
                                  "line": 66,
                                  "column": 67
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length",
                              "range": [
                                1970,
                                1976
                              ],
                              "loc": {
                                "start": {
                                  "line": 66,
                                  "column": 68
                                },
                                "end": {
                                  "line": 66,
                                  "column": 74
                                }
                              }
                            },
                            "range": [
                              1959,
                              1976
                            ],
                            "loc": {
                              "start": {
                                "line": 66,
                                "column": 57
                              },
                              "end": {
                                "line": 66,
                                "column": 74
                              }
                            }
                          },
                          "range": [
                            1940,
                            1976
                          ],
                          "loc": {
                            "start": {
                              "line": 66,
                              "column": 38
                            },
                            "end": {
                              "line": 66,
                              "column": 74
                            }
                          }
                        },
                        "range": [
                          1914,
                          1976
                        ],
                        "loc": {
                          "start": {
                            "line": 66,
                            "column": 12
                          },
                          "end": {
                            "line": 66,
                            "column": 74
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    1999,
                                    2008
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 67,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 67,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2009,
                                    2014
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 67,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 67,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  1999,
                                  2014
                                ],
                                "loc": {
                                  "start": {
                                    "line": 67,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 67,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2016,
                                        2021
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 67,
                                          "column": 36
                                        },
                                        "end": {
                                          "line": 67,
                                          "column": 41
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "index",
                                      "range": [
                                        2023,
                                        2028
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 67,
                                          "column": 43
                                        },
                                        "end": {
                                          "line": 67,
                                          "column": 48
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2033,
                                          2043
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 67,
                                            "column": 53
                                          },
                                          "end": {
                                            "line": 67,
                                            "column": 63
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "index",
                                        "range": [
                                          2044,
                                          2049
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 67,
                                            "column": 64
                                          },
                                          "end": {
                                            "line": 67,
                                            "column": 69
                                          }
                                        }
                                      },
                                      "range": [
                                        2033,
                                        2050
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 67,
                                          "column": 53
                                        },
                                        "end": {
                                          "line": 67,
                                          "column": 70
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "value",
                                        "range": [
                                          2051,
                                          2056
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 67,
                                            "column": 71
                                          },
                                          "end": {
                                            "line": 67,
                                            "column": 76
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2033,
                                      2057
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 67,
                                        "column": 53
                                      },
                                      "end": {
                                        "line": 67,
                                        "column": 77
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2015,
                                    2057
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 67,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 67,
                                      "column": 77
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1999,
                                2058
                              ],
                              "loc": {
                                "start": {
                                  "line": 67,
                                  "column": 19
                                },
                                "end": {
                                  "line": 67,
                                  "column": 78
                                }
                              }
                            },
                            "range": [
                              1992,
                              2059
                            ],
                            "loc": {
                              "start": {
                                "line": 67,
                                "column": 12
                              },
                              "end": {
                                "line": 67,
                                "column": 79
                              }
                            }
                          }
                        ],
                        "range": [
                          1978,
                          2069
                        ],
                        "loc": {
                          "start": {
                            "line": 66,
                            "column": 76
                          },
                          "end": {
                            "line": 68,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                2096,
                                2101
                              ],
                              "loc": {
                                "start": {
                                  "line": 69,
                                  "column": 19
                                },
                                "end": {
                                  "line": 69,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              2089,
                              2102
                            ],
                            "loc": {
                              "start": {
                                "line": 69,
                                "column": 12
                              },
                              "end": {
                                "line": 69,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2075,
                          2112
                        ],
                        "loc": {
                          "start": {
                            "line": 68,
                            "column": 15
                          },
                          "end": {
                            "line": 70,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1910,
                        2112
                      ],
                      "loc": {
                        "start": {
                          "line": 66,
                          "column": 8
                        },
                        "end": {
                          "line": 70,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1900,
                    2118
                  ],
                  "loc": {
                    "start": {
                      "line": 65,
                      "column": 31
                    },
                    "end": {
                      "line": 71,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1880,
                  2118
                ],
                "loc": {
                  "start": {
                    "line": 65,
                    "column": 11
                  },
                  "end": {
                    "line": 71,
                    "column": 5
                  }
                }
              },
              "range": [
                1873,
                2119
              ],
              "loc": {
                "start": {
                  "line": 65,
                  "column": 4
                },
                "end": {
                  "line": 71,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            1867,
            2121
          ],
          "loc": {
            "start": {
              "line": 64,
              "column": 47
            },
            "end": {
              "line": 72,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1827,
          2121
        ],
        "loc": {
          "start": {
            "line": 64,
            "column": 7
          },
          "end": {
            "line": 72,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1298,
              1819
            ],
            "loc": {
              "start": {
                "line": 50,
                "column": 0
              },
              "end": {
                "line": 63,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2124,
              2614
            ],
            "loc": {
              "start": {
                "line": 75,
                "column": 0
              },
              "end": {
                "line": 87,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1820,
        2121
      ],
      "loc": {
        "start": {
          "line": 64,
          "column": 0
        },
        "end": {
          "line": 72,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1298,
            1819
          ],
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 63,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2124,
            2614
          ],
          "loc": {
            "start": {
              "line": 75,
              "column": 0
            },
            "end": {
              "line": 87,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ListSchema",
          "range": [
            2631,
            2641
          ],
          "loc": {
            "start": {
              "line": 88,
              "column": 16
            },
            "end": {
              "line": 88,
              "column": 26
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2645,
                2655
              ],
              "loc": {
                "start": {
                  "line": 88,
                  "column": 30
                },
                "end": {
                  "line": 88,
                  "column": 40
                }
              }
            },
            "range": [
              2642,
              2655
            ],
            "loc": {
              "start": {
                "line": 88,
                "column": 27
              },
              "end": {
                "line": 88,
                "column": 40
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2679,
                      2688
                    ],
                    "loc": {
                      "start": {
                        "line": 89,
                        "column": 20
                      },
                      "end": {
                        "line": 89,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "List",
                            "range": [
                              2704,
                              2708
                            ],
                            "loc": {
                              "start": {
                                "line": 90,
                                "column": 12
                              },
                              "end": {
                                "line": 90,
                                "column": 16
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isList",
                            "range": [
                              2709,
                              2715
                            ],
                            "loc": {
                              "start": {
                                "line": 90,
                                "column": 17
                              },
                              "end": {
                                "line": 90,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            2704,
                            2715
                          ],
                          "loc": {
                            "start": {
                              "line": 90,
                              "column": 12
                            },
                            "end": {
                              "line": 90,
                              "column": 23
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              2716,
                              2725
                            ],
                            "loc": {
                              "start": {
                                "line": 90,
                                "column": 24
                              },
                              "end": {
                                "line": 90,
                                "column": 33
                              }
                            }
                          }
                        ],
                        "range": [
                          2704,
                          2726
                        ],
                        "loc": {
                          "start": {
                            "line": 90,
                            "column": 12
                          },
                          "end": {
                            "line": 90,
                            "column": 34
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2749,
                                    2758
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 91,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 91,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2759,
                                    2764
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 91,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 91,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2749,
                                  2764
                                ],
                                "loc": {
                                  "start": {
                                    "line": 91,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 91,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2782,
                                        2787
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 92,
                                          "column": 16
                                        },
                                        "end": {
                                          "line": 92,
                                          "column": 21
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "some",
                                      "range": [
                                        2791,
                                        2795
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 92,
                                          "column": 25
                                        },
                                        "end": {
                                          "line": 92,
                                          "column": 29
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2796,
                                          2806
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 92,
                                            "column": 30
                                          },
                                          "end": {
                                            "line": 92,
                                            "column": 40
                                          }
                                        }
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2808,
                                              2817
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 92,
                                                "column": 42
                                              },
                                              "end": {
                                                "line": 92,
                                                "column": 51
                                              }
                                            }
                                          }
                                        ],
                                        "body": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2821,
                                              2830
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 92,
                                                "column": 55
                                              },
                                              "end": {
                                                "line": 92,
                                                "column": 64
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value",
                                              "range": [
                                                2831,
                                                2836
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 92,
                                                  "column": 65
                                                },
                                                "end": {
                                                  "line": 92,
                                                  "column": 70
                                                }
                                              }
                                            }
                                          ],
                                          "range": [
                                            2821,
                                            2837
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 92,
                                              "column": 55
                                            },
                                            "end": {
                                              "line": 92,
                                              "column": 71
                                            }
                                          }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "range": [
                                          2808,
                                          2837
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 92,
                                            "column": 42
                                          },
                                          "end": {
                                            "line": 92,
                                            "column": 71
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2791,
                                      2838
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 92,
                                        "column": 25
                                      },
                                      "end": {
                                        "line": 92,
                                        "column": 72
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2782,
                                    2838
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 92,
                                      "column": 16
                                    },
                                    "end": {
                                      "line": 92,
                                      "column": 72
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2749,
                                2852
                              ],
                              "loc": {
                                "start": {
                                  "line": 91,
                                  "column": 19
                                },
                                "end": {
                                  "line": 93,
                                  "column": 13
                                }
                              }
                            },
                            "range": [
                              2742,
                              2853
                            ],
                            "loc": {
                              "start": {
                                "line": 91,
                                "column": 12
                              },
                              "end": {
                                "line": 93,
                                "column": 14
                              }
                            }
                          }
                        ],
                        "range": [
                          2728,
                          2863
                        ],
                        "loc": {
                          "start": {
                            "line": 90,
                            "column": 36
                          },
                          "end": {
                            "line": 94,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                2890,
                                2895
                              ],
                              "loc": {
                                "start": {
                                  "line": 95,
                                  "column": 19
                                },
                                "end": {
                                  "line": 95,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              2883,
                              2896
                            ],
                            "loc": {
                              "start": {
                                "line": 95,
                                "column": 12
                              },
                              "end": {
                                "line": 95,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2869,
                          2906
                        ],
                        "loc": {
                          "start": {
                            "line": 94,
                            "column": 15
                          },
                          "end": {
                            "line": 96,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2700,
                        2906
                      ],
                      "loc": {
                        "start": {
                          "line": 90,
                          "column": 8
                        },
                        "end": {
                          "line": 96,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2690,
                    2912
                  ],
                  "loc": {
                    "start": {
                      "line": 89,
                      "column": 31
                    },
                    "end": {
                      "line": 97,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2670,
                  2912
                ],
                "loc": {
                  "start": {
                    "line": 89,
                    "column": 11
                  },
                  "end": {
                    "line": 97,
                    "column": 5
                  }
                }
              },
              "range": [
                2663,
                2913
              ],
              "loc": {
                "start": {
                  "line": 89,
                  "column": 4
                },
                "end": {
                  "line": 97,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2657,
            2915
          ],
          "loc": {
            "start": {
              "line": 88,
              "column": 42
            },
            "end": {
              "line": 98,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2622,
          2915
        ],
        "loc": {
          "start": {
            "line": 88,
            "column": 7
          },
          "end": {
            "line": 98,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2124,
              2614
            ],
            "loc": {
              "start": {
                "line": 75,
                "column": 0
              },
              "end": {
                "line": 87,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              2918,
              3249
            ],
            "loc": {
              "start": {
                "line": 101,
                "column": 0
              },
              "end": {
                "line": 112,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2615,
        2915
      ],
      "loc": {
        "start": {
          "line": 88,
          "column": 0
        },
        "end": {
          "line": 98,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2124,
            2614
          ],
          "loc": {
            "start": {
              "line": 75,
              "column": 0
            },
            "end": {
              "line": 87,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            2918,
            3249
          ],
          "loc": {
            "start": {
              "line": 101,
              "column": 0
            },
            "end": {
              "line": 112,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Exactly",
          "range": [
            3266,
            3273
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 16
            },
            "end": {
              "line": 113,
              "column": 23
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "value",
            "range": [
              3274,
              3279
            ],
            "loc": {
              "start": {
                "line": 113,
                "column": 24
              },
              "end": {
                "line": 113,
                "column": 29
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3294,
                      3303
                    ],
                    "loc": {
                      "start": {
                        "line": 114,
                        "column": 11
                      },
                      "end": {
                        "line": 114,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      3307,
                      3312
                    ],
                    "loc": {
                      "start": {
                        "line": 114,
                        "column": 24
                      },
                      "end": {
                        "line": 114,
                        "column": 29
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3317,
                      3326
                    ],
                    "loc": {
                      "start": {
                        "line": 114,
                        "column": 34
                      },
                      "end": {
                        "line": 114,
                        "column": 43
                      }
                    }
                  },
                  "range": [
                    3307,
                    3326
                  ],
                  "loc": {
                    "start": {
                      "line": 114,
                      "column": 24
                    },
                    "end": {
                      "line": 114,
                      "column": 43
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3294,
                  3326
                ],
                "loc": {
                  "start": {
                    "line": 114,
                    "column": 11
                  },
                  "end": {
                    "line": 114,
                    "column": 43
                  }
                }
              },
              "range": [
                3287,
                3327
              ],
              "loc": {
                "start": {
                  "line": 114,
                  "column": 4
                },
                "end": {
                  "line": 114,
                  "column": 44
                }
              }
            }
          ],
          "range": [
            3281,
            3329
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 31
            },
            "end": {
              "line": 115,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3257,
          3329
        ],
        "loc": {
          "start": {
            "line": 113,
            "column": 7
          },
          "end": {
            "line": 115,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              2918,
              3249
            ],
            "loc": {
              "start": {
                "line": 101,
                "column": 0
              },
              "end": {
                "line": 112,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3332,
              3760
            ],
            "loc": {
              "start": {
                "line": 118,
                "column": 0
              },
              "end": {
                "line": 131,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        3250,
        3329
      ],
      "loc": {
        "start": {
          "line": 113,
          "column": 0
        },
        "end": {
          "line": 115,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            2918,
            3249
          ],
          "loc": {
            "start": {
              "line": 101,
              "column": 0
            },
            "end": {
              "line": 112,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3332,
            3760
          ],
          "loc": {
            "start": {
              "line": 118,
              "column": 0
            },
            "end": {
              "line": 131,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "OneOf",
          "range": [
            3777,
            3782
          ],
          "loc": {
            "start": {
              "line": 132,
              "column": 16
            },
            "end": {
              "line": 132,
              "column": 21
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "values",
              "range": [
                3786,
                3792
              ],
              "loc": {
                "start": {
                  "line": 132,
                  "column": 25
                },
                "end": {
                  "line": 132,
                  "column": 31
                }
              }
            },
            "range": [
              3783,
              3792
            ],
            "loc": {
              "start": {
                "line": 132,
                "column": 22
              },
              "end": {
                "line": 132,
                "column": 31
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3807,
                      3816
                    ],
                    "loc": {
                      "start": {
                        "line": 133,
                        "column": 11
                      },
                      "end": {
                        "line": 133,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "some",
                    "range": [
                      3820,
                      3824
                    ],
                    "loc": {
                      "start": {
                        "line": 133,
                        "column": 24
                      },
                      "end": {
                        "line": 133,
                        "column": 28
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "values",
                      "range": [
                        3825,
                        3831
                      ],
                      "loc": {
                        "start": {
                          "line": 133,
                          "column": 29
                        },
                        "end": {
                          "line": 133,
                          "column": 35
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "Exactly",
                      "range": [
                        3833,
                        3840
                      ],
                      "loc": {
                        "start": {
                          "line": 133,
                          "column": 37
                        },
                        "end": {
                          "line": 133,
                          "column": 44
                        }
                      }
                    }
                  ],
                  "range": [
                    3820,
                    3841
                  ],
                  "loc": {
                    "start": {
                      "line": 133,
                      "column": 24
                    },
                    "end": {
                      "line": 133,
                      "column": 45
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3807,
                  3841
                ],
                "loc": {
                  "start": {
                    "line": 133,
                    "column": 11
                  },
                  "end": {
                    "line": 133,
                    "column": 45
                  }
                }
              },
              "range": [
                3800,
                3842
              ],
              "loc": {
                "start": {
                  "line": 133,
                  "column": 4
                },
                "end": {
                  "line": 133,
                  "column": 46
                }
              }
            }
          ],
          "range": [
            3794,
            3844
          ],
          "loc": {
            "start": {
              "line": 132,
              "column": 33
            },
            "end": {
              "line": 134,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3768,
          3844
        ],
        "loc": {
          "start": {
            "line": 132,
            "column": 7
          },
          "end": {
            "line": 134,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3332,
              3760
            ],
            "loc": {
              "start": {
                "line": 118,
                "column": 0
              },
              "end": {
                "line": 131,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        3761,
        3844
      ],
      "loc": {
        "start": {
          "line": 132,
          "column": 0
        },
        "end": {
          "line": 134,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3332,
            3760
          ],
          "loc": {
            "start": {
              "line": 118,
              "column": 0
            },
            "end": {
              "line": 131,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    3844
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 134,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * @private\n ",
      "range": [
        75,
        94
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
      "range": [
        230,
        820
      ],
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
      "range": [
        1298,
        1819
      ],
      "loc": {
        "start": {
          "line": 50,
          "column": 0
        },
        "end": {
          "line": 63,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
      "range": [
        2124,
        2614
      ],
      "loc": {
        "start": {
          "line": 75,
          "column": 0
        },
        "end": {
          "line": 87,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
      "range": [
        2918,
        3249
      ],
      "loc": {
        "start": {
          "line": 101,
          "column": 0
        },
        "end": {
          "line": 112,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
      "range": [
        3332,
        3760
      ],
      "loc": {
        "start": {
          "line": 118,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 3
        }
      }
    }
  ]
}