{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            8,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 8
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            15,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 15
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "lodash",
        "raw": "'lodash'",
        "range": [
          26,
          34
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 26
          },
          "end": {
            "line": 1,
            "column": 34
          }
        }
      },
      "range": [
        0,
        35
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 35
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "range": [
            44,
            47
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 8
            },
            "end": {
              "line": 2,
              "column": 11
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "range": [
            49,
            53
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 13
            },
            "end": {
              "line": 2,
              "column": 17
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "immutable",
        "raw": "'immutable'",
        "range": [
          60,
          71
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 24
          },
          "end": {
            "line": 2,
            "column": 35
          }
        }
      },
      "range": [
        36,
        72
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 36
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array}\n * @param {*}\n * @param {*}\n ",
          "range": [
            75,
            217
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "checkPair",
        "range": [
          227,
          236
        ],
        "loc": {
          "start": {
            "line": 13,
            "column": 9
          },
          "end": {
            "line": 13,
            "column": 18
          }
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pair",
          "range": [
            237,
            241
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 19
            },
            "end": {
              "line": 13,
              "column": 23
            }
          }
        },
        {
          "type": "Identifier",
          "name": "key",
          "range": [
            243,
            246
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 25
            },
            "end": {
              "line": 13,
              "column": 28
            }
          }
        },
        {
          "type": "Identifier",
          "name": "value",
          "range": [
            248,
            253
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 30
            },
            "end": {
              "line": 13,
              "column": 35
            }
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "ArrayPattern",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "key_check",
                      "range": [
                        268,
                        277
                      ],
                      "loc": {
                        "start": {
                          "line": 14,
                          "column": 11
                        },
                        "end": {
                          "line": 14,
                          "column": 20
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "value_check",
                      "range": [
                        279,
                        290
                      ],
                      "loc": {
                        "start": {
                          "line": 14,
                          "column": 22
                        },
                        "end": {
                          "line": 14,
                          "column": 33
                        }
                      }
                    }
                  ],
                  "range": [
                    267,
                    291
                  ],
                  "loc": {
                    "start": {
                      "line": 14,
                      "column": 10
                    },
                    "end": {
                      "line": 14,
                      "column": 34
                    }
                  }
                },
                "init": {
                  "type": "Identifier",
                  "name": "pair",
                  "range": [
                    294,
                    298
                  ],
                  "loc": {
                    "start": {
                      "line": 14,
                      "column": 37
                    },
                    "end": {
                      "line": 14,
                      "column": 41
                    }
                  }
                },
                "range": [
                  267,
                  298
                ],
                "loc": {
                  "start": {
                    "line": 14,
                    "column": 10
                  },
                  "end": {
                    "line": 14,
                    "column": 41
                  }
                }
              }
            ],
            "kind": "const",
            "range": [
              261,
              299
            ],
            "loc": {
              "start": {
                "line": 14,
                "column": 4
              },
              "end": {
                "line": 14,
                "column": 42
              }
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "key_check",
                  "range": [
                    311,
                    320
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 11
                    },
                    "end": {
                      "line": 15,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "key",
                    "range": [
                      321,
                      324
                    ],
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 21
                      },
                      "end": {
                        "line": 15,
                        "column": 24
                      }
                    }
                  }
                ],
                "range": [
                  311,
                  325
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 11
                  },
                  "end": {
                    "line": 15,
                    "column": 25
                  }
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "value_check",
                  "range": [
                    329,
                    340
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 29
                    },
                    "end": {
                      "line": 15,
                      "column": 40
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      341,
                      346
                    ],
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 41
                      },
                      "end": {
                        "line": 15,
                        "column": 46
                      }
                    }
                  }
                ],
                "range": [
                  329,
                  347
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 29
                  },
                  "end": {
                    "line": 15,
                    "column": 47
                  }
                }
              },
              "range": [
                311,
                347
              ],
              "loc": {
                "start": {
                  "line": 15,
                  "column": 11
                },
                "end": {
                  "line": 15,
                  "column": 47
                }
              }
            },
            "range": [
              304,
              348
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 4
              },
              "end": {
                "line": 15,
                "column": 48
              }
            }
          }
        ],
        "range": [
          255,
          350
        ],
        "loc": {
          "start": {
            "line": 13,
            "column": 37
          },
          "end": {
            "line": 16,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        218,
        350
      ],
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array}\n * @param {*}\n * @param {*}\n ",
          "range": [
            75,
            217
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            353,
            943
          ],
          "loc": {
            "start": {
              "line": 19,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "MapSchema",
          "range": [
            960,
            969
          ],
          "loc": {
            "start": {
              "line": 35,
              "column": 16
            },
            "end": {
              "line": 35,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                973,
                983
              ],
              "loc": {
                "start": {
                  "line": 35,
                  "column": 29
                },
                "end": {
                  "line": 35,
                  "column": 39
                }
              }
            },
            "range": [
              970,
              983
            ],
            "loc": {
              "start": {
                "line": 35,
                "column": 26
              },
              "end": {
                "line": 35,
                "column": 39
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "pairs",
                    "range": [
                      997,
                      1002
                    ],
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 10
                      },
                      "end": {
                        "line": 36,
                        "column": 15
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "chunk",
                      "range": [
                        1005,
                        1010
                      ],
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 18
                        },
                        "end": {
                          "line": 36,
                          "column": 23
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "validators",
                        "range": [
                          1011,
                          1021
                        ],
                        "loc": {
                          "start": {
                            "line": 36,
                            "column": 24
                          },
                          "end": {
                            "line": 36,
                            "column": 34
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "range": [
                          1023,
                          1024
                        ],
                        "loc": {
                          "start": {
                            "line": 36,
                            "column": 36
                          },
                          "end": {
                            "line": 36,
                            "column": 37
                          }
                        }
                      }
                    ],
                    "range": [
                      1005,
                      1025
                    ],
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 18
                      },
                      "end": {
                        "line": 36,
                        "column": 38
                      }
                    }
                  },
                  "range": [
                    997,
                    1025
                  ],
                  "loc": {
                    "start": {
                      "line": 36,
                      "column": 10
                    },
                    "end": {
                      "line": 36,
                      "column": 38
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                991,
                1026
              ],
              "loc": {
                "start": {
                  "line": 36,
                  "column": 4
                },
                "end": {
                  "line": 36,
                  "column": 39
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "%",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "validators",
                      "range": [
                        1035,
                        1045
                      ],
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 8
                        },
                        "end": {
                          "line": 37,
                          "column": 18
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "range": [
                        1046,
                        1052
                      ],
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 19
                        },
                        "end": {
                          "line": 37,
                          "column": 25
                        }
                      }
                    },
                    "range": [
                      1035,
                      1052
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 8
                      },
                      "end": {
                        "line": 37,
                        "column": 25
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "range": [
                      1055,
                      1056
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 28
                      },
                      "end": {
                        "line": 37,
                        "column": 29
                      }
                    }
                  },
                  "range": [
                    1035,
                    1056
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 8
                    },
                    "end": {
                      "line": 37,
                      "column": 29
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "range": [
                    1061,
                    1062
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 34
                    },
                    "end": {
                      "line": 37,
                      "column": 35
                    }
                  }
                },
                "range": [
                  1035,
                  1062
                ],
                "loc": {
                  "start": {
                    "line": 37,
                    "column": 8
                  },
                  "end": {
                    "line": 37,
                    "column": 35
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Literal",
                      "value": "Must have even length of validators",
                      "raw": "'Must have even length of validators'",
                      "range": [
                        1080,
                        1117
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 14
                        },
                        "end": {
                          "line": 38,
                          "column": 51
                        }
                      }
                    },
                    "range": [
                      1074,
                      1118
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 8
                      },
                      "end": {
                        "line": 38,
                        "column": 52
                      }
                    }
                  }
                ],
                "range": [
                  1064,
                  1124
                ],
                "loc": {
                  "start": {
                    "line": 37,
                    "column": 37
                  },
                  "end": {
                    "line": 39,
                    "column": 5
                  }
                }
              },
              "alternate": null,
              "range": [
                1031,
                1124
              ],
              "loc": {
                "start": {
                  "line": 37,
                  "column": 4
                },
                "end": {
                  "line": 39,
                  "column": 5
                }
              }
            },
            {
              "type": "FunctionDeclaration",
              "id": {
                "type": "Identifier",
                "name": "validatePair",
                "range": [
                  1139,
                  1151
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 13
                  },
                  "end": {
                    "line": 41,
                    "column": 25
                  }
                }
              },
              "params": [
                {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    1152,
                    1157
                  ],
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 26
                    },
                    "end": {
                      "line": 41,
                      "column": 31
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "key",
                  "range": [
                    1159,
                    1162
                  ],
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 33
                    },
                    "end": {
                      "line": 41,
                      "column": 36
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "some",
                        "range": [
                          1181,
                          1185
                        ],
                        "loc": {
                          "start": {
                            "line": 42,
                            "column": 15
                          },
                          "end": {
                            "line": 42,
                            "column": 19
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "pairs",
                          "range": [
                            1186,
                            1191
                          ],
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 20
                            },
                            "end": {
                              "line": 42,
                              "column": 25
                            }
                          }
                        },
                        {
                          "type": "ArrowFunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "pair",
                              "range": [
                                1193,
                                1197
                              ],
                              "loc": {
                                "start": {
                                  "line": 42,
                                  "column": 27
                                },
                                "end": {
                                  "line": 42,
                                  "column": 31
                                }
                              }
                            }
                          ],
                          "body": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "checkPair",
                              "range": [
                                1201,
                                1210
                              ],
                              "loc": {
                                "start": {
                                  "line": 42,
                                  "column": 35
                                },
                                "end": {
                                  "line": 42,
                                  "column": 44
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "pair",
                                "range": [
                                  1211,
                                  1215
                                ],
                                "loc": {
                                  "start": {
                                    "line": 42,
                                    "column": 45
                                  },
                                  "end": {
                                    "line": 42,
                                    "column": 49
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "key",
                                "range": [
                                  1217,
                                  1220
                                ],
                                "loc": {
                                  "start": {
                                    "line": 42,
                                    "column": 51
                                  },
                                  "end": {
                                    "line": 42,
                                    "column": 54
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "value",
                                "range": [
                                  1222,
                                  1227
                                ],
                                "loc": {
                                  "start": {
                                    "line": 42,
                                    "column": 56
                                  },
                                  "end": {
                                    "line": 42,
                                    "column": 61
                                  }
                                }
                              }
                            ],
                            "range": [
                              1201,
                              1228
                            ],
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 35
                              },
                              "end": {
                                "line": 42,
                                "column": 62
                              }
                            }
                          },
                          "generator": false,
                          "expression": true,
                          "range": [
                            1193,
                            1228
                          ],
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 27
                            },
                            "end": {
                              "line": 42,
                              "column": 62
                            }
                          }
                        }
                      ],
                      "range": [
                        1181,
                        1229
                      ],
                      "loc": {
                        "start": {
                          "line": 42,
                          "column": 15
                        },
                        "end": {
                          "line": 42,
                          "column": 63
                        }
                      }
                    },
                    "range": [
                      1174,
                      1230
                    ],
                    "loc": {
                      "start": {
                        "line": 42,
                        "column": 8
                      },
                      "end": {
                        "line": 42,
                        "column": 64
                      }
                    }
                  }
                ],
                "range": [
                  1164,
                  1236
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 38
                  },
                  "end": {
                    "line": 43,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1130,
                1236
              ],
              "loc": {
                "start": {
                  "line": 41,
                  "column": 4
                },
                "end": {
                  "line": 43,
                  "column": 5
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      1258,
                      1267
                    ],
                    "loc": {
                      "start": {
                        "line": 45,
                        "column": 20
                      },
                      "end": {
                        "line": 45,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Map",
                            "range": [
                              1283,
                              1286
                            ],
                            "loc": {
                              "start": {
                                "line": 46,
                                "column": 12
                              },
                              "end": {
                                "line": 46,
                                "column": 15
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isMap",
                            "range": [
                              1287,
                              1292
                            ],
                            "loc": {
                              "start": {
                                "line": 46,
                                "column": 16
                              },
                              "end": {
                                "line": 46,
                                "column": 21
                              }
                            }
                          },
                          "range": [
                            1283,
                            1292
                          ],
                          "loc": {
                            "start": {
                              "line": 46,
                              "column": 12
                            },
                            "end": {
                              "line": 46,
                              "column": 21
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              1293,
                              1302
                            ],
                            "loc": {
                              "start": {
                                "line": 46,
                                "column": 22
                              },
                              "end": {
                                "line": 46,
                                "column": 31
                              }
                            }
                          }
                        ],
                        "range": [
                          1283,
                          1303
                        ],
                        "loc": {
                          "start": {
                            "line": 46,
                            "column": 12
                          },
                          "end": {
                            "line": 46,
                            "column": 32
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    1326,
                                    1335
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 47,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 47,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    1336,
                                    1341
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 47,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 47,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  1326,
                                  1341
                                ],
                                "loc": {
                                  "start": {
                                    "line": 47,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 47,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "validatePair",
                                  "range": [
                                    1342,
                                    1354
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 47,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 47,
                                      "column": 47
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1326,
                                1355
                              ],
                              "loc": {
                                "start": {
                                  "line": 47,
                                  "column": 19
                                },
                                "end": {
                                  "line": 47,
                                  "column": 48
                                }
                              }
                            },
                            "range": [
                              1319,
                              1356
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 12
                              },
                              "end": {
                                "line": 47,
                                "column": 49
                              }
                            }
                          }
                        ],
                        "range": [
                          1305,
                          1366
                        ],
                        "loc": {
                          "start": {
                            "line": 46,
                            "column": 34
                          },
                          "end": {
                            "line": 48,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                1393,
                                1398
                              ],
                              "loc": {
                                "start": {
                                  "line": 49,
                                  "column": 19
                                },
                                "end": {
                                  "line": 49,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              1386,
                              1399
                            ],
                            "loc": {
                              "start": {
                                "line": 49,
                                "column": 12
                              },
                              "end": {
                                "line": 49,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          1372,
                          1409
                        ],
                        "loc": {
                          "start": {
                            "line": 48,
                            "column": 15
                          },
                          "end": {
                            "line": 50,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1279,
                        1409
                      ],
                      "loc": {
                        "start": {
                          "line": 46,
                          "column": 8
                        },
                        "end": {
                          "line": 50,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1269,
                    1415
                  ],
                  "loc": {
                    "start": {
                      "line": 45,
                      "column": 31
                    },
                    "end": {
                      "line": 51,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1249,
                  1415
                ],
                "loc": {
                  "start": {
                    "line": 45,
                    "column": 11
                  },
                  "end": {
                    "line": 51,
                    "column": 5
                  }
                }
              },
              "range": [
                1242,
                1416
              ],
              "loc": {
                "start": {
                  "line": 45,
                  "column": 4
                },
                "end": {
                  "line": 51,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            985,
            1418
          ],
          "loc": {
            "start": {
              "line": 35,
              "column": 41
            },
            "end": {
              "line": 52,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          951,
          1418
        ],
        "loc": {
          "start": {
            "line": 35,
            "column": 7
          },
          "end": {
            "line": 52,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
            "range": [
              353,
              943
            ],
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 34,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1421,
              1942
            ],
            "loc": {
              "start": {
                "line": 55,
                "column": 0
              },
              "end": {
                "line": 68,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        944,
        1418
      ],
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 52,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            353,
            943
          ],
          "loc": {
            "start": {
              "line": 19,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1421,
            1942
          ],
          "loc": {
            "start": {
              "line": 55,
              "column": 0
            },
            "end": {
              "line": 68,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "FixedListSchema",
          "range": [
            1959,
            1974
          ],
          "loc": {
            "start": {
              "line": 69,
              "column": 16
            },
            "end": {
              "line": 69,
              "column": 31
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                1978,
                1988
              ],
              "loc": {
                "start": {
                  "line": 69,
                  "column": 35
                },
                "end": {
                  "line": 69,
                  "column": 45
                }
              }
            },
            "range": [
              1975,
              1988
            ],
            "loc": {
              "start": {
                "line": 69,
                "column": 32
              },
              "end": {
                "line": 69,
                "column": 45
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2012,
                      2021
                    ],
                    "loc": {
                      "start": {
                        "line": 70,
                        "column": 20
                      },
                      "end": {
                        "line": 70,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "List",
                              "range": [
                                2037,
                                2041
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 12
                                },
                                "end": {
                                  "line": 71,
                                  "column": 16
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isList",
                              "range": [
                                2042,
                                2048
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 17
                                },
                                "end": {
                                  "line": 71,
                                  "column": 23
                                }
                              }
                            },
                            "range": [
                              2037,
                              2048
                            ],
                            "loc": {
                              "start": {
                                "line": 71,
                                "column": 12
                              },
                              "end": {
                                "line": 71,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2049,
                                2058
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 24
                                },
                                "end": {
                                  "line": 71,
                                  "column": 33
                                }
                              }
                            }
                          ],
                          "range": [
                            2037,
                            2059
                          ],
                          "loc": {
                            "start": {
                              "line": 71,
                              "column": 12
                            },
                            "end": {
                              "line": 71,
                              "column": 34
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2063,
                                2072
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 38
                                },
                                "end": {
                                  "line": 71,
                                  "column": 47
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "size",
                              "range": [
                                2073,
                                2077
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 48
                                },
                                "end": {
                                  "line": 71,
                                  "column": 52
                                }
                              }
                            },
                            "range": [
                              2063,
                              2077
                            ],
                            "loc": {
                              "start": {
                                "line": 71,
                                "column": 38
                              },
                              "end": {
                                "line": 71,
                                "column": 52
                              }
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "validators",
                              "range": [
                                2082,
                                2092
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 57
                                },
                                "end": {
                                  "line": 71,
                                  "column": 67
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length",
                              "range": [
                                2093,
                                2099
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 68
                                },
                                "end": {
                                  "line": 71,
                                  "column": 74
                                }
                              }
                            },
                            "range": [
                              2082,
                              2099
                            ],
                            "loc": {
                              "start": {
                                "line": 71,
                                "column": 57
                              },
                              "end": {
                                "line": 71,
                                "column": 74
                              }
                            }
                          },
                          "range": [
                            2063,
                            2099
                          ],
                          "loc": {
                            "start": {
                              "line": 71,
                              "column": 38
                            },
                            "end": {
                              "line": 71,
                              "column": 74
                            }
                          }
                        },
                        "range": [
                          2037,
                          2099
                        ],
                        "loc": {
                          "start": {
                            "line": 71,
                            "column": 12
                          },
                          "end": {
                            "line": 71,
                            "column": 74
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2122,
                                    2131
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 72,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 72,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2132,
                                    2137
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 72,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 72,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2122,
                                  2137
                                ],
                                "loc": {
                                  "start": {
                                    "line": 72,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 72,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2139,
                                        2144
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 72,
                                          "column": 36
                                        },
                                        "end": {
                                          "line": 72,
                                          "column": 41
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "index",
                                      "range": [
                                        2146,
                                        2151
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 72,
                                          "column": 43
                                        },
                                        "end": {
                                          "line": 72,
                                          "column": 48
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2156,
                                          2166
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 72,
                                            "column": 53
                                          },
                                          "end": {
                                            "line": 72,
                                            "column": 63
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "index",
                                        "range": [
                                          2167,
                                          2172
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 72,
                                            "column": 64
                                          },
                                          "end": {
                                            "line": 72,
                                            "column": 69
                                          }
                                        }
                                      },
                                      "range": [
                                        2156,
                                        2173
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 72,
                                          "column": 53
                                        },
                                        "end": {
                                          "line": 72,
                                          "column": 70
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "value",
                                        "range": [
                                          2174,
                                          2179
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 72,
                                            "column": 71
                                          },
                                          "end": {
                                            "line": 72,
                                            "column": 76
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2156,
                                      2180
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 72,
                                        "column": 53
                                      },
                                      "end": {
                                        "line": 72,
                                        "column": 77
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2138,
                                    2180
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 72,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 72,
                                      "column": 77
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2122,
                                2181
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 19
                                },
                                "end": {
                                  "line": 72,
                                  "column": 78
                                }
                              }
                            },
                            "range": [
                              2115,
                              2182
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 12
                              },
                              "end": {
                                "line": 72,
                                "column": 79
                              }
                            }
                          }
                        ],
                        "range": [
                          2101,
                          2192
                        ],
                        "loc": {
                          "start": {
                            "line": 71,
                            "column": 76
                          },
                          "end": {
                            "line": 73,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                2219,
                                2224
                              ],
                              "loc": {
                                "start": {
                                  "line": 74,
                                  "column": 19
                                },
                                "end": {
                                  "line": 74,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              2212,
                              2225
                            ],
                            "loc": {
                              "start": {
                                "line": 74,
                                "column": 12
                              },
                              "end": {
                                "line": 74,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2198,
                          2235
                        ],
                        "loc": {
                          "start": {
                            "line": 73,
                            "column": 15
                          },
                          "end": {
                            "line": 75,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2033,
                        2235
                      ],
                      "loc": {
                        "start": {
                          "line": 71,
                          "column": 8
                        },
                        "end": {
                          "line": 75,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2023,
                    2241
                  ],
                  "loc": {
                    "start": {
                      "line": 70,
                      "column": 31
                    },
                    "end": {
                      "line": 76,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2003,
                  2241
                ],
                "loc": {
                  "start": {
                    "line": 70,
                    "column": 11
                  },
                  "end": {
                    "line": 76,
                    "column": 5
                  }
                }
              },
              "range": [
                1996,
                2242
              ],
              "loc": {
                "start": {
                  "line": 70,
                  "column": 4
                },
                "end": {
                  "line": 76,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            1990,
            2244
          ],
          "loc": {
            "start": {
              "line": 69,
              "column": 47
            },
            "end": {
              "line": 77,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1950,
          2244
        ],
        "loc": {
          "start": {
            "line": 69,
            "column": 7
          },
          "end": {
            "line": 77,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1421,
              1942
            ],
            "loc": {
              "start": {
                "line": 55,
                "column": 0
              },
              "end": {
                "line": 68,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2247,
              2737
            ],
            "loc": {
              "start": {
                "line": 80,
                "column": 0
              },
              "end": {
                "line": 92,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1943,
        2244
      ],
      "loc": {
        "start": {
          "line": 69,
          "column": 0
        },
        "end": {
          "line": 77,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1421,
            1942
          ],
          "loc": {
            "start": {
              "line": 55,
              "column": 0
            },
            "end": {
              "line": 68,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2247,
            2737
          ],
          "loc": {
            "start": {
              "line": 80,
              "column": 0
            },
            "end": {
              "line": 92,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ListSchema",
          "range": [
            2754,
            2764
          ],
          "loc": {
            "start": {
              "line": 93,
              "column": 16
            },
            "end": {
              "line": 93,
              "column": 26
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2768,
                2778
              ],
              "loc": {
                "start": {
                  "line": 93,
                  "column": 30
                },
                "end": {
                  "line": 93,
                  "column": 40
                }
              }
            },
            "range": [
              2765,
              2778
            ],
            "loc": {
              "start": {
                "line": 93,
                "column": 27
              },
              "end": {
                "line": 93,
                "column": 40
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2802,
                      2811
                    ],
                    "loc": {
                      "start": {
                        "line": 94,
                        "column": 20
                      },
                      "end": {
                        "line": 94,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "List",
                            "range": [
                              2827,
                              2831
                            ],
                            "loc": {
                              "start": {
                                "line": 95,
                                "column": 12
                              },
                              "end": {
                                "line": 95,
                                "column": 16
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isList",
                            "range": [
                              2832,
                              2838
                            ],
                            "loc": {
                              "start": {
                                "line": 95,
                                "column": 17
                              },
                              "end": {
                                "line": 95,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            2827,
                            2838
                          ],
                          "loc": {
                            "start": {
                              "line": 95,
                              "column": 12
                            },
                            "end": {
                              "line": 95,
                              "column": 23
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              2839,
                              2848
                            ],
                            "loc": {
                              "start": {
                                "line": 95,
                                "column": 24
                              },
                              "end": {
                                "line": 95,
                                "column": 33
                              }
                            }
                          }
                        ],
                        "range": [
                          2827,
                          2849
                        ],
                        "loc": {
                          "start": {
                            "line": 95,
                            "column": 12
                          },
                          "end": {
                            "line": 95,
                            "column": 34
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2872,
                                    2881
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 96,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 96,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2882,
                                    2887
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 96,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 96,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2872,
                                  2887
                                ],
                                "loc": {
                                  "start": {
                                    "line": 96,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 96,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2905,
                                        2910
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 97,
                                          "column": 16
                                        },
                                        "end": {
                                          "line": 97,
                                          "column": 21
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "some",
                                      "range": [
                                        2914,
                                        2918
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 97,
                                          "column": 25
                                        },
                                        "end": {
                                          "line": 97,
                                          "column": 29
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2919,
                                          2929
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 97,
                                            "column": 30
                                          },
                                          "end": {
                                            "line": 97,
                                            "column": 40
                                          }
                                        }
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2931,
                                              2940
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 97,
                                                "column": 42
                                              },
                                              "end": {
                                                "line": 97,
                                                "column": 51
                                              }
                                            }
                                          }
                                        ],
                                        "body": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2944,
                                              2953
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 97,
                                                "column": 55
                                              },
                                              "end": {
                                                "line": 97,
                                                "column": 64
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value",
                                              "range": [
                                                2954,
                                                2959
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 97,
                                                  "column": 65
                                                },
                                                "end": {
                                                  "line": 97,
                                                  "column": 70
                                                }
                                              }
                                            }
                                          ],
                                          "range": [
                                            2944,
                                            2960
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 97,
                                              "column": 55
                                            },
                                            "end": {
                                              "line": 97,
                                              "column": 71
                                            }
                                          }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "range": [
                                          2931,
                                          2960
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 97,
                                            "column": 42
                                          },
                                          "end": {
                                            "line": 97,
                                            "column": 71
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2914,
                                      2961
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 97,
                                        "column": 25
                                      },
                                      "end": {
                                        "line": 97,
                                        "column": 72
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2905,
                                    2961
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 97,
                                      "column": 16
                                    },
                                    "end": {
                                      "line": 97,
                                      "column": 72
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2872,
                                2975
                              ],
                              "loc": {
                                "start": {
                                  "line": 96,
                                  "column": 19
                                },
                                "end": {
                                  "line": 98,
                                  "column": 13
                                }
                              }
                            },
                            "range": [
                              2865,
                              2976
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 12
                              },
                              "end": {
                                "line": 98,
                                "column": 14
                              }
                            }
                          }
                        ],
                        "range": [
                          2851,
                          2986
                        ],
                        "loc": {
                          "start": {
                            "line": 95,
                            "column": 36
                          },
                          "end": {
                            "line": 99,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                3013,
                                3018
                              ],
                              "loc": {
                                "start": {
                                  "line": 100,
                                  "column": 19
                                },
                                "end": {
                                  "line": 100,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              3006,
                              3019
                            ],
                            "loc": {
                              "start": {
                                "line": 100,
                                "column": 12
                              },
                              "end": {
                                "line": 100,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2992,
                          3029
                        ],
                        "loc": {
                          "start": {
                            "line": 99,
                            "column": 15
                          },
                          "end": {
                            "line": 101,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2823,
                        3029
                      ],
                      "loc": {
                        "start": {
                          "line": 95,
                          "column": 8
                        },
                        "end": {
                          "line": 101,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2813,
                    3035
                  ],
                  "loc": {
                    "start": {
                      "line": 94,
                      "column": 31
                    },
                    "end": {
                      "line": 102,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2793,
                  3035
                ],
                "loc": {
                  "start": {
                    "line": 94,
                    "column": 11
                  },
                  "end": {
                    "line": 102,
                    "column": 5
                  }
                }
              },
              "range": [
                2786,
                3036
              ],
              "loc": {
                "start": {
                  "line": 94,
                  "column": 4
                },
                "end": {
                  "line": 102,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2780,
            3038
          ],
          "loc": {
            "start": {
              "line": 93,
              "column": 42
            },
            "end": {
              "line": 103,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2745,
          3038
        ],
        "loc": {
          "start": {
            "line": 93,
            "column": 7
          },
          "end": {
            "line": 103,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2247,
              2737
            ],
            "loc": {
              "start": {
                "line": 80,
                "column": 0
              },
              "end": {
                "line": 92,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3041,
              3372
            ],
            "loc": {
              "start": {
                "line": 106,
                "column": 0
              },
              "end": {
                "line": 117,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2738,
        3038
      ],
      "loc": {
        "start": {
          "line": 93,
          "column": 0
        },
        "end": {
          "line": 103,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2247,
            2737
          ],
          "loc": {
            "start": {
              "line": 80,
              "column": 0
            },
            "end": {
              "line": 92,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3041,
            3372
          ],
          "loc": {
            "start": {
              "line": 106,
              "column": 0
            },
            "end": {
              "line": 117,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Exactly",
          "range": [
            3389,
            3396
          ],
          "loc": {
            "start": {
              "line": 118,
              "column": 16
            },
            "end": {
              "line": 118,
              "column": 23
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "value",
            "range": [
              3397,
              3402
            ],
            "loc": {
              "start": {
                "line": 118,
                "column": 24
              },
              "end": {
                "line": 118,
                "column": 29
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3417,
                      3426
                    ],
                    "loc": {
                      "start": {
                        "line": 119,
                        "column": 11
                      },
                      "end": {
                        "line": 119,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      3430,
                      3435
                    ],
                    "loc": {
                      "start": {
                        "line": 119,
                        "column": 24
                      },
                      "end": {
                        "line": 119,
                        "column": 29
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3440,
                      3449
                    ],
                    "loc": {
                      "start": {
                        "line": 119,
                        "column": 34
                      },
                      "end": {
                        "line": 119,
                        "column": 43
                      }
                    }
                  },
                  "range": [
                    3430,
                    3449
                  ],
                  "loc": {
                    "start": {
                      "line": 119,
                      "column": 24
                    },
                    "end": {
                      "line": 119,
                      "column": 43
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3417,
                  3449
                ],
                "loc": {
                  "start": {
                    "line": 119,
                    "column": 11
                  },
                  "end": {
                    "line": 119,
                    "column": 43
                  }
                }
              },
              "range": [
                3410,
                3450
              ],
              "loc": {
                "start": {
                  "line": 119,
                  "column": 4
                },
                "end": {
                  "line": 119,
                  "column": 44
                }
              }
            }
          ],
          "range": [
            3404,
            3452
          ],
          "loc": {
            "start": {
              "line": 118,
              "column": 31
            },
            "end": {
              "line": 120,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3380,
          3452
        ],
        "loc": {
          "start": {
            "line": 118,
            "column": 7
          },
          "end": {
            "line": 120,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3041,
              3372
            ],
            "loc": {
              "start": {
                "line": 106,
                "column": 0
              },
              "end": {
                "line": 117,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3455,
              3883
            ],
            "loc": {
              "start": {
                "line": 123,
                "column": 0
              },
              "end": {
                "line": 136,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        3373,
        3452
      ],
      "loc": {
        "start": {
          "line": 118,
          "column": 0
        },
        "end": {
          "line": 120,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3041,
            3372
          ],
          "loc": {
            "start": {
              "line": 106,
              "column": 0
            },
            "end": {
              "line": 117,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3455,
            3883
          ],
          "loc": {
            "start": {
              "line": 123,
              "column": 0
            },
            "end": {
              "line": 136,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "OneOf",
          "range": [
            3900,
            3905
          ],
          "loc": {
            "start": {
              "line": 137,
              "column": 16
            },
            "end": {
              "line": 137,
              "column": 21
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "values",
              "range": [
                3909,
                3915
              ],
              "loc": {
                "start": {
                  "line": 137,
                  "column": 25
                },
                "end": {
                  "line": 137,
                  "column": 31
                }
              }
            },
            "range": [
              3906,
              3915
            ],
            "loc": {
              "start": {
                "line": 137,
                "column": 22
              },
              "end": {
                "line": 137,
                "column": 31
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3930,
                      3939
                    ],
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 11
                      },
                      "end": {
                        "line": 138,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "some",
                    "range": [
                      3943,
                      3947
                    ],
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 24
                      },
                      "end": {
                        "line": 138,
                        "column": 28
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "values",
                      "range": [
                        3948,
                        3954
                      ],
                      "loc": {
                        "start": {
                          "line": 138,
                          "column": 29
                        },
                        "end": {
                          "line": 138,
                          "column": 35
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "Exactly",
                      "range": [
                        3956,
                        3963
                      ],
                      "loc": {
                        "start": {
                          "line": 138,
                          "column": 37
                        },
                        "end": {
                          "line": 138,
                          "column": 44
                        }
                      }
                    }
                  ],
                  "range": [
                    3943,
                    3964
                  ],
                  "loc": {
                    "start": {
                      "line": 138,
                      "column": 24
                    },
                    "end": {
                      "line": 138,
                      "column": 45
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3930,
                  3964
                ],
                "loc": {
                  "start": {
                    "line": 138,
                    "column": 11
                  },
                  "end": {
                    "line": 138,
                    "column": 45
                  }
                }
              },
              "range": [
                3923,
                3965
              ],
              "loc": {
                "start": {
                  "line": 138,
                  "column": 4
                },
                "end": {
                  "line": 138,
                  "column": 46
                }
              }
            }
          ],
          "range": [
            3917,
            3967
          ],
          "loc": {
            "start": {
              "line": 137,
              "column": 33
            },
            "end": {
              "line": 139,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3891,
          3967
        ],
        "loc": {
          "start": {
            "line": 137,
            "column": 7
          },
          "end": {
            "line": 139,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3455,
              3883
            ],
            "loc": {
              "start": {
                "line": 123,
                "column": 0
              },
              "end": {
                "line": 136,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        3884,
        3967
      ],
      "loc": {
        "start": {
          "line": 137,
          "column": 0
        },
        "end": {
          "line": 139,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3455,
            3883
          ],
          "loc": {
            "start": {
              "line": 123,
              "column": 0
            },
            "end": {
              "line": 136,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    3967
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 139,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array}\n * @param {*}\n * @param {*}\n ",
      "range": [
        75,
        217
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
      "range": [
        353,
        943
      ],
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
      "range": [
        1421,
        1942
      ],
      "loc": {
        "start": {
          "line": 55,
          "column": 0
        },
        "end": {
          "line": 68,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
      "range": [
        2247,
        2737
      ],
      "loc": {
        "start": {
          "line": 80,
          "column": 0
        },
        "end": {
          "line": 92,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
      "range": [
        3041,
        3372
      ],
      "loc": {
        "start": {
          "line": 106,
          "column": 0
        },
        "end": {
          "line": 117,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
      "range": [
        3455,
        3883
      ],
      "loc": {
        "start": {
          "line": 123,
          "column": 0
        },
        "end": {
          "line": 136,
          "column": 3
        }
      }
    }
  ]
}