{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            8,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 8
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            15,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 15
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "lodash",
        "raw": "'lodash'",
        "range": [
          26,
          34
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 26
          },
          "end": {
            "line": 1,
            "column": 34
          }
        }
      },
      "range": [
        0,
        35
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 35
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "range": [
            44,
            47
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 8
            },
            "end": {
              "line": 2,
              "column": 11
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "range": [
            49,
            53
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 13
            },
            "end": {
              "line": 2,
              "column": 17
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "immutable",
        "raw": "'immutable'",
        "range": [
          60,
          71
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 24
          },
          "end": {
            "line": 2,
            "column": 35
          }
        }
      },
      "range": [
        36,
        72
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 36
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n * @returns {Boolean} whether the key/value match the pair\n ",
          "range": [
            75,
            291
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "checkPair",
        "range": [
          301,
          310
        ],
        "loc": {
          "start": {
            "line": 14,
            "column": 9
          },
          "end": {
            "line": 14,
            "column": 18
          }
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pair",
          "range": [
            311,
            315
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 19
            },
            "end": {
              "line": 14,
              "column": 23
            }
          }
        },
        {
          "type": "Identifier",
          "name": "key",
          "range": [
            317,
            320
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 25
            },
            "end": {
              "line": 14,
              "column": 28
            }
          }
        },
        {
          "type": "Identifier",
          "name": "value",
          "range": [
            322,
            327
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 30
            },
            "end": {
              "line": 14,
              "column": 35
            }
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "ArrayPattern",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "key_check",
                      "range": [
                        342,
                        351
                      ],
                      "loc": {
                        "start": {
                          "line": 15,
                          "column": 11
                        },
                        "end": {
                          "line": 15,
                          "column": 20
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "value_check",
                      "range": [
                        353,
                        364
                      ],
                      "loc": {
                        "start": {
                          "line": 15,
                          "column": 22
                        },
                        "end": {
                          "line": 15,
                          "column": 33
                        }
                      }
                    }
                  ],
                  "range": [
                    341,
                    365
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 10
                    },
                    "end": {
                      "line": 15,
                      "column": 34
                    }
                  }
                },
                "init": {
                  "type": "Identifier",
                  "name": "pair",
                  "range": [
                    368,
                    372
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 37
                    },
                    "end": {
                      "line": 15,
                      "column": 41
                    }
                  }
                },
                "range": [
                  341,
                  372
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 10
                  },
                  "end": {
                    "line": 15,
                    "column": 41
                  }
                }
              }
            ],
            "kind": "const",
            "range": [
              335,
              373
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 4
              },
              "end": {
                "line": 15,
                "column": 42
              }
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "key_check",
                  "range": [
                    385,
                    394
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 11
                    },
                    "end": {
                      "line": 16,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "key",
                    "range": [
                      395,
                      398
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 21
                      },
                      "end": {
                        "line": 16,
                        "column": 24
                      }
                    }
                  }
                ],
                "range": [
                  385,
                  399
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 11
                  },
                  "end": {
                    "line": 16,
                    "column": 25
                  }
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "value_check",
                  "range": [
                    403,
                    414
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 29
                    },
                    "end": {
                      "line": 16,
                      "column": 40
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      415,
                      420
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 41
                      },
                      "end": {
                        "line": 16,
                        "column": 46
                      }
                    }
                  }
                ],
                "range": [
                  403,
                  421
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 29
                  },
                  "end": {
                    "line": 16,
                    "column": 47
                  }
                }
              },
              "range": [
                385,
                421
              ],
              "loc": {
                "start": {
                  "line": 16,
                  "column": 11
                },
                "end": {
                  "line": 16,
                  "column": 47
                }
              }
            },
            "range": [
              378,
              422
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 4
              },
              "end": {
                "line": 16,
                "column": 48
              }
            }
          }
        ],
        "range": [
          329,
          424
        ],
        "loc": {
          "start": {
            "line": 14,
            "column": 37
          },
          "end": {
            "line": 17,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        292,
        424
      ],
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n * @returns {Boolean} whether the key/value match the pair\n ",
          "range": [
            75,
            291
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            427,
            1017
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "MapSchema",
          "range": [
            1034,
            1043
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 16
            },
            "end": {
              "line": 36,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                1047,
                1057
              ],
              "loc": {
                "start": {
                  "line": 36,
                  "column": 29
                },
                "end": {
                  "line": 36,
                  "column": 39
                }
              }
            },
            "range": [
              1044,
              1057
            ],
            "loc": {
              "start": {
                "line": 36,
                "column": 26
              },
              "end": {
                "line": 36,
                "column": 39
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "pairs",
                    "range": [
                      1071,
                      1076
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 10
                      },
                      "end": {
                        "line": 37,
                        "column": 15
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "chunk",
                      "range": [
                        1079,
                        1084
                      ],
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 18
                        },
                        "end": {
                          "line": 37,
                          "column": 23
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "validators",
                        "range": [
                          1085,
                          1095
                        ],
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 24
                          },
                          "end": {
                            "line": 37,
                            "column": 34
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "range": [
                          1097,
                          1098
                        ],
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 36
                          },
                          "end": {
                            "line": 37,
                            "column": 37
                          }
                        }
                      }
                    ],
                    "range": [
                      1079,
                      1099
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 18
                      },
                      "end": {
                        "line": 37,
                        "column": 38
                      }
                    }
                  },
                  "range": [
                    1071,
                    1099
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 10
                    },
                    "end": {
                      "line": 37,
                      "column": 38
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                1065,
                1100
              ],
              "loc": {
                "start": {
                  "line": 37,
                  "column": 4
                },
                "end": {
                  "line": 37,
                  "column": 39
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "%",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "validators",
                      "range": [
                        1109,
                        1119
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 8
                        },
                        "end": {
                          "line": 38,
                          "column": 18
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "range": [
                        1120,
                        1126
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 19
                        },
                        "end": {
                          "line": 38,
                          "column": 25
                        }
                      }
                    },
                    "range": [
                      1109,
                      1126
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 8
                      },
                      "end": {
                        "line": 38,
                        "column": 25
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "range": [
                      1129,
                      1130
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 28
                      },
                      "end": {
                        "line": 38,
                        "column": 29
                      }
                    }
                  },
                  "range": [
                    1109,
                    1130
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 8
                    },
                    "end": {
                      "line": 38,
                      "column": 29
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "range": [
                    1135,
                    1136
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 34
                    },
                    "end": {
                      "line": 38,
                      "column": 35
                    }
                  }
                },
                "range": [
                  1109,
                  1136
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 8
                  },
                  "end": {
                    "line": 38,
                    "column": 35
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Literal",
                      "value": "Must have even length of validators",
                      "raw": "'Must have even length of validators'",
                      "range": [
                        1154,
                        1191
                      ],
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 14
                        },
                        "end": {
                          "line": 39,
                          "column": 51
                        }
                      }
                    },
                    "range": [
                      1148,
                      1192
                    ],
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 8
                      },
                      "end": {
                        "line": 39,
                        "column": 52
                      }
                    }
                  }
                ],
                "range": [
                  1138,
                  1198
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 37
                  },
                  "end": {
                    "line": 40,
                    "column": 5
                  }
                }
              },
              "alternate": null,
              "range": [
                1105,
                1198
              ],
              "loc": {
                "start": {
                  "line": 38,
                  "column": 4
                },
                "end": {
                  "line": 40,
                  "column": 5
                }
              }
            },
            {
              "type": "FunctionDeclaration",
              "id": {
                "type": "Identifier",
                "name": "validatePair",
                "range": [
                  1213,
                  1225
                ],
                "loc": {
                  "start": {
                    "line": 42,
                    "column": 13
                  },
                  "end": {
                    "line": 42,
                    "column": 25
                  }
                }
              },
              "params": [
                {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    1226,
                    1231
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 26
                    },
                    "end": {
                      "line": 42,
                      "column": 31
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "key",
                  "range": [
                    1233,
                    1236
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 33
                    },
                    "end": {
                      "line": 42,
                      "column": 36
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "some",
                        "range": [
                          1255,
                          1259
                        ],
                        "loc": {
                          "start": {
                            "line": 43,
                            "column": 15
                          },
                          "end": {
                            "line": 43,
                            "column": 19
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "pairs",
                          "range": [
                            1260,
                            1265
                          ],
                          "loc": {
                            "start": {
                              "line": 43,
                              "column": 20
                            },
                            "end": {
                              "line": 43,
                              "column": 25
                            }
                          }
                        },
                        {
                          "type": "ArrowFunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "pair",
                              "range": [
                                1267,
                                1271
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 27
                                },
                                "end": {
                                  "line": 43,
                                  "column": 31
                                }
                              }
                            }
                          ],
                          "body": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "checkPair",
                              "range": [
                                1275,
                                1284
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 35
                                },
                                "end": {
                                  "line": 43,
                                  "column": 44
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "pair",
                                "range": [
                                  1285,
                                  1289
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 45
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 49
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "key",
                                "range": [
                                  1291,
                                  1294
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 51
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 54
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "value",
                                "range": [
                                  1296,
                                  1301
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 56
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 61
                                  }
                                }
                              }
                            ],
                            "range": [
                              1275,
                              1302
                            ],
                            "loc": {
                              "start": {
                                "line": 43,
                                "column": 35
                              },
                              "end": {
                                "line": 43,
                                "column": 62
                              }
                            }
                          },
                          "generator": false,
                          "expression": true,
                          "range": [
                            1267,
                            1302
                          ],
                          "loc": {
                            "start": {
                              "line": 43,
                              "column": 27
                            },
                            "end": {
                              "line": 43,
                              "column": 62
                            }
                          }
                        }
                      ],
                      "range": [
                        1255,
                        1303
                      ],
                      "loc": {
                        "start": {
                          "line": 43,
                          "column": 15
                        },
                        "end": {
                          "line": 43,
                          "column": 63
                        }
                      }
                    },
                    "range": [
                      1248,
                      1304
                    ],
                    "loc": {
                      "start": {
                        "line": 43,
                        "column": 8
                      },
                      "end": {
                        "line": 43,
                        "column": 64
                      }
                    }
                  }
                ],
                "range": [
                  1238,
                  1310
                ],
                "loc": {
                  "start": {
                    "line": 42,
                    "column": 38
                  },
                  "end": {
                    "line": 44,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1204,
                1310
              ],
              "loc": {
                "start": {
                  "line": 42,
                  "column": 4
                },
                "end": {
                  "line": 44,
                  "column": 5
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      1332,
                      1341
                    ],
                    "loc": {
                      "start": {
                        "line": 46,
                        "column": 20
                      },
                      "end": {
                        "line": 46,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Map",
                            "range": [
                              1357,
                              1360
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 12
                              },
                              "end": {
                                "line": 47,
                                "column": 15
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isMap",
                            "range": [
                              1361,
                              1366
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 16
                              },
                              "end": {
                                "line": 47,
                                "column": 21
                              }
                            }
                          },
                          "range": [
                            1357,
                            1366
                          ],
                          "loc": {
                            "start": {
                              "line": 47,
                              "column": 12
                            },
                            "end": {
                              "line": 47,
                              "column": 21
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              1367,
                              1376
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 22
                              },
                              "end": {
                                "line": 47,
                                "column": 31
                              }
                            }
                          }
                        ],
                        "range": [
                          1357,
                          1377
                        ],
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 12
                          },
                          "end": {
                            "line": 47,
                            "column": 32
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    1400,
                                    1409
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    1410,
                                    1415
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  1400,
                                  1415
                                ],
                                "loc": {
                                  "start": {
                                    "line": 48,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 48,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "validatePair",
                                  "range": [
                                    1416,
                                    1428
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 47
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1400,
                                1429
                              ],
                              "loc": {
                                "start": {
                                  "line": 48,
                                  "column": 19
                                },
                                "end": {
                                  "line": 48,
                                  "column": 48
                                }
                              }
                            },
                            "range": [
                              1393,
                              1430
                            ],
                            "loc": {
                              "start": {
                                "line": 48,
                                "column": 12
                              },
                              "end": {
                                "line": 48,
                                "column": 49
                              }
                            }
                          }
                        ],
                        "range": [
                          1379,
                          1440
                        ],
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 34
                          },
                          "end": {
                            "line": 49,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                1467,
                                1472
                              ],
                              "loc": {
                                "start": {
                                  "line": 50,
                                  "column": 19
                                },
                                "end": {
                                  "line": 50,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              1460,
                              1473
                            ],
                            "loc": {
                              "start": {
                                "line": 50,
                                "column": 12
                              },
                              "end": {
                                "line": 50,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          1446,
                          1483
                        ],
                        "loc": {
                          "start": {
                            "line": 49,
                            "column": 15
                          },
                          "end": {
                            "line": 51,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1353,
                        1483
                      ],
                      "loc": {
                        "start": {
                          "line": 47,
                          "column": 8
                        },
                        "end": {
                          "line": 51,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1343,
                    1489
                  ],
                  "loc": {
                    "start": {
                      "line": 46,
                      "column": 31
                    },
                    "end": {
                      "line": 52,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1323,
                  1489
                ],
                "loc": {
                  "start": {
                    "line": 46,
                    "column": 11
                  },
                  "end": {
                    "line": 52,
                    "column": 5
                  }
                }
              },
              "range": [
                1316,
                1490
              ],
              "loc": {
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 52,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            1059,
            1492
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 41
            },
            "end": {
              "line": 53,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1025,
          1492
        ],
        "loc": {
          "start": {
            "line": 36,
            "column": 7
          },
          "end": {
            "line": 53,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
            "range": [
              427,
              1017
            ],
            "loc": {
              "start": {
                "line": 20,
                "column": 0
              },
              "end": {
                "line": 35,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1495,
              2016
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1018,
        1492
      ],
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 53,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            427,
            1017
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1495,
            2016
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "FixedListSchema",
          "range": [
            2033,
            2048
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 16
            },
            "end": {
              "line": 70,
              "column": 31
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2052,
                2062
              ],
              "loc": {
                "start": {
                  "line": 70,
                  "column": 35
                },
                "end": {
                  "line": 70,
                  "column": 45
                }
              }
            },
            "range": [
              2049,
              2062
            ],
            "loc": {
              "start": {
                "line": 70,
                "column": 32
              },
              "end": {
                "line": 70,
                "column": 45
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2086,
                      2095
                    ],
                    "loc": {
                      "start": {
                        "line": 71,
                        "column": 20
                      },
                      "end": {
                        "line": 71,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "List",
                              "range": [
                                2111,
                                2115
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 12
                                },
                                "end": {
                                  "line": 72,
                                  "column": 16
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isList",
                              "range": [
                                2116,
                                2122
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 17
                                },
                                "end": {
                                  "line": 72,
                                  "column": 23
                                }
                              }
                            },
                            "range": [
                              2111,
                              2122
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 12
                              },
                              "end": {
                                "line": 72,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2123,
                                2132
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 24
                                },
                                "end": {
                                  "line": 72,
                                  "column": 33
                                }
                              }
                            }
                          ],
                          "range": [
                            2111,
                            2133
                          ],
                          "loc": {
                            "start": {
                              "line": 72,
                              "column": 12
                            },
                            "end": {
                              "line": 72,
                              "column": 34
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2137,
                                2146
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 38
                                },
                                "end": {
                                  "line": 72,
                                  "column": 47
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "size",
                              "range": [
                                2147,
                                2151
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 48
                                },
                                "end": {
                                  "line": 72,
                                  "column": 52
                                }
                              }
                            },
                            "range": [
                              2137,
                              2151
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 38
                              },
                              "end": {
                                "line": 72,
                                "column": 52
                              }
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "validators",
                              "range": [
                                2156,
                                2166
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 57
                                },
                                "end": {
                                  "line": 72,
                                  "column": 67
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length",
                              "range": [
                                2167,
                                2173
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 68
                                },
                                "end": {
                                  "line": 72,
                                  "column": 74
                                }
                              }
                            },
                            "range": [
                              2156,
                              2173
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 57
                              },
                              "end": {
                                "line": 72,
                                "column": 74
                              }
                            }
                          },
                          "range": [
                            2137,
                            2173
                          ],
                          "loc": {
                            "start": {
                              "line": 72,
                              "column": 38
                            },
                            "end": {
                              "line": 72,
                              "column": 74
                            }
                          }
                        },
                        "range": [
                          2111,
                          2173
                        ],
                        "loc": {
                          "start": {
                            "line": 72,
                            "column": 12
                          },
                          "end": {
                            "line": 72,
                            "column": 74
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2196,
                                    2205
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2206,
                                    2211
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2196,
                                  2211
                                ],
                                "loc": {
                                  "start": {
                                    "line": 73,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 73,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2213,
                                        2218
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 36
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 41
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "index",
                                      "range": [
                                        2220,
                                        2225
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 43
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 48
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2230,
                                          2240
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 53
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 63
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "index",
                                        "range": [
                                          2241,
                                          2246
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 64
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 69
                                          }
                                        }
                                      },
                                      "range": [
                                        2230,
                                        2247
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 53
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 70
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "value",
                                        "range": [
                                          2248,
                                          2253
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 71
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 76
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2230,
                                      2254
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 73,
                                        "column": 53
                                      },
                                      "end": {
                                        "line": 73,
                                        "column": 77
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2212,
                                    2254
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 77
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2196,
                                2255
                              ],
                              "loc": {
                                "start": {
                                  "line": 73,
                                  "column": 19
                                },
                                "end": {
                                  "line": 73,
                                  "column": 78
                                }
                              }
                            },
                            "range": [
                              2189,
                              2256
                            ],
                            "loc": {
                              "start": {
                                "line": 73,
                                "column": 12
                              },
                              "end": {
                                "line": 73,
                                "column": 79
                              }
                            }
                          }
                        ],
                        "range": [
                          2175,
                          2266
                        ],
                        "loc": {
                          "start": {
                            "line": 72,
                            "column": 76
                          },
                          "end": {
                            "line": 74,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                2293,
                                2298
                              ],
                              "loc": {
                                "start": {
                                  "line": 75,
                                  "column": 19
                                },
                                "end": {
                                  "line": 75,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              2286,
                              2299
                            ],
                            "loc": {
                              "start": {
                                "line": 75,
                                "column": 12
                              },
                              "end": {
                                "line": 75,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2272,
                          2309
                        ],
                        "loc": {
                          "start": {
                            "line": 74,
                            "column": 15
                          },
                          "end": {
                            "line": 76,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2107,
                        2309
                      ],
                      "loc": {
                        "start": {
                          "line": 72,
                          "column": 8
                        },
                        "end": {
                          "line": 76,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2097,
                    2315
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 31
                    },
                    "end": {
                      "line": 77,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2077,
                  2315
                ],
                "loc": {
                  "start": {
                    "line": 71,
                    "column": 11
                  },
                  "end": {
                    "line": 77,
                    "column": 5
                  }
                }
              },
              "range": [
                2070,
                2316
              ],
              "loc": {
                "start": {
                  "line": 71,
                  "column": 4
                },
                "end": {
                  "line": 77,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2064,
            2318
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 47
            },
            "end": {
              "line": 78,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2024,
          2318
        ],
        "loc": {
          "start": {
            "line": 70,
            "column": 7
          },
          "end": {
            "line": 78,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1495,
              2016
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2321,
              2811
            ],
            "loc": {
              "start": {
                "line": 81,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2017,
        2318
      ],
      "loc": {
        "start": {
          "line": 70,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1495,
            2016
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2321,
            2811
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ListSchema",
          "range": [
            2828,
            2838
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 16
            },
            "end": {
              "line": 94,
              "column": 26
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2842,
                2852
              ],
              "loc": {
                "start": {
                  "line": 94,
                  "column": 30
                },
                "end": {
                  "line": 94,
                  "column": 40
                }
              }
            },
            "range": [
              2839,
              2852
            ],
            "loc": {
              "start": {
                "line": 94,
                "column": 27
              },
              "end": {
                "line": 94,
                "column": 40
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2876,
                      2885
                    ],
                    "loc": {
                      "start": {
                        "line": 95,
                        "column": 20
                      },
                      "end": {
                        "line": 95,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "List",
                            "range": [
                              2901,
                              2905
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 12
                              },
                              "end": {
                                "line": 96,
                                "column": 16
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isList",
                            "range": [
                              2906,
                              2912
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 17
                              },
                              "end": {
                                "line": 96,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            2901,
                            2912
                          ],
                          "loc": {
                            "start": {
                              "line": 96,
                              "column": 12
                            },
                            "end": {
                              "line": 96,
                              "column": 23
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              2913,
                              2922
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 24
                              },
                              "end": {
                                "line": 96,
                                "column": 33
                              }
                            }
                          }
                        ],
                        "range": [
                          2901,
                          2923
                        ],
                        "loc": {
                          "start": {
                            "line": 96,
                            "column": 12
                          },
                          "end": {
                            "line": 96,
                            "column": 34
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2946,
                                    2955
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 97,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 97,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2956,
                                    2961
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 97,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 97,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2946,
                                  2961
                                ],
                                "loc": {
                                  "start": {
                                    "line": 97,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 97,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2979,
                                        2984
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 98,
                                          "column": 16
                                        },
                                        "end": {
                                          "line": 98,
                                          "column": 21
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "some",
                                      "range": [
                                        2988,
                                        2992
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 98,
                                          "column": 25
                                        },
                                        "end": {
                                          "line": 98,
                                          "column": 29
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2993,
                                          3003
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 98,
                                            "column": 30
                                          },
                                          "end": {
                                            "line": 98,
                                            "column": 40
                                          }
                                        }
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              3005,
                                              3014
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 98,
                                                "column": 42
                                              },
                                              "end": {
                                                "line": 98,
                                                "column": 51
                                              }
                                            }
                                          }
                                        ],
                                        "body": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              3018,
                                              3027
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 98,
                                                "column": 55
                                              },
                                              "end": {
                                                "line": 98,
                                                "column": 64
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value",
                                              "range": [
                                                3028,
                                                3033
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 98,
                                                  "column": 65
                                                },
                                                "end": {
                                                  "line": 98,
                                                  "column": 70
                                                }
                                              }
                                            }
                                          ],
                                          "range": [
                                            3018,
                                            3034
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 98,
                                              "column": 55
                                            },
                                            "end": {
                                              "line": 98,
                                              "column": 71
                                            }
                                          }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "range": [
                                          3005,
                                          3034
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 98,
                                            "column": 42
                                          },
                                          "end": {
                                            "line": 98,
                                            "column": 71
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2988,
                                      3035
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 98,
                                        "column": 25
                                      },
                                      "end": {
                                        "line": 98,
                                        "column": 72
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2979,
                                    3035
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 98,
                                      "column": 16
                                    },
                                    "end": {
                                      "line": 98,
                                      "column": 72
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2946,
                                3049
                              ],
                              "loc": {
                                "start": {
                                  "line": 97,
                                  "column": 19
                                },
                                "end": {
                                  "line": 99,
                                  "column": 13
                                }
                              }
                            },
                            "range": [
                              2939,
                              3050
                            ],
                            "loc": {
                              "start": {
                                "line": 97,
                                "column": 12
                              },
                              "end": {
                                "line": 99,
                                "column": 14
                              }
                            }
                          }
                        ],
                        "range": [
                          2925,
                          3060
                        ],
                        "loc": {
                          "start": {
                            "line": 96,
                            "column": 36
                          },
                          "end": {
                            "line": 100,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                3087,
                                3092
                              ],
                              "loc": {
                                "start": {
                                  "line": 101,
                                  "column": 19
                                },
                                "end": {
                                  "line": 101,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              3080,
                              3093
                            ],
                            "loc": {
                              "start": {
                                "line": 101,
                                "column": 12
                              },
                              "end": {
                                "line": 101,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          3066,
                          3103
                        ],
                        "loc": {
                          "start": {
                            "line": 100,
                            "column": 15
                          },
                          "end": {
                            "line": 102,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2897,
                        3103
                      ],
                      "loc": {
                        "start": {
                          "line": 96,
                          "column": 8
                        },
                        "end": {
                          "line": 102,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2887,
                    3109
                  ],
                  "loc": {
                    "start": {
                      "line": 95,
                      "column": 31
                    },
                    "end": {
                      "line": 103,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2867,
                  3109
                ],
                "loc": {
                  "start": {
                    "line": 95,
                    "column": 11
                  },
                  "end": {
                    "line": 103,
                    "column": 5
                  }
                }
              },
              "range": [
                2860,
                3110
              ],
              "loc": {
                "start": {
                  "line": 95,
                  "column": 4
                },
                "end": {
                  "line": 103,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2854,
            3112
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 42
            },
            "end": {
              "line": 104,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2819,
          3112
        ],
        "loc": {
          "start": {
            "line": 94,
            "column": 7
          },
          "end": {
            "line": 104,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2321,
              2811
            ],
            "loc": {
              "start": {
                "line": 81,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3115,
              3446
            ],
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 118,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2812,
        3112
      ],
      "loc": {
        "start": {
          "line": 94,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2321,
            2811
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3115,
            3446
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 0
            },
            "end": {
              "line": 118,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Exactly",
          "range": [
            3463,
            3470
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 16
            },
            "end": {
              "line": 119,
              "column": 23
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "value",
            "range": [
              3471,
              3476
            ],
            "loc": {
              "start": {
                "line": 119,
                "column": 24
              },
              "end": {
                "line": 119,
                "column": 29
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3491,
                      3500
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 11
                      },
                      "end": {
                        "line": 120,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      3504,
                      3509
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 24
                      },
                      "end": {
                        "line": 120,
                        "column": 29
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3514,
                      3523
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 34
                      },
                      "end": {
                        "line": 120,
                        "column": 43
                      }
                    }
                  },
                  "range": [
                    3504,
                    3523
                  ],
                  "loc": {
                    "start": {
                      "line": 120,
                      "column": 24
                    },
                    "end": {
                      "line": 120,
                      "column": 43
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3491,
                  3523
                ],
                "loc": {
                  "start": {
                    "line": 120,
                    "column": 11
                  },
                  "end": {
                    "line": 120,
                    "column": 43
                  }
                }
              },
              "range": [
                3484,
                3524
              ],
              "loc": {
                "start": {
                  "line": 120,
                  "column": 4
                },
                "end": {
                  "line": 120,
                  "column": 44
                }
              }
            }
          ],
          "range": [
            3478,
            3526
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 31
            },
            "end": {
              "line": 121,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3454,
          3526
        ],
        "loc": {
          "start": {
            "line": 119,
            "column": 7
          },
          "end": {
            "line": 121,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3115,
              3446
            ],
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 118,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3529,
              3957
            ],
            "loc": {
              "start": {
                "line": 124,
                "column": 0
              },
              "end": {
                "line": 137,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        3447,
        3526
      ],
      "loc": {
        "start": {
          "line": 119,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3115,
            3446
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 0
            },
            "end": {
              "line": 118,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3529,
            3957
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0
            },
            "end": {
              "line": 137,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "OneOf",
          "range": [
            3974,
            3979
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 16
            },
            "end": {
              "line": 138,
              "column": 21
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "values",
              "range": [
                3983,
                3989
              ],
              "loc": {
                "start": {
                  "line": 138,
                  "column": 25
                },
                "end": {
                  "line": 138,
                  "column": 31
                }
              }
            },
            "range": [
              3980,
              3989
            ],
            "loc": {
              "start": {
                "line": 138,
                "column": 22
              },
              "end": {
                "line": 138,
                "column": 31
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      4004,
                      4013
                    ],
                    "loc": {
                      "start": {
                        "line": 139,
                        "column": 11
                      },
                      "end": {
                        "line": 139,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "some",
                    "range": [
                      4017,
                      4021
                    ],
                    "loc": {
                      "start": {
                        "line": 139,
                        "column": 24
                      },
                      "end": {
                        "line": 139,
                        "column": 28
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "values",
                      "range": [
                        4022,
                        4028
                      ],
                      "loc": {
                        "start": {
                          "line": 139,
                          "column": 29
                        },
                        "end": {
                          "line": 139,
                          "column": 35
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "Exactly",
                      "range": [
                        4030,
                        4037
                      ],
                      "loc": {
                        "start": {
                          "line": 139,
                          "column": 37
                        },
                        "end": {
                          "line": 139,
                          "column": 44
                        }
                      }
                    }
                  ],
                  "range": [
                    4017,
                    4038
                  ],
                  "loc": {
                    "start": {
                      "line": 139,
                      "column": 24
                    },
                    "end": {
                      "line": 139,
                      "column": 45
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  4004,
                  4038
                ],
                "loc": {
                  "start": {
                    "line": 139,
                    "column": 11
                  },
                  "end": {
                    "line": 139,
                    "column": 45
                  }
                }
              },
              "range": [
                3997,
                4039
              ],
              "loc": {
                "start": {
                  "line": 139,
                  "column": 4
                },
                "end": {
                  "line": 139,
                  "column": 46
                }
              }
            }
          ],
          "range": [
            3991,
            4041
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 33
            },
            "end": {
              "line": 140,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3965,
          4041
        ],
        "loc": {
          "start": {
            "line": 138,
            "column": 7
          },
          "end": {
            "line": 140,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3529,
              3957
            ],
            "loc": {
              "start": {
                "line": 124,
                "column": 0
              },
              "end": {
                "line": 137,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        3958,
        4041
      ],
      "loc": {
        "start": {
          "line": 138,
          "column": 0
        },
        "end": {
          "line": 140,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3529,
            3957
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0
            },
            "end": {
              "line": 137,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    4041
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 140,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n * @returns {Boolean} whether the key/value match the pair\n ",
      "range": [
        75,
        291
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
      "range": [
        427,
        1017
      ],
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
      "range": [
        1495,
        2016
      ],
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 69,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
      "range": [
        2321,
        2811
      ],
      "loc": {
        "start": {
          "line": 81,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
      "range": [
        3115,
        3446
      ],
      "loc": {
        "start": {
          "line": 107,
          "column": 0
        },
        "end": {
          "line": 118,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
      "range": [
        3529,
        3957
      ],
      "loc": {
        "start": {
          "line": 124,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 3
        }
      }
    }
  ]
}