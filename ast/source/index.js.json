{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            8,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 8
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            15,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 15
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "lodash",
        "raw": "'lodash'",
        "range": [
          26,
          34
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 26
          },
          "end": {
            "line": 1,
            "column": 34
          }
        }
      },
      "range": [
        0,
        35
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 35
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "range": [
            44,
            47
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 8
            },
            "end": {
              "line": 2,
              "column": 11
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "range": [
            49,
            53
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 13
            },
            "end": {
              "line": 2,
              "column": 17
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "immutable",
        "raw": "'immutable'",
        "range": [
          60,
          71
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 24
          },
          "end": {
            "line": 2,
            "column": 35
          }
        }
      },
      "range": [
        36,
        72
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 36
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n ",
          "range": [
            75,
            168
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "checkPair",
        "range": [
          178,
          187
        ],
        "loc": {
          "start": {
            "line": 9,
            "column": 9
          },
          "end": {
            "line": 9,
            "column": 18
          }
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pair",
          "range": [
            188,
            192
          ],
          "loc": {
            "start": {
              "line": 9,
              "column": 19
            },
            "end": {
              "line": 9,
              "column": 23
            }
          }
        },
        {
          "type": "Identifier",
          "name": "key",
          "range": [
            194,
            197
          ],
          "loc": {
            "start": {
              "line": 9,
              "column": 25
            },
            "end": {
              "line": 9,
              "column": 28
            }
          }
        },
        {
          "type": "Identifier",
          "name": "value",
          "range": [
            199,
            204
          ],
          "loc": {
            "start": {
              "line": 9,
              "column": 30
            },
            "end": {
              "line": 9,
              "column": 35
            }
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "ArrayPattern",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "key_check",
                      "range": [
                        219,
                        228
                      ],
                      "loc": {
                        "start": {
                          "line": 10,
                          "column": 11
                        },
                        "end": {
                          "line": 10,
                          "column": 20
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "value_check",
                      "range": [
                        230,
                        241
                      ],
                      "loc": {
                        "start": {
                          "line": 10,
                          "column": 22
                        },
                        "end": {
                          "line": 10,
                          "column": 33
                        }
                      }
                    }
                  ],
                  "range": [
                    218,
                    242
                  ],
                  "loc": {
                    "start": {
                      "line": 10,
                      "column": 10
                    },
                    "end": {
                      "line": 10,
                      "column": 34
                    }
                  }
                },
                "init": {
                  "type": "Identifier",
                  "name": "pair",
                  "range": [
                    245,
                    249
                  ],
                  "loc": {
                    "start": {
                      "line": 10,
                      "column": 37
                    },
                    "end": {
                      "line": 10,
                      "column": 41
                    }
                  }
                },
                "range": [
                  218,
                  249
                ],
                "loc": {
                  "start": {
                    "line": 10,
                    "column": 10
                  },
                  "end": {
                    "line": 10,
                    "column": 41
                  }
                }
              }
            ],
            "kind": "const",
            "range": [
              212,
              250
            ],
            "loc": {
              "start": {
                "line": 10,
                "column": 4
              },
              "end": {
                "line": 10,
                "column": 42
              }
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "key_check",
                  "range": [
                    262,
                    271
                  ],
                  "loc": {
                    "start": {
                      "line": 11,
                      "column": 11
                    },
                    "end": {
                      "line": 11,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "key",
                    "range": [
                      272,
                      275
                    ],
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 21
                      },
                      "end": {
                        "line": 11,
                        "column": 24
                      }
                    }
                  }
                ],
                "range": [
                  262,
                  276
                ],
                "loc": {
                  "start": {
                    "line": 11,
                    "column": 11
                  },
                  "end": {
                    "line": 11,
                    "column": 25
                  }
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "value_check",
                  "range": [
                    280,
                    291
                  ],
                  "loc": {
                    "start": {
                      "line": 11,
                      "column": 29
                    },
                    "end": {
                      "line": 11,
                      "column": 40
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      292,
                      297
                    ],
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 41
                      },
                      "end": {
                        "line": 11,
                        "column": 46
                      }
                    }
                  }
                ],
                "range": [
                  280,
                  298
                ],
                "loc": {
                  "start": {
                    "line": 11,
                    "column": 29
                  },
                  "end": {
                    "line": 11,
                    "column": 47
                  }
                }
              },
              "range": [
                262,
                298
              ],
              "loc": {
                "start": {
                  "line": 11,
                  "column": 11
                },
                "end": {
                  "line": 11,
                  "column": 47
                }
              }
            },
            "range": [
              255,
              299
            ],
            "loc": {
              "start": {
                "line": 11,
                "column": 4
              },
              "end": {
                "line": 11,
                "column": 48
              }
            }
          }
        ],
        "range": [
          206,
          301
        ],
        "loc": {
          "start": {
            "line": 9,
            "column": 37
          },
          "end": {
            "line": 12,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        169,
        301
      ],
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n ",
          "range": [
            75,
            168
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            304,
            894
          ],
          "loc": {
            "start": {
              "line": 15,
              "column": 0
            },
            "end": {
              "line": 30,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "MapSchema",
          "range": [
            911,
            920
          ],
          "loc": {
            "start": {
              "line": 31,
              "column": 16
            },
            "end": {
              "line": 31,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                924,
                934
              ],
              "loc": {
                "start": {
                  "line": 31,
                  "column": 29
                },
                "end": {
                  "line": 31,
                  "column": 39
                }
              }
            },
            "range": [
              921,
              934
            ],
            "loc": {
              "start": {
                "line": 31,
                "column": 26
              },
              "end": {
                "line": 31,
                "column": 39
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "pairs",
                    "range": [
                      948,
                      953
                    ],
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 10
                      },
                      "end": {
                        "line": 32,
                        "column": 15
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "chunk",
                      "range": [
                        956,
                        961
                      ],
                      "loc": {
                        "start": {
                          "line": 32,
                          "column": 18
                        },
                        "end": {
                          "line": 32,
                          "column": 23
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "validators",
                        "range": [
                          962,
                          972
                        ],
                        "loc": {
                          "start": {
                            "line": 32,
                            "column": 24
                          },
                          "end": {
                            "line": 32,
                            "column": 34
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "range": [
                          974,
                          975
                        ],
                        "loc": {
                          "start": {
                            "line": 32,
                            "column": 36
                          },
                          "end": {
                            "line": 32,
                            "column": 37
                          }
                        }
                      }
                    ],
                    "range": [
                      956,
                      976
                    ],
                    "loc": {
                      "start": {
                        "line": 32,
                        "column": 18
                      },
                      "end": {
                        "line": 32,
                        "column": 38
                      }
                    }
                  },
                  "range": [
                    948,
                    976
                  ],
                  "loc": {
                    "start": {
                      "line": 32,
                      "column": 10
                    },
                    "end": {
                      "line": 32,
                      "column": 38
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                942,
                977
              ],
              "loc": {
                "start": {
                  "line": 32,
                  "column": 4
                },
                "end": {
                  "line": 32,
                  "column": 39
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "%",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "validators",
                      "range": [
                        986,
                        996
                      ],
                      "loc": {
                        "start": {
                          "line": 33,
                          "column": 8
                        },
                        "end": {
                          "line": 33,
                          "column": 18
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "range": [
                        997,
                        1003
                      ],
                      "loc": {
                        "start": {
                          "line": 33,
                          "column": 19
                        },
                        "end": {
                          "line": 33,
                          "column": 25
                        }
                      }
                    },
                    "range": [
                      986,
                      1003
                    ],
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 8
                      },
                      "end": {
                        "line": 33,
                        "column": 25
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "range": [
                      1006,
                      1007
                    ],
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 28
                      },
                      "end": {
                        "line": 33,
                        "column": 29
                      }
                    }
                  },
                  "range": [
                    986,
                    1007
                  ],
                  "loc": {
                    "start": {
                      "line": 33,
                      "column": 8
                    },
                    "end": {
                      "line": 33,
                      "column": 29
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "range": [
                    1012,
                    1013
                  ],
                  "loc": {
                    "start": {
                      "line": 33,
                      "column": 34
                    },
                    "end": {
                      "line": 33,
                      "column": 35
                    }
                  }
                },
                "range": [
                  986,
                  1013
                ],
                "loc": {
                  "start": {
                    "line": 33,
                    "column": 8
                  },
                  "end": {
                    "line": 33,
                    "column": 35
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Literal",
                      "value": "Must have even length of validators",
                      "raw": "'Must have even length of validators'",
                      "range": [
                        1031,
                        1068
                      ],
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 14
                        },
                        "end": {
                          "line": 34,
                          "column": 51
                        }
                      }
                    },
                    "range": [
                      1025,
                      1069
                    ],
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 8
                      },
                      "end": {
                        "line": 34,
                        "column": 52
                      }
                    }
                  }
                ],
                "range": [
                  1015,
                  1075
                ],
                "loc": {
                  "start": {
                    "line": 33,
                    "column": 37
                  },
                  "end": {
                    "line": 35,
                    "column": 5
                  }
                }
              },
              "alternate": null,
              "range": [
                982,
                1075
              ],
              "loc": {
                "start": {
                  "line": 33,
                  "column": 4
                },
                "end": {
                  "line": 35,
                  "column": 5
                }
              }
            },
            {
              "type": "FunctionDeclaration",
              "id": {
                "type": "Identifier",
                "name": "validatePair",
                "range": [
                  1090,
                  1102
                ],
                "loc": {
                  "start": {
                    "line": 37,
                    "column": 13
                  },
                  "end": {
                    "line": 37,
                    "column": 25
                  }
                }
              },
              "params": [
                {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    1103,
                    1108
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 26
                    },
                    "end": {
                      "line": 37,
                      "column": 31
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "key",
                  "range": [
                    1110,
                    1113
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 33
                    },
                    "end": {
                      "line": 37,
                      "column": 36
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "some",
                        "range": [
                          1132,
                          1136
                        ],
                        "loc": {
                          "start": {
                            "line": 38,
                            "column": 15
                          },
                          "end": {
                            "line": 38,
                            "column": 19
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "pairs",
                          "range": [
                            1137,
                            1142
                          ],
                          "loc": {
                            "start": {
                              "line": 38,
                              "column": 20
                            },
                            "end": {
                              "line": 38,
                              "column": 25
                            }
                          }
                        },
                        {
                          "type": "ArrowFunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "pair",
                              "range": [
                                1144,
                                1148
                              ],
                              "loc": {
                                "start": {
                                  "line": 38,
                                  "column": 27
                                },
                                "end": {
                                  "line": 38,
                                  "column": 31
                                }
                              }
                            }
                          ],
                          "body": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "checkPair",
                              "range": [
                                1152,
                                1161
                              ],
                              "loc": {
                                "start": {
                                  "line": 38,
                                  "column": 35
                                },
                                "end": {
                                  "line": 38,
                                  "column": 44
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "pair",
                                "range": [
                                  1162,
                                  1166
                                ],
                                "loc": {
                                  "start": {
                                    "line": 38,
                                    "column": 45
                                  },
                                  "end": {
                                    "line": 38,
                                    "column": 49
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "key",
                                "range": [
                                  1168,
                                  1171
                                ],
                                "loc": {
                                  "start": {
                                    "line": 38,
                                    "column": 51
                                  },
                                  "end": {
                                    "line": 38,
                                    "column": 54
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "value",
                                "range": [
                                  1173,
                                  1178
                                ],
                                "loc": {
                                  "start": {
                                    "line": 38,
                                    "column": 56
                                  },
                                  "end": {
                                    "line": 38,
                                    "column": 61
                                  }
                                }
                              }
                            ],
                            "range": [
                              1152,
                              1179
                            ],
                            "loc": {
                              "start": {
                                "line": 38,
                                "column": 35
                              },
                              "end": {
                                "line": 38,
                                "column": 62
                              }
                            }
                          },
                          "generator": false,
                          "expression": true,
                          "range": [
                            1144,
                            1179
                          ],
                          "loc": {
                            "start": {
                              "line": 38,
                              "column": 27
                            },
                            "end": {
                              "line": 38,
                              "column": 62
                            }
                          }
                        }
                      ],
                      "range": [
                        1132,
                        1180
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 15
                        },
                        "end": {
                          "line": 38,
                          "column": 63
                        }
                      }
                    },
                    "range": [
                      1125,
                      1181
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 8
                      },
                      "end": {
                        "line": 38,
                        "column": 64
                      }
                    }
                  }
                ],
                "range": [
                  1115,
                  1187
                ],
                "loc": {
                  "start": {
                    "line": 37,
                    "column": 38
                  },
                  "end": {
                    "line": 39,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1081,
                1187
              ],
              "loc": {
                "start": {
                  "line": 37,
                  "column": 4
                },
                "end": {
                  "line": 39,
                  "column": 5
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      1209,
                      1218
                    ],
                    "loc": {
                      "start": {
                        "line": 41,
                        "column": 20
                      },
                      "end": {
                        "line": 41,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Map",
                            "range": [
                              1234,
                              1237
                            ],
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 12
                              },
                              "end": {
                                "line": 42,
                                "column": 15
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isMap",
                            "range": [
                              1238,
                              1243
                            ],
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 16
                              },
                              "end": {
                                "line": 42,
                                "column": 21
                              }
                            }
                          },
                          "range": [
                            1234,
                            1243
                          ],
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 12
                            },
                            "end": {
                              "line": 42,
                              "column": 21
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              1244,
                              1253
                            ],
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 22
                              },
                              "end": {
                                "line": 42,
                                "column": 31
                              }
                            }
                          }
                        ],
                        "range": [
                          1234,
                          1254
                        ],
                        "loc": {
                          "start": {
                            "line": 42,
                            "column": 12
                          },
                          "end": {
                            "line": 42,
                            "column": 32
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    1277,
                                    1286
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 43,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 43,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    1287,
                                    1292
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 43,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 43,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  1277,
                                  1292
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "validatePair",
                                  "range": [
                                    1293,
                                    1305
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 43,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 43,
                                      "column": 47
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1277,
                                1306
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 19
                                },
                                "end": {
                                  "line": 43,
                                  "column": 48
                                }
                              }
                            },
                            "range": [
                              1270,
                              1307
                            ],
                            "loc": {
                              "start": {
                                "line": 43,
                                "column": 12
                              },
                              "end": {
                                "line": 43,
                                "column": 49
                              }
                            }
                          }
                        ],
                        "range": [
                          1256,
                          1317
                        ],
                        "loc": {
                          "start": {
                            "line": 42,
                            "column": 34
                          },
                          "end": {
                            "line": 44,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                1344,
                                1349
                              ],
                              "loc": {
                                "start": {
                                  "line": 45,
                                  "column": 19
                                },
                                "end": {
                                  "line": 45,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              1337,
                              1350
                            ],
                            "loc": {
                              "start": {
                                "line": 45,
                                "column": 12
                              },
                              "end": {
                                "line": 45,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          1323,
                          1360
                        ],
                        "loc": {
                          "start": {
                            "line": 44,
                            "column": 15
                          },
                          "end": {
                            "line": 46,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1230,
                        1360
                      ],
                      "loc": {
                        "start": {
                          "line": 42,
                          "column": 8
                        },
                        "end": {
                          "line": 46,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1220,
                    1366
                  ],
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 31
                    },
                    "end": {
                      "line": 47,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1200,
                  1366
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 11
                  },
                  "end": {
                    "line": 47,
                    "column": 5
                  }
                }
              },
              "range": [
                1193,
                1367
              ],
              "loc": {
                "start": {
                  "line": 41,
                  "column": 4
                },
                "end": {
                  "line": 47,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            936,
            1369
          ],
          "loc": {
            "start": {
              "line": 31,
              "column": 41
            },
            "end": {
              "line": 48,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          902,
          1369
        ],
        "loc": {
          "start": {
            "line": 31,
            "column": 7
          },
          "end": {
            "line": 48,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
            "range": [
              304,
              894
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 0
              },
              "end": {
                "line": 30,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1372,
              1893
            ],
            "loc": {
              "start": {
                "line": 51,
                "column": 0
              },
              "end": {
                "line": 64,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        895,
        1369
      ],
      "loc": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 48,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            304,
            894
          ],
          "loc": {
            "start": {
              "line": 15,
              "column": 0
            },
            "end": {
              "line": 30,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1372,
            1893
          ],
          "loc": {
            "start": {
              "line": 51,
              "column": 0
            },
            "end": {
              "line": 64,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "FixedListSchema",
          "range": [
            1910,
            1925
          ],
          "loc": {
            "start": {
              "line": 65,
              "column": 16
            },
            "end": {
              "line": 65,
              "column": 31
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                1929,
                1939
              ],
              "loc": {
                "start": {
                  "line": 65,
                  "column": 35
                },
                "end": {
                  "line": 65,
                  "column": 45
                }
              }
            },
            "range": [
              1926,
              1939
            ],
            "loc": {
              "start": {
                "line": 65,
                "column": 32
              },
              "end": {
                "line": 65,
                "column": 45
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      1963,
                      1972
                    ],
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 20
                      },
                      "end": {
                        "line": 66,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "List",
                              "range": [
                                1988,
                                1992
                              ],
                              "loc": {
                                "start": {
                                  "line": 67,
                                  "column": 12
                                },
                                "end": {
                                  "line": 67,
                                  "column": 16
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isList",
                              "range": [
                                1993,
                                1999
                              ],
                              "loc": {
                                "start": {
                                  "line": 67,
                                  "column": 17
                                },
                                "end": {
                                  "line": 67,
                                  "column": 23
                                }
                              }
                            },
                            "range": [
                              1988,
                              1999
                            ],
                            "loc": {
                              "start": {
                                "line": 67,
                                "column": 12
                              },
                              "end": {
                                "line": 67,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2000,
                                2009
                              ],
                              "loc": {
                                "start": {
                                  "line": 67,
                                  "column": 24
                                },
                                "end": {
                                  "line": 67,
                                  "column": 33
                                }
                              }
                            }
                          ],
                          "range": [
                            1988,
                            2010
                          ],
                          "loc": {
                            "start": {
                              "line": 67,
                              "column": 12
                            },
                            "end": {
                              "line": 67,
                              "column": 34
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2014,
                                2023
                              ],
                              "loc": {
                                "start": {
                                  "line": 67,
                                  "column": 38
                                },
                                "end": {
                                  "line": 67,
                                  "column": 47
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "size",
                              "range": [
                                2024,
                                2028
                              ],
                              "loc": {
                                "start": {
                                  "line": 67,
                                  "column": 48
                                },
                                "end": {
                                  "line": 67,
                                  "column": 52
                                }
                              }
                            },
                            "range": [
                              2014,
                              2028
                            ],
                            "loc": {
                              "start": {
                                "line": 67,
                                "column": 38
                              },
                              "end": {
                                "line": 67,
                                "column": 52
                              }
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "validators",
                              "range": [
                                2033,
                                2043
                              ],
                              "loc": {
                                "start": {
                                  "line": 67,
                                  "column": 57
                                },
                                "end": {
                                  "line": 67,
                                  "column": 67
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length",
                              "range": [
                                2044,
                                2050
                              ],
                              "loc": {
                                "start": {
                                  "line": 67,
                                  "column": 68
                                },
                                "end": {
                                  "line": 67,
                                  "column": 74
                                }
                              }
                            },
                            "range": [
                              2033,
                              2050
                            ],
                            "loc": {
                              "start": {
                                "line": 67,
                                "column": 57
                              },
                              "end": {
                                "line": 67,
                                "column": 74
                              }
                            }
                          },
                          "range": [
                            2014,
                            2050
                          ],
                          "loc": {
                            "start": {
                              "line": 67,
                              "column": 38
                            },
                            "end": {
                              "line": 67,
                              "column": 74
                            }
                          }
                        },
                        "range": [
                          1988,
                          2050
                        ],
                        "loc": {
                          "start": {
                            "line": 67,
                            "column": 12
                          },
                          "end": {
                            "line": 67,
                            "column": 74
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2073,
                                    2082
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 68,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 68,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2083,
                                    2088
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 68,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 68,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2073,
                                  2088
                                ],
                                "loc": {
                                  "start": {
                                    "line": 68,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 68,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2090,
                                        2095
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 68,
                                          "column": 36
                                        },
                                        "end": {
                                          "line": 68,
                                          "column": 41
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "index",
                                      "range": [
                                        2097,
                                        2102
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 68,
                                          "column": 43
                                        },
                                        "end": {
                                          "line": 68,
                                          "column": 48
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2107,
                                          2117
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 68,
                                            "column": 53
                                          },
                                          "end": {
                                            "line": 68,
                                            "column": 63
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "index",
                                        "range": [
                                          2118,
                                          2123
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 68,
                                            "column": 64
                                          },
                                          "end": {
                                            "line": 68,
                                            "column": 69
                                          }
                                        }
                                      },
                                      "range": [
                                        2107,
                                        2124
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 68,
                                          "column": 53
                                        },
                                        "end": {
                                          "line": 68,
                                          "column": 70
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "value",
                                        "range": [
                                          2125,
                                          2130
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 68,
                                            "column": 71
                                          },
                                          "end": {
                                            "line": 68,
                                            "column": 76
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2107,
                                      2131
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 68,
                                        "column": 53
                                      },
                                      "end": {
                                        "line": 68,
                                        "column": 77
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2089,
                                    2131
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 68,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 68,
                                      "column": 77
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2073,
                                2132
                              ],
                              "loc": {
                                "start": {
                                  "line": 68,
                                  "column": 19
                                },
                                "end": {
                                  "line": 68,
                                  "column": 78
                                }
                              }
                            },
                            "range": [
                              2066,
                              2133
                            ],
                            "loc": {
                              "start": {
                                "line": 68,
                                "column": 12
                              },
                              "end": {
                                "line": 68,
                                "column": 79
                              }
                            }
                          }
                        ],
                        "range": [
                          2052,
                          2143
                        ],
                        "loc": {
                          "start": {
                            "line": 67,
                            "column": 76
                          },
                          "end": {
                            "line": 69,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                2170,
                                2175
                              ],
                              "loc": {
                                "start": {
                                  "line": 70,
                                  "column": 19
                                },
                                "end": {
                                  "line": 70,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              2163,
                              2176
                            ],
                            "loc": {
                              "start": {
                                "line": 70,
                                "column": 12
                              },
                              "end": {
                                "line": 70,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2149,
                          2186
                        ],
                        "loc": {
                          "start": {
                            "line": 69,
                            "column": 15
                          },
                          "end": {
                            "line": 71,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1984,
                        2186
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 8
                        },
                        "end": {
                          "line": 71,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1974,
                    2192
                  ],
                  "loc": {
                    "start": {
                      "line": 66,
                      "column": 31
                    },
                    "end": {
                      "line": 72,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1954,
                  2192
                ],
                "loc": {
                  "start": {
                    "line": 66,
                    "column": 11
                  },
                  "end": {
                    "line": 72,
                    "column": 5
                  }
                }
              },
              "range": [
                1947,
                2193
              ],
              "loc": {
                "start": {
                  "line": 66,
                  "column": 4
                },
                "end": {
                  "line": 72,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            1941,
            2195
          ],
          "loc": {
            "start": {
              "line": 65,
              "column": 47
            },
            "end": {
              "line": 73,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1901,
          2195
        ],
        "loc": {
          "start": {
            "line": 65,
            "column": 7
          },
          "end": {
            "line": 73,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1372,
              1893
            ],
            "loc": {
              "start": {
                "line": 51,
                "column": 0
              },
              "end": {
                "line": 64,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2198,
              2688
            ],
            "loc": {
              "start": {
                "line": 76,
                "column": 0
              },
              "end": {
                "line": 88,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1894,
        2195
      ],
      "loc": {
        "start": {
          "line": 65,
          "column": 0
        },
        "end": {
          "line": 73,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1372,
            1893
          ],
          "loc": {
            "start": {
              "line": 51,
              "column": 0
            },
            "end": {
              "line": 64,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2198,
            2688
          ],
          "loc": {
            "start": {
              "line": 76,
              "column": 0
            },
            "end": {
              "line": 88,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ListSchema",
          "range": [
            2705,
            2715
          ],
          "loc": {
            "start": {
              "line": 89,
              "column": 16
            },
            "end": {
              "line": 89,
              "column": 26
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2719,
                2729
              ],
              "loc": {
                "start": {
                  "line": 89,
                  "column": 30
                },
                "end": {
                  "line": 89,
                  "column": 40
                }
              }
            },
            "range": [
              2716,
              2729
            ],
            "loc": {
              "start": {
                "line": 89,
                "column": 27
              },
              "end": {
                "line": 89,
                "column": 40
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2753,
                      2762
                    ],
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 20
                      },
                      "end": {
                        "line": 90,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "List",
                            "range": [
                              2778,
                              2782
                            ],
                            "loc": {
                              "start": {
                                "line": 91,
                                "column": 12
                              },
                              "end": {
                                "line": 91,
                                "column": 16
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isList",
                            "range": [
                              2783,
                              2789
                            ],
                            "loc": {
                              "start": {
                                "line": 91,
                                "column": 17
                              },
                              "end": {
                                "line": 91,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            2778,
                            2789
                          ],
                          "loc": {
                            "start": {
                              "line": 91,
                              "column": 12
                            },
                            "end": {
                              "line": 91,
                              "column": 23
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              2790,
                              2799
                            ],
                            "loc": {
                              "start": {
                                "line": 91,
                                "column": 24
                              },
                              "end": {
                                "line": 91,
                                "column": 33
                              }
                            }
                          }
                        ],
                        "range": [
                          2778,
                          2800
                        ],
                        "loc": {
                          "start": {
                            "line": 91,
                            "column": 12
                          },
                          "end": {
                            "line": 91,
                            "column": 34
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2823,
                                    2832
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 92,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 92,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2833,
                                    2838
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 92,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 92,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2823,
                                  2838
                                ],
                                "loc": {
                                  "start": {
                                    "line": 92,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 92,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2856,
                                        2861
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 93,
                                          "column": 16
                                        },
                                        "end": {
                                          "line": 93,
                                          "column": 21
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "some",
                                      "range": [
                                        2865,
                                        2869
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 93,
                                          "column": 25
                                        },
                                        "end": {
                                          "line": 93,
                                          "column": 29
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2870,
                                          2880
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 93,
                                            "column": 30
                                          },
                                          "end": {
                                            "line": 93,
                                            "column": 40
                                          }
                                        }
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2882,
                                              2891
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 93,
                                                "column": 42
                                              },
                                              "end": {
                                                "line": 93,
                                                "column": 51
                                              }
                                            }
                                          }
                                        ],
                                        "body": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2895,
                                              2904
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 93,
                                                "column": 55
                                              },
                                              "end": {
                                                "line": 93,
                                                "column": 64
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value",
                                              "range": [
                                                2905,
                                                2910
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 93,
                                                  "column": 65
                                                },
                                                "end": {
                                                  "line": 93,
                                                  "column": 70
                                                }
                                              }
                                            }
                                          ],
                                          "range": [
                                            2895,
                                            2911
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 93,
                                              "column": 55
                                            },
                                            "end": {
                                              "line": 93,
                                              "column": 71
                                            }
                                          }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "range": [
                                          2882,
                                          2911
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 93,
                                            "column": 42
                                          },
                                          "end": {
                                            "line": 93,
                                            "column": 71
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2865,
                                      2912
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 93,
                                        "column": 25
                                      },
                                      "end": {
                                        "line": 93,
                                        "column": 72
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2856,
                                    2912
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 93,
                                      "column": 16
                                    },
                                    "end": {
                                      "line": 93,
                                      "column": 72
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2823,
                                2926
                              ],
                              "loc": {
                                "start": {
                                  "line": 92,
                                  "column": 19
                                },
                                "end": {
                                  "line": 94,
                                  "column": 13
                                }
                              }
                            },
                            "range": [
                              2816,
                              2927
                            ],
                            "loc": {
                              "start": {
                                "line": 92,
                                "column": 12
                              },
                              "end": {
                                "line": 94,
                                "column": 14
                              }
                            }
                          }
                        ],
                        "range": [
                          2802,
                          2937
                        ],
                        "loc": {
                          "start": {
                            "line": 91,
                            "column": 36
                          },
                          "end": {
                            "line": 95,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                2964,
                                2969
                              ],
                              "loc": {
                                "start": {
                                  "line": 96,
                                  "column": 19
                                },
                                "end": {
                                  "line": 96,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              2957,
                              2970
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 12
                              },
                              "end": {
                                "line": 96,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2943,
                          2980
                        ],
                        "loc": {
                          "start": {
                            "line": 95,
                            "column": 15
                          },
                          "end": {
                            "line": 97,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2774,
                        2980
                      ],
                      "loc": {
                        "start": {
                          "line": 91,
                          "column": 8
                        },
                        "end": {
                          "line": 97,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2764,
                    2986
                  ],
                  "loc": {
                    "start": {
                      "line": 90,
                      "column": 31
                    },
                    "end": {
                      "line": 98,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2744,
                  2986
                ],
                "loc": {
                  "start": {
                    "line": 90,
                    "column": 11
                  },
                  "end": {
                    "line": 98,
                    "column": 5
                  }
                }
              },
              "range": [
                2737,
                2987
              ],
              "loc": {
                "start": {
                  "line": 90,
                  "column": 4
                },
                "end": {
                  "line": 98,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2731,
            2989
          ],
          "loc": {
            "start": {
              "line": 89,
              "column": 42
            },
            "end": {
              "line": 99,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2696,
          2989
        ],
        "loc": {
          "start": {
            "line": 89,
            "column": 7
          },
          "end": {
            "line": 99,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2198,
              2688
            ],
            "loc": {
              "start": {
                "line": 76,
                "column": 0
              },
              "end": {
                "line": 88,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              2992,
              3323
            ],
            "loc": {
              "start": {
                "line": 102,
                "column": 0
              },
              "end": {
                "line": 113,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2689,
        2989
      ],
      "loc": {
        "start": {
          "line": 89,
          "column": 0
        },
        "end": {
          "line": 99,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2198,
            2688
          ],
          "loc": {
            "start": {
              "line": 76,
              "column": 0
            },
            "end": {
              "line": 88,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            2992,
            3323
          ],
          "loc": {
            "start": {
              "line": 102,
              "column": 0
            },
            "end": {
              "line": 113,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Exactly",
          "range": [
            3340,
            3347
          ],
          "loc": {
            "start": {
              "line": 114,
              "column": 16
            },
            "end": {
              "line": 114,
              "column": 23
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "value",
            "range": [
              3348,
              3353
            ],
            "loc": {
              "start": {
                "line": 114,
                "column": 24
              },
              "end": {
                "line": 114,
                "column": 29
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3368,
                      3377
                    ],
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 11
                      },
                      "end": {
                        "line": 115,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      3381,
                      3386
                    ],
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 24
                      },
                      "end": {
                        "line": 115,
                        "column": 29
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3391,
                      3400
                    ],
                    "loc": {
                      "start": {
                        "line": 115,
                        "column": 34
                      },
                      "end": {
                        "line": 115,
                        "column": 43
                      }
                    }
                  },
                  "range": [
                    3381,
                    3400
                  ],
                  "loc": {
                    "start": {
                      "line": 115,
                      "column": 24
                    },
                    "end": {
                      "line": 115,
                      "column": 43
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3368,
                  3400
                ],
                "loc": {
                  "start": {
                    "line": 115,
                    "column": 11
                  },
                  "end": {
                    "line": 115,
                    "column": 43
                  }
                }
              },
              "range": [
                3361,
                3401
              ],
              "loc": {
                "start": {
                  "line": 115,
                  "column": 4
                },
                "end": {
                  "line": 115,
                  "column": 44
                }
              }
            }
          ],
          "range": [
            3355,
            3403
          ],
          "loc": {
            "start": {
              "line": 114,
              "column": 31
            },
            "end": {
              "line": 116,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3331,
          3403
        ],
        "loc": {
          "start": {
            "line": 114,
            "column": 7
          },
          "end": {
            "line": 116,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              2992,
              3323
            ],
            "loc": {
              "start": {
                "line": 102,
                "column": 0
              },
              "end": {
                "line": 113,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3406,
              3834
            ],
            "loc": {
              "start": {
                "line": 119,
                "column": 0
              },
              "end": {
                "line": 132,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        3324,
        3403
      ],
      "loc": {
        "start": {
          "line": 114,
          "column": 0
        },
        "end": {
          "line": 116,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            2992,
            3323
          ],
          "loc": {
            "start": {
              "line": 102,
              "column": 0
            },
            "end": {
              "line": 113,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3406,
            3834
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 0
            },
            "end": {
              "line": 132,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "OneOf",
          "range": [
            3851,
            3856
          ],
          "loc": {
            "start": {
              "line": 133,
              "column": 16
            },
            "end": {
              "line": 133,
              "column": 21
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "values",
              "range": [
                3860,
                3866
              ],
              "loc": {
                "start": {
                  "line": 133,
                  "column": 25
                },
                "end": {
                  "line": 133,
                  "column": 31
                }
              }
            },
            "range": [
              3857,
              3866
            ],
            "loc": {
              "start": {
                "line": 133,
                "column": 22
              },
              "end": {
                "line": 133,
                "column": 31
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3881,
                      3890
                    ],
                    "loc": {
                      "start": {
                        "line": 134,
                        "column": 11
                      },
                      "end": {
                        "line": 134,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "some",
                    "range": [
                      3894,
                      3898
                    ],
                    "loc": {
                      "start": {
                        "line": 134,
                        "column": 24
                      },
                      "end": {
                        "line": 134,
                        "column": 28
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "values",
                      "range": [
                        3899,
                        3905
                      ],
                      "loc": {
                        "start": {
                          "line": 134,
                          "column": 29
                        },
                        "end": {
                          "line": 134,
                          "column": 35
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "Exactly",
                      "range": [
                        3907,
                        3914
                      ],
                      "loc": {
                        "start": {
                          "line": 134,
                          "column": 37
                        },
                        "end": {
                          "line": 134,
                          "column": 44
                        }
                      }
                    }
                  ],
                  "range": [
                    3894,
                    3915
                  ],
                  "loc": {
                    "start": {
                      "line": 134,
                      "column": 24
                    },
                    "end": {
                      "line": 134,
                      "column": 45
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3881,
                  3915
                ],
                "loc": {
                  "start": {
                    "line": 134,
                    "column": 11
                  },
                  "end": {
                    "line": 134,
                    "column": 45
                  }
                }
              },
              "range": [
                3874,
                3916
              ],
              "loc": {
                "start": {
                  "line": 134,
                  "column": 4
                },
                "end": {
                  "line": 134,
                  "column": 46
                }
              }
            }
          ],
          "range": [
            3868,
            3918
          ],
          "loc": {
            "start": {
              "line": 133,
              "column": 33
            },
            "end": {
              "line": 135,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3842,
          3918
        ],
        "loc": {
          "start": {
            "line": 133,
            "column": 7
          },
          "end": {
            "line": 135,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3406,
              3834
            ],
            "loc": {
              "start": {
                "line": 119,
                "column": 0
              },
              "end": {
                "line": 132,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        3835,
        3918
      ],
      "loc": {
        "start": {
          "line": 133,
          "column": 0
        },
        "end": {
          "line": 135,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3406,
            3834
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 0
            },
            "end": {
              "line": 132,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    3918
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 135,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n ",
      "range": [
        75,
        168
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 8,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
      "range": [
        304,
        894
      ],
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 30,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
      "range": [
        1372,
        1893
      ],
      "loc": {
        "start": {
          "line": 51,
          "column": 0
        },
        "end": {
          "line": 64,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
      "range": [
        2198,
        2688
      ],
      "loc": {
        "start": {
          "line": 76,
          "column": 0
        },
        "end": {
          "line": 88,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
      "range": [
        2992,
        3323
      ],
      "loc": {
        "start": {
          "line": 102,
          "column": 0
        },
        "end": {
          "line": 113,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
      "range": [
        3406,
        3834
      ],
      "loc": {
        "start": {
          "line": 119,
          "column": 0
        },
        "end": {
          "line": 132,
          "column": 3
        }
      }
    }
  ]
}