{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            8,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 8
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            15,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 15
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "lodash",
        "raw": "'lodash'",
        "range": [
          26,
          34
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 26
          },
          "end": {
            "line": 1,
            "column": 34
          }
        }
      },
      "range": [
        0,
        35
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 35
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "range": [
            44,
            47
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 8
            },
            "end": {
              "line": 2,
              "column": 11
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "range": [
            49,
            53
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 13
            },
            "end": {
              "line": 2,
              "column": 17
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "immutable",
        "raw": "'immutable'",
        "range": [
          60,
          71
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 24
          },
          "end": {
            "line": 2,
            "column": 35
          }
        }
      },
      "range": [
        36,
        72
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 36
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n ",
          "range": [
            75,
            232
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "checkPair",
        "range": [
          242,
          251
        ],
        "loc": {
          "start": {
            "line": 13,
            "column": 9
          },
          "end": {
            "line": 13,
            "column": 18
          }
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pair",
          "range": [
            252,
            256
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 19
            },
            "end": {
              "line": 13,
              "column": 23
            }
          }
        },
        {
          "type": "Identifier",
          "name": "key",
          "range": [
            258,
            261
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 25
            },
            "end": {
              "line": 13,
              "column": 28
            }
          }
        },
        {
          "type": "Identifier",
          "name": "value",
          "range": [
            263,
            268
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 30
            },
            "end": {
              "line": 13,
              "column": 35
            }
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "ArrayPattern",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "key_check",
                      "range": [
                        283,
                        292
                      ],
                      "loc": {
                        "start": {
                          "line": 14,
                          "column": 11
                        },
                        "end": {
                          "line": 14,
                          "column": 20
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "value_check",
                      "range": [
                        294,
                        305
                      ],
                      "loc": {
                        "start": {
                          "line": 14,
                          "column": 22
                        },
                        "end": {
                          "line": 14,
                          "column": 33
                        }
                      }
                    }
                  ],
                  "range": [
                    282,
                    306
                  ],
                  "loc": {
                    "start": {
                      "line": 14,
                      "column": 10
                    },
                    "end": {
                      "line": 14,
                      "column": 34
                    }
                  }
                },
                "init": {
                  "type": "Identifier",
                  "name": "pair",
                  "range": [
                    309,
                    313
                  ],
                  "loc": {
                    "start": {
                      "line": 14,
                      "column": 37
                    },
                    "end": {
                      "line": 14,
                      "column": 41
                    }
                  }
                },
                "range": [
                  282,
                  313
                ],
                "loc": {
                  "start": {
                    "line": 14,
                    "column": 10
                  },
                  "end": {
                    "line": 14,
                    "column": 41
                  }
                }
              }
            ],
            "kind": "const",
            "range": [
              276,
              314
            ],
            "loc": {
              "start": {
                "line": 14,
                "column": 4
              },
              "end": {
                "line": 14,
                "column": 42
              }
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "key_check",
                  "range": [
                    326,
                    335
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 11
                    },
                    "end": {
                      "line": 15,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "key",
                    "range": [
                      336,
                      339
                    ],
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 21
                      },
                      "end": {
                        "line": 15,
                        "column": 24
                      }
                    }
                  }
                ],
                "range": [
                  326,
                  340
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 11
                  },
                  "end": {
                    "line": 15,
                    "column": 25
                  }
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "value_check",
                  "range": [
                    344,
                    355
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 29
                    },
                    "end": {
                      "line": 15,
                      "column": 40
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      356,
                      361
                    ],
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 41
                      },
                      "end": {
                        "line": 15,
                        "column": 46
                      }
                    }
                  }
                ],
                "range": [
                  344,
                  362
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 29
                  },
                  "end": {
                    "line": 15,
                    "column": 47
                  }
                }
              },
              "range": [
                326,
                362
              ],
              "loc": {
                "start": {
                  "line": 15,
                  "column": 11
                },
                "end": {
                  "line": 15,
                  "column": 47
                }
              }
            },
            "range": [
              319,
              363
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 4
              },
              "end": {
                "line": 15,
                "column": 48
              }
            }
          }
        ],
        "range": [
          270,
          365
        ],
        "loc": {
          "start": {
            "line": 13,
            "column": 37
          },
          "end": {
            "line": 16,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        233,
        365
      ],
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n ",
          "range": [
            75,
            232
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            368,
            958
          ],
          "loc": {
            "start": {
              "line": 19,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "MapSchema",
          "range": [
            975,
            984
          ],
          "loc": {
            "start": {
              "line": 35,
              "column": 16
            },
            "end": {
              "line": 35,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                988,
                998
              ],
              "loc": {
                "start": {
                  "line": 35,
                  "column": 29
                },
                "end": {
                  "line": 35,
                  "column": 39
                }
              }
            },
            "range": [
              985,
              998
            ],
            "loc": {
              "start": {
                "line": 35,
                "column": 26
              },
              "end": {
                "line": 35,
                "column": 39
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "pairs",
                    "range": [
                      1012,
                      1017
                    ],
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 10
                      },
                      "end": {
                        "line": 36,
                        "column": 15
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "chunk",
                      "range": [
                        1020,
                        1025
                      ],
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 18
                        },
                        "end": {
                          "line": 36,
                          "column": 23
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "validators",
                        "range": [
                          1026,
                          1036
                        ],
                        "loc": {
                          "start": {
                            "line": 36,
                            "column": 24
                          },
                          "end": {
                            "line": 36,
                            "column": 34
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "range": [
                          1038,
                          1039
                        ],
                        "loc": {
                          "start": {
                            "line": 36,
                            "column": 36
                          },
                          "end": {
                            "line": 36,
                            "column": 37
                          }
                        }
                      }
                    ],
                    "range": [
                      1020,
                      1040
                    ],
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 18
                      },
                      "end": {
                        "line": 36,
                        "column": 38
                      }
                    }
                  },
                  "range": [
                    1012,
                    1040
                  ],
                  "loc": {
                    "start": {
                      "line": 36,
                      "column": 10
                    },
                    "end": {
                      "line": 36,
                      "column": 38
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                1006,
                1041
              ],
              "loc": {
                "start": {
                  "line": 36,
                  "column": 4
                },
                "end": {
                  "line": 36,
                  "column": 39
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "%",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "validators",
                      "range": [
                        1050,
                        1060
                      ],
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 8
                        },
                        "end": {
                          "line": 37,
                          "column": 18
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "range": [
                        1061,
                        1067
                      ],
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 19
                        },
                        "end": {
                          "line": 37,
                          "column": 25
                        }
                      }
                    },
                    "range": [
                      1050,
                      1067
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 8
                      },
                      "end": {
                        "line": 37,
                        "column": 25
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "range": [
                      1070,
                      1071
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 28
                      },
                      "end": {
                        "line": 37,
                        "column": 29
                      }
                    }
                  },
                  "range": [
                    1050,
                    1071
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 8
                    },
                    "end": {
                      "line": 37,
                      "column": 29
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "range": [
                    1076,
                    1077
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 34
                    },
                    "end": {
                      "line": 37,
                      "column": 35
                    }
                  }
                },
                "range": [
                  1050,
                  1077
                ],
                "loc": {
                  "start": {
                    "line": 37,
                    "column": 8
                  },
                  "end": {
                    "line": 37,
                    "column": 35
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Literal",
                      "value": "Must have even length of validators",
                      "raw": "'Must have even length of validators'",
                      "range": [
                        1095,
                        1132
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 14
                        },
                        "end": {
                          "line": 38,
                          "column": 51
                        }
                      }
                    },
                    "range": [
                      1089,
                      1133
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 8
                      },
                      "end": {
                        "line": 38,
                        "column": 52
                      }
                    }
                  }
                ],
                "range": [
                  1079,
                  1139
                ],
                "loc": {
                  "start": {
                    "line": 37,
                    "column": 37
                  },
                  "end": {
                    "line": 39,
                    "column": 5
                  }
                }
              },
              "alternate": null,
              "range": [
                1046,
                1139
              ],
              "loc": {
                "start": {
                  "line": 37,
                  "column": 4
                },
                "end": {
                  "line": 39,
                  "column": 5
                }
              }
            },
            {
              "type": "FunctionDeclaration",
              "id": {
                "type": "Identifier",
                "name": "validatePair",
                "range": [
                  1154,
                  1166
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 13
                  },
                  "end": {
                    "line": 41,
                    "column": 25
                  }
                }
              },
              "params": [
                {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    1167,
                    1172
                  ],
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 26
                    },
                    "end": {
                      "line": 41,
                      "column": 31
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "key",
                  "range": [
                    1174,
                    1177
                  ],
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 33
                    },
                    "end": {
                      "line": 41,
                      "column": 36
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "some",
                        "range": [
                          1196,
                          1200
                        ],
                        "loc": {
                          "start": {
                            "line": 42,
                            "column": 15
                          },
                          "end": {
                            "line": 42,
                            "column": 19
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "pairs",
                          "range": [
                            1201,
                            1206
                          ],
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 20
                            },
                            "end": {
                              "line": 42,
                              "column": 25
                            }
                          }
                        },
                        {
                          "type": "ArrowFunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "pair",
                              "range": [
                                1208,
                                1212
                              ],
                              "loc": {
                                "start": {
                                  "line": 42,
                                  "column": 27
                                },
                                "end": {
                                  "line": 42,
                                  "column": 31
                                }
                              }
                            }
                          ],
                          "body": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "checkPair",
                              "range": [
                                1216,
                                1225
                              ],
                              "loc": {
                                "start": {
                                  "line": 42,
                                  "column": 35
                                },
                                "end": {
                                  "line": 42,
                                  "column": 44
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "pair",
                                "range": [
                                  1226,
                                  1230
                                ],
                                "loc": {
                                  "start": {
                                    "line": 42,
                                    "column": 45
                                  },
                                  "end": {
                                    "line": 42,
                                    "column": 49
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "key",
                                "range": [
                                  1232,
                                  1235
                                ],
                                "loc": {
                                  "start": {
                                    "line": 42,
                                    "column": 51
                                  },
                                  "end": {
                                    "line": 42,
                                    "column": 54
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "value",
                                "range": [
                                  1237,
                                  1242
                                ],
                                "loc": {
                                  "start": {
                                    "line": 42,
                                    "column": 56
                                  },
                                  "end": {
                                    "line": 42,
                                    "column": 61
                                  }
                                }
                              }
                            ],
                            "range": [
                              1216,
                              1243
                            ],
                            "loc": {
                              "start": {
                                "line": 42,
                                "column": 35
                              },
                              "end": {
                                "line": 42,
                                "column": 62
                              }
                            }
                          },
                          "generator": false,
                          "expression": true,
                          "range": [
                            1208,
                            1243
                          ],
                          "loc": {
                            "start": {
                              "line": 42,
                              "column": 27
                            },
                            "end": {
                              "line": 42,
                              "column": 62
                            }
                          }
                        }
                      ],
                      "range": [
                        1196,
                        1244
                      ],
                      "loc": {
                        "start": {
                          "line": 42,
                          "column": 15
                        },
                        "end": {
                          "line": 42,
                          "column": 63
                        }
                      }
                    },
                    "range": [
                      1189,
                      1245
                    ],
                    "loc": {
                      "start": {
                        "line": 42,
                        "column": 8
                      },
                      "end": {
                        "line": 42,
                        "column": 64
                      }
                    }
                  }
                ],
                "range": [
                  1179,
                  1251
                ],
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 38
                  },
                  "end": {
                    "line": 43,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1145,
                1251
              ],
              "loc": {
                "start": {
                  "line": 41,
                  "column": 4
                },
                "end": {
                  "line": 43,
                  "column": 5
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      1273,
                      1282
                    ],
                    "loc": {
                      "start": {
                        "line": 45,
                        "column": 20
                      },
                      "end": {
                        "line": 45,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Map",
                            "range": [
                              1298,
                              1301
                            ],
                            "loc": {
                              "start": {
                                "line": 46,
                                "column": 12
                              },
                              "end": {
                                "line": 46,
                                "column": 15
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isMap",
                            "range": [
                              1302,
                              1307
                            ],
                            "loc": {
                              "start": {
                                "line": 46,
                                "column": 16
                              },
                              "end": {
                                "line": 46,
                                "column": 21
                              }
                            }
                          },
                          "range": [
                            1298,
                            1307
                          ],
                          "loc": {
                            "start": {
                              "line": 46,
                              "column": 12
                            },
                            "end": {
                              "line": 46,
                              "column": 21
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              1308,
                              1317
                            ],
                            "loc": {
                              "start": {
                                "line": 46,
                                "column": 22
                              },
                              "end": {
                                "line": 46,
                                "column": 31
                              }
                            }
                          }
                        ],
                        "range": [
                          1298,
                          1318
                        ],
                        "loc": {
                          "start": {
                            "line": 46,
                            "column": 12
                          },
                          "end": {
                            "line": 46,
                            "column": 32
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    1341,
                                    1350
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 47,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 47,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    1351,
                                    1356
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 47,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 47,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  1341,
                                  1356
                                ],
                                "loc": {
                                  "start": {
                                    "line": 47,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 47,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "validatePair",
                                  "range": [
                                    1357,
                                    1369
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 47,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 47,
                                      "column": 47
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1341,
                                1370
                              ],
                              "loc": {
                                "start": {
                                  "line": 47,
                                  "column": 19
                                },
                                "end": {
                                  "line": 47,
                                  "column": 48
                                }
                              }
                            },
                            "range": [
                              1334,
                              1371
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 12
                              },
                              "end": {
                                "line": 47,
                                "column": 49
                              }
                            }
                          }
                        ],
                        "range": [
                          1320,
                          1381
                        ],
                        "loc": {
                          "start": {
                            "line": 46,
                            "column": 34
                          },
                          "end": {
                            "line": 48,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                1408,
                                1413
                              ],
                              "loc": {
                                "start": {
                                  "line": 49,
                                  "column": 19
                                },
                                "end": {
                                  "line": 49,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              1401,
                              1414
                            ],
                            "loc": {
                              "start": {
                                "line": 49,
                                "column": 12
                              },
                              "end": {
                                "line": 49,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          1387,
                          1424
                        ],
                        "loc": {
                          "start": {
                            "line": 48,
                            "column": 15
                          },
                          "end": {
                            "line": 50,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1294,
                        1424
                      ],
                      "loc": {
                        "start": {
                          "line": 46,
                          "column": 8
                        },
                        "end": {
                          "line": 50,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1284,
                    1430
                  ],
                  "loc": {
                    "start": {
                      "line": 45,
                      "column": 31
                    },
                    "end": {
                      "line": 51,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1264,
                  1430
                ],
                "loc": {
                  "start": {
                    "line": 45,
                    "column": 11
                  },
                  "end": {
                    "line": 51,
                    "column": 5
                  }
                }
              },
              "range": [
                1257,
                1431
              ],
              "loc": {
                "start": {
                  "line": 45,
                  "column": 4
                },
                "end": {
                  "line": 51,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            1000,
            1433
          ],
          "loc": {
            "start": {
              "line": 35,
              "column": 41
            },
            "end": {
              "line": 52,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          966,
          1433
        ],
        "loc": {
          "start": {
            "line": 35,
            "column": 7
          },
          "end": {
            "line": 52,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
            "range": [
              368,
              958
            ],
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 34,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1436,
              1957
            ],
            "loc": {
              "start": {
                "line": 55,
                "column": 0
              },
              "end": {
                "line": 68,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        959,
        1433
      ],
      "loc": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 52,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            368,
            958
          ],
          "loc": {
            "start": {
              "line": 19,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1436,
            1957
          ],
          "loc": {
            "start": {
              "line": 55,
              "column": 0
            },
            "end": {
              "line": 68,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "FixedListSchema",
          "range": [
            1974,
            1989
          ],
          "loc": {
            "start": {
              "line": 69,
              "column": 16
            },
            "end": {
              "line": 69,
              "column": 31
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                1993,
                2003
              ],
              "loc": {
                "start": {
                  "line": 69,
                  "column": 35
                },
                "end": {
                  "line": 69,
                  "column": 45
                }
              }
            },
            "range": [
              1990,
              2003
            ],
            "loc": {
              "start": {
                "line": 69,
                "column": 32
              },
              "end": {
                "line": 69,
                "column": 45
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2027,
                      2036
                    ],
                    "loc": {
                      "start": {
                        "line": 70,
                        "column": 20
                      },
                      "end": {
                        "line": 70,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "List",
                              "range": [
                                2052,
                                2056
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 12
                                },
                                "end": {
                                  "line": 71,
                                  "column": 16
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isList",
                              "range": [
                                2057,
                                2063
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 17
                                },
                                "end": {
                                  "line": 71,
                                  "column": 23
                                }
                              }
                            },
                            "range": [
                              2052,
                              2063
                            ],
                            "loc": {
                              "start": {
                                "line": 71,
                                "column": 12
                              },
                              "end": {
                                "line": 71,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2064,
                                2073
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 24
                                },
                                "end": {
                                  "line": 71,
                                  "column": 33
                                }
                              }
                            }
                          ],
                          "range": [
                            2052,
                            2074
                          ],
                          "loc": {
                            "start": {
                              "line": 71,
                              "column": 12
                            },
                            "end": {
                              "line": 71,
                              "column": 34
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2078,
                                2087
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 38
                                },
                                "end": {
                                  "line": 71,
                                  "column": 47
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "size",
                              "range": [
                                2088,
                                2092
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 48
                                },
                                "end": {
                                  "line": 71,
                                  "column": 52
                                }
                              }
                            },
                            "range": [
                              2078,
                              2092
                            ],
                            "loc": {
                              "start": {
                                "line": 71,
                                "column": 38
                              },
                              "end": {
                                "line": 71,
                                "column": 52
                              }
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "validators",
                              "range": [
                                2097,
                                2107
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 57
                                },
                                "end": {
                                  "line": 71,
                                  "column": 67
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length",
                              "range": [
                                2108,
                                2114
                              ],
                              "loc": {
                                "start": {
                                  "line": 71,
                                  "column": 68
                                },
                                "end": {
                                  "line": 71,
                                  "column": 74
                                }
                              }
                            },
                            "range": [
                              2097,
                              2114
                            ],
                            "loc": {
                              "start": {
                                "line": 71,
                                "column": 57
                              },
                              "end": {
                                "line": 71,
                                "column": 74
                              }
                            }
                          },
                          "range": [
                            2078,
                            2114
                          ],
                          "loc": {
                            "start": {
                              "line": 71,
                              "column": 38
                            },
                            "end": {
                              "line": 71,
                              "column": 74
                            }
                          }
                        },
                        "range": [
                          2052,
                          2114
                        ],
                        "loc": {
                          "start": {
                            "line": 71,
                            "column": 12
                          },
                          "end": {
                            "line": 71,
                            "column": 74
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2137,
                                    2146
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 72,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 72,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2147,
                                    2152
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 72,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 72,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2137,
                                  2152
                                ],
                                "loc": {
                                  "start": {
                                    "line": 72,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 72,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2154,
                                        2159
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 72,
                                          "column": 36
                                        },
                                        "end": {
                                          "line": 72,
                                          "column": 41
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "index",
                                      "range": [
                                        2161,
                                        2166
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 72,
                                          "column": 43
                                        },
                                        "end": {
                                          "line": 72,
                                          "column": 48
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2171,
                                          2181
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 72,
                                            "column": 53
                                          },
                                          "end": {
                                            "line": 72,
                                            "column": 63
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "index",
                                        "range": [
                                          2182,
                                          2187
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 72,
                                            "column": 64
                                          },
                                          "end": {
                                            "line": 72,
                                            "column": 69
                                          }
                                        }
                                      },
                                      "range": [
                                        2171,
                                        2188
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 72,
                                          "column": 53
                                        },
                                        "end": {
                                          "line": 72,
                                          "column": 70
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "value",
                                        "range": [
                                          2189,
                                          2194
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 72,
                                            "column": 71
                                          },
                                          "end": {
                                            "line": 72,
                                            "column": 76
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2171,
                                      2195
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 72,
                                        "column": 53
                                      },
                                      "end": {
                                        "line": 72,
                                        "column": 77
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2153,
                                    2195
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 72,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 72,
                                      "column": 77
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2137,
                                2196
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 19
                                },
                                "end": {
                                  "line": 72,
                                  "column": 78
                                }
                              }
                            },
                            "range": [
                              2130,
                              2197
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 12
                              },
                              "end": {
                                "line": 72,
                                "column": 79
                              }
                            }
                          }
                        ],
                        "range": [
                          2116,
                          2207
                        ],
                        "loc": {
                          "start": {
                            "line": 71,
                            "column": 76
                          },
                          "end": {
                            "line": 73,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                2234,
                                2239
                              ],
                              "loc": {
                                "start": {
                                  "line": 74,
                                  "column": 19
                                },
                                "end": {
                                  "line": 74,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              2227,
                              2240
                            ],
                            "loc": {
                              "start": {
                                "line": 74,
                                "column": 12
                              },
                              "end": {
                                "line": 74,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2213,
                          2250
                        ],
                        "loc": {
                          "start": {
                            "line": 73,
                            "column": 15
                          },
                          "end": {
                            "line": 75,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2048,
                        2250
                      ],
                      "loc": {
                        "start": {
                          "line": 71,
                          "column": 8
                        },
                        "end": {
                          "line": 75,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2038,
                    2256
                  ],
                  "loc": {
                    "start": {
                      "line": 70,
                      "column": 31
                    },
                    "end": {
                      "line": 76,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2018,
                  2256
                ],
                "loc": {
                  "start": {
                    "line": 70,
                    "column": 11
                  },
                  "end": {
                    "line": 76,
                    "column": 5
                  }
                }
              },
              "range": [
                2011,
                2257
              ],
              "loc": {
                "start": {
                  "line": 70,
                  "column": 4
                },
                "end": {
                  "line": 76,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2005,
            2259
          ],
          "loc": {
            "start": {
              "line": 69,
              "column": 47
            },
            "end": {
              "line": 77,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1965,
          2259
        ],
        "loc": {
          "start": {
            "line": 69,
            "column": 7
          },
          "end": {
            "line": 77,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1436,
              1957
            ],
            "loc": {
              "start": {
                "line": 55,
                "column": 0
              },
              "end": {
                "line": 68,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2262,
              2752
            ],
            "loc": {
              "start": {
                "line": 80,
                "column": 0
              },
              "end": {
                "line": 92,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1958,
        2259
      ],
      "loc": {
        "start": {
          "line": 69,
          "column": 0
        },
        "end": {
          "line": 77,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1436,
            1957
          ],
          "loc": {
            "start": {
              "line": 55,
              "column": 0
            },
            "end": {
              "line": 68,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2262,
            2752
          ],
          "loc": {
            "start": {
              "line": 80,
              "column": 0
            },
            "end": {
              "line": 92,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ListSchema",
          "range": [
            2769,
            2779
          ],
          "loc": {
            "start": {
              "line": 93,
              "column": 16
            },
            "end": {
              "line": 93,
              "column": 26
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2783,
                2793
              ],
              "loc": {
                "start": {
                  "line": 93,
                  "column": 30
                },
                "end": {
                  "line": 93,
                  "column": 40
                }
              }
            },
            "range": [
              2780,
              2793
            ],
            "loc": {
              "start": {
                "line": 93,
                "column": 27
              },
              "end": {
                "line": 93,
                "column": 40
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2817,
                      2826
                    ],
                    "loc": {
                      "start": {
                        "line": 94,
                        "column": 20
                      },
                      "end": {
                        "line": 94,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "List",
                            "range": [
                              2842,
                              2846
                            ],
                            "loc": {
                              "start": {
                                "line": 95,
                                "column": 12
                              },
                              "end": {
                                "line": 95,
                                "column": 16
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isList",
                            "range": [
                              2847,
                              2853
                            ],
                            "loc": {
                              "start": {
                                "line": 95,
                                "column": 17
                              },
                              "end": {
                                "line": 95,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            2842,
                            2853
                          ],
                          "loc": {
                            "start": {
                              "line": 95,
                              "column": 12
                            },
                            "end": {
                              "line": 95,
                              "column": 23
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              2854,
                              2863
                            ],
                            "loc": {
                              "start": {
                                "line": 95,
                                "column": 24
                              },
                              "end": {
                                "line": 95,
                                "column": 33
                              }
                            }
                          }
                        ],
                        "range": [
                          2842,
                          2864
                        ],
                        "loc": {
                          "start": {
                            "line": 95,
                            "column": 12
                          },
                          "end": {
                            "line": 95,
                            "column": 34
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2887,
                                    2896
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 96,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 96,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2897,
                                    2902
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 96,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 96,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2887,
                                  2902
                                ],
                                "loc": {
                                  "start": {
                                    "line": 96,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 96,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2920,
                                        2925
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 97,
                                          "column": 16
                                        },
                                        "end": {
                                          "line": 97,
                                          "column": 21
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "some",
                                      "range": [
                                        2929,
                                        2933
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 97,
                                          "column": 25
                                        },
                                        "end": {
                                          "line": 97,
                                          "column": 29
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2934,
                                          2944
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 97,
                                            "column": 30
                                          },
                                          "end": {
                                            "line": 97,
                                            "column": 40
                                          }
                                        }
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2946,
                                              2955
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 97,
                                                "column": 42
                                              },
                                              "end": {
                                                "line": 97,
                                                "column": 51
                                              }
                                            }
                                          }
                                        ],
                                        "body": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2959,
                                              2968
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 97,
                                                "column": 55
                                              },
                                              "end": {
                                                "line": 97,
                                                "column": 64
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value",
                                              "range": [
                                                2969,
                                                2974
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 97,
                                                  "column": 65
                                                },
                                                "end": {
                                                  "line": 97,
                                                  "column": 70
                                                }
                                              }
                                            }
                                          ],
                                          "range": [
                                            2959,
                                            2975
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 97,
                                              "column": 55
                                            },
                                            "end": {
                                              "line": 97,
                                              "column": 71
                                            }
                                          }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "range": [
                                          2946,
                                          2975
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 97,
                                            "column": 42
                                          },
                                          "end": {
                                            "line": 97,
                                            "column": 71
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2929,
                                      2976
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 97,
                                        "column": 25
                                      },
                                      "end": {
                                        "line": 97,
                                        "column": 72
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2920,
                                    2976
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 97,
                                      "column": 16
                                    },
                                    "end": {
                                      "line": 97,
                                      "column": 72
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2887,
                                2990
                              ],
                              "loc": {
                                "start": {
                                  "line": 96,
                                  "column": 19
                                },
                                "end": {
                                  "line": 98,
                                  "column": 13
                                }
                              }
                            },
                            "range": [
                              2880,
                              2991
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 12
                              },
                              "end": {
                                "line": 98,
                                "column": 14
                              }
                            }
                          }
                        ],
                        "range": [
                          2866,
                          3001
                        ],
                        "loc": {
                          "start": {
                            "line": 95,
                            "column": 36
                          },
                          "end": {
                            "line": 99,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                3028,
                                3033
                              ],
                              "loc": {
                                "start": {
                                  "line": 100,
                                  "column": 19
                                },
                                "end": {
                                  "line": 100,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              3021,
                              3034
                            ],
                            "loc": {
                              "start": {
                                "line": 100,
                                "column": 12
                              },
                              "end": {
                                "line": 100,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          3007,
                          3044
                        ],
                        "loc": {
                          "start": {
                            "line": 99,
                            "column": 15
                          },
                          "end": {
                            "line": 101,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2838,
                        3044
                      ],
                      "loc": {
                        "start": {
                          "line": 95,
                          "column": 8
                        },
                        "end": {
                          "line": 101,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2828,
                    3050
                  ],
                  "loc": {
                    "start": {
                      "line": 94,
                      "column": 31
                    },
                    "end": {
                      "line": 102,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2808,
                  3050
                ],
                "loc": {
                  "start": {
                    "line": 94,
                    "column": 11
                  },
                  "end": {
                    "line": 102,
                    "column": 5
                  }
                }
              },
              "range": [
                2801,
                3051
              ],
              "loc": {
                "start": {
                  "line": 94,
                  "column": 4
                },
                "end": {
                  "line": 102,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2795,
            3053
          ],
          "loc": {
            "start": {
              "line": 93,
              "column": 42
            },
            "end": {
              "line": 103,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2760,
          3053
        ],
        "loc": {
          "start": {
            "line": 93,
            "column": 7
          },
          "end": {
            "line": 103,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2262,
              2752
            ],
            "loc": {
              "start": {
                "line": 80,
                "column": 0
              },
              "end": {
                "line": 92,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3056,
              3387
            ],
            "loc": {
              "start": {
                "line": 106,
                "column": 0
              },
              "end": {
                "line": 117,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2753,
        3053
      ],
      "loc": {
        "start": {
          "line": 93,
          "column": 0
        },
        "end": {
          "line": 103,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2262,
            2752
          ],
          "loc": {
            "start": {
              "line": 80,
              "column": 0
            },
            "end": {
              "line": 92,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3056,
            3387
          ],
          "loc": {
            "start": {
              "line": 106,
              "column": 0
            },
            "end": {
              "line": 117,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Exactly",
          "range": [
            3404,
            3411
          ],
          "loc": {
            "start": {
              "line": 118,
              "column": 16
            },
            "end": {
              "line": 118,
              "column": 23
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "value",
            "range": [
              3412,
              3417
            ],
            "loc": {
              "start": {
                "line": 118,
                "column": 24
              },
              "end": {
                "line": 118,
                "column": 29
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3432,
                      3441
                    ],
                    "loc": {
                      "start": {
                        "line": 119,
                        "column": 11
                      },
                      "end": {
                        "line": 119,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      3445,
                      3450
                    ],
                    "loc": {
                      "start": {
                        "line": 119,
                        "column": 24
                      },
                      "end": {
                        "line": 119,
                        "column": 29
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3455,
                      3464
                    ],
                    "loc": {
                      "start": {
                        "line": 119,
                        "column": 34
                      },
                      "end": {
                        "line": 119,
                        "column": 43
                      }
                    }
                  },
                  "range": [
                    3445,
                    3464
                  ],
                  "loc": {
                    "start": {
                      "line": 119,
                      "column": 24
                    },
                    "end": {
                      "line": 119,
                      "column": 43
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3432,
                  3464
                ],
                "loc": {
                  "start": {
                    "line": 119,
                    "column": 11
                  },
                  "end": {
                    "line": 119,
                    "column": 43
                  }
                }
              },
              "range": [
                3425,
                3465
              ],
              "loc": {
                "start": {
                  "line": 119,
                  "column": 4
                },
                "end": {
                  "line": 119,
                  "column": 44
                }
              }
            }
          ],
          "range": [
            3419,
            3467
          ],
          "loc": {
            "start": {
              "line": 118,
              "column": 31
            },
            "end": {
              "line": 120,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3395,
          3467
        ],
        "loc": {
          "start": {
            "line": 118,
            "column": 7
          },
          "end": {
            "line": 120,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3056,
              3387
            ],
            "loc": {
              "start": {
                "line": 106,
                "column": 0
              },
              "end": {
                "line": 117,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3470,
              3898
            ],
            "loc": {
              "start": {
                "line": 123,
                "column": 0
              },
              "end": {
                "line": 136,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        3388,
        3467
      ],
      "loc": {
        "start": {
          "line": 118,
          "column": 0
        },
        "end": {
          "line": 120,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3056,
            3387
          ],
          "loc": {
            "start": {
              "line": 106,
              "column": 0
            },
            "end": {
              "line": 117,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3470,
            3898
          ],
          "loc": {
            "start": {
              "line": 123,
              "column": 0
            },
            "end": {
              "line": 136,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "OneOf",
          "range": [
            3915,
            3920
          ],
          "loc": {
            "start": {
              "line": 137,
              "column": 16
            },
            "end": {
              "line": 137,
              "column": 21
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "values",
              "range": [
                3924,
                3930
              ],
              "loc": {
                "start": {
                  "line": 137,
                  "column": 25
                },
                "end": {
                  "line": 137,
                  "column": 31
                }
              }
            },
            "range": [
              3921,
              3930
            ],
            "loc": {
              "start": {
                "line": 137,
                "column": 22
              },
              "end": {
                "line": 137,
                "column": 31
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3945,
                      3954
                    ],
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 11
                      },
                      "end": {
                        "line": 138,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "some",
                    "range": [
                      3958,
                      3962
                    ],
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 24
                      },
                      "end": {
                        "line": 138,
                        "column": 28
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "values",
                      "range": [
                        3963,
                        3969
                      ],
                      "loc": {
                        "start": {
                          "line": 138,
                          "column": 29
                        },
                        "end": {
                          "line": 138,
                          "column": 35
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "Exactly",
                      "range": [
                        3971,
                        3978
                      ],
                      "loc": {
                        "start": {
                          "line": 138,
                          "column": 37
                        },
                        "end": {
                          "line": 138,
                          "column": 44
                        }
                      }
                    }
                  ],
                  "range": [
                    3958,
                    3979
                  ],
                  "loc": {
                    "start": {
                      "line": 138,
                      "column": 24
                    },
                    "end": {
                      "line": 138,
                      "column": 45
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3945,
                  3979
                ],
                "loc": {
                  "start": {
                    "line": 138,
                    "column": 11
                  },
                  "end": {
                    "line": 138,
                    "column": 45
                  }
                }
              },
              "range": [
                3938,
                3980
              ],
              "loc": {
                "start": {
                  "line": 138,
                  "column": 4
                },
                "end": {
                  "line": 138,
                  "column": 46
                }
              }
            }
          ],
          "range": [
            3932,
            3982
          ],
          "loc": {
            "start": {
              "line": 137,
              "column": 33
            },
            "end": {
              "line": 139,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3906,
          3982
        ],
        "loc": {
          "start": {
            "line": 137,
            "column": 7
          },
          "end": {
            "line": 139,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3470,
              3898
            ],
            "loc": {
              "start": {
                "line": 123,
                "column": 0
              },
              "end": {
                "line": 136,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        3899,
        3982
      ],
      "loc": {
        "start": {
          "line": 137,
          "column": 0
        },
        "end": {
          "line": 139,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3470,
            3898
          ],
          "loc": {
            "start": {
              "line": 123,
              "column": 0
            },
            "end": {
              "line": 136,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    3982
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 139,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n ",
      "range": [
        75,
        232
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
      "range": [
        368,
        958
      ],
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
      "range": [
        1436,
        1957
      ],
      "loc": {
        "start": {
          "line": 55,
          "column": 0
        },
        "end": {
          "line": 68,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
      "range": [
        2262,
        2752
      ],
      "loc": {
        "start": {
          "line": 80,
          "column": 0
        },
        "end": {
          "line": 92,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
      "range": [
        3056,
        3387
      ],
      "loc": {
        "start": {
          "line": 106,
          "column": 0
        },
        "end": {
          "line": 117,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
      "range": [
        3470,
        3898
      ],
      "loc": {
        "start": {
          "line": 123,
          "column": 0
        },
        "end": {
          "line": 136,
          "column": 3
        }
      }
    }
  ]
}