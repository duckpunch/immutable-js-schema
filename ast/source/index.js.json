{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "chunk",
            "range": [
              8,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            8,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 8
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "some",
            "range": [
              15,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 15
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            15,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 15
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "lodash",
        "raw": "'lodash'",
        "range": [
          26,
          34
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 26
          },
          "end": {
            "line": 1,
            "column": 34
          }
        }
      },
      "range": [
        0,
        35
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 35
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Map",
            "range": [
              44,
              47
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 11
              }
            }
          },
          "range": [
            44,
            47
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 8
            },
            "end": {
              "line": 2,
              "column": 11
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "List",
            "range": [
              49,
              53
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 13
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "range": [
            49,
            53
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 13
            },
            "end": {
              "line": 2,
              "column": 17
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "immutable",
        "raw": "'immutable'",
        "range": [
          60,
          71
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 24
          },
          "end": {
            "line": 2,
            "column": 35
          }
        }
      },
      "range": [
        36,
        72
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 36
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n * @returns {Boolean}\n ",
          "range": [
            75,
            254
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "checkPair",
        "range": [
          264,
          273
        ],
        "loc": {
          "start": {
            "line": 14,
            "column": 9
          },
          "end": {
            "line": 14,
            "column": 18
          }
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pair",
          "range": [
            274,
            278
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 19
            },
            "end": {
              "line": 14,
              "column": 23
            }
          }
        },
        {
          "type": "Identifier",
          "name": "key",
          "range": [
            280,
            283
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 25
            },
            "end": {
              "line": 14,
              "column": 28
            }
          }
        },
        {
          "type": "Identifier",
          "name": "value",
          "range": [
            285,
            290
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 30
            },
            "end": {
              "line": 14,
              "column": 35
            }
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "ArrayPattern",
                  "elements": [
                    {
                      "type": "Identifier",
                      "name": "key_check",
                      "range": [
                        305,
                        314
                      ],
                      "loc": {
                        "start": {
                          "line": 15,
                          "column": 11
                        },
                        "end": {
                          "line": 15,
                          "column": 20
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "value_check",
                      "range": [
                        316,
                        327
                      ],
                      "loc": {
                        "start": {
                          "line": 15,
                          "column": 22
                        },
                        "end": {
                          "line": 15,
                          "column": 33
                        }
                      }
                    }
                  ],
                  "range": [
                    304,
                    328
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 10
                    },
                    "end": {
                      "line": 15,
                      "column": 34
                    }
                  }
                },
                "init": {
                  "type": "Identifier",
                  "name": "pair",
                  "range": [
                    331,
                    335
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 37
                    },
                    "end": {
                      "line": 15,
                      "column": 41
                    }
                  }
                },
                "range": [
                  304,
                  335
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 10
                  },
                  "end": {
                    "line": 15,
                    "column": 41
                  }
                }
              }
            ],
            "kind": "const",
            "range": [
              298,
              336
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 4
              },
              "end": {
                "line": 15,
                "column": 42
              }
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "key_check",
                  "range": [
                    348,
                    357
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 11
                    },
                    "end": {
                      "line": 16,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "key",
                    "range": [
                      358,
                      361
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 21
                      },
                      "end": {
                        "line": 16,
                        "column": 24
                      }
                    }
                  }
                ],
                "range": [
                  348,
                  362
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 11
                  },
                  "end": {
                    "line": 16,
                    "column": 25
                  }
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "value_check",
                  "range": [
                    366,
                    377
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 29
                    },
                    "end": {
                      "line": 16,
                      "column": 40
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      378,
                      383
                    ],
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 41
                      },
                      "end": {
                        "line": 16,
                        "column": 46
                      }
                    }
                  }
                ],
                "range": [
                  366,
                  384
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 29
                  },
                  "end": {
                    "line": 16,
                    "column": 47
                  }
                }
              },
              "range": [
                348,
                384
              ],
              "loc": {
                "start": {
                  "line": 16,
                  "column": 11
                },
                "end": {
                  "line": 16,
                  "column": 47
                }
              }
            },
            "range": [
              341,
              385
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 4
              },
              "end": {
                "line": 16,
                "column": 48
              }
            }
          }
        ],
        "range": [
          292,
          387
        ],
        "loc": {
          "start": {
            "line": 14,
            "column": 37
          },
          "end": {
            "line": 17,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        255,
        387
      ],
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n * @returns {Boolean}\n ",
          "range": [
            75,
            254
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            390,
            980
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "MapSchema",
          "range": [
            997,
            1006
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 16
            },
            "end": {
              "line": 36,
              "column": 25
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                1010,
                1020
              ],
              "loc": {
                "start": {
                  "line": 36,
                  "column": 29
                },
                "end": {
                  "line": 36,
                  "column": 39
                }
              }
            },
            "range": [
              1007,
              1020
            ],
            "loc": {
              "start": {
                "line": 36,
                "column": 26
              },
              "end": {
                "line": 36,
                "column": 39
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "pairs",
                    "range": [
                      1034,
                      1039
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 10
                      },
                      "end": {
                        "line": 37,
                        "column": 15
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "chunk",
                      "range": [
                        1042,
                        1047
                      ],
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 18
                        },
                        "end": {
                          "line": 37,
                          "column": 23
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "validators",
                        "range": [
                          1048,
                          1058
                        ],
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 24
                          },
                          "end": {
                            "line": 37,
                            "column": 34
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 2,
                        "raw": "2",
                        "range": [
                          1060,
                          1061
                        ],
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 36
                          },
                          "end": {
                            "line": 37,
                            "column": 37
                          }
                        }
                      }
                    ],
                    "range": [
                      1042,
                      1062
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 18
                      },
                      "end": {
                        "line": 37,
                        "column": 38
                      }
                    }
                  },
                  "range": [
                    1034,
                    1062
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 10
                    },
                    "end": {
                      "line": 37,
                      "column": 38
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                1028,
                1063
              ],
              "loc": {
                "start": {
                  "line": 37,
                  "column": 4
                },
                "end": {
                  "line": 37,
                  "column": 39
                }
              }
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "%",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "validators",
                      "range": [
                        1072,
                        1082
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 8
                        },
                        "end": {
                          "line": 38,
                          "column": 18
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "range": [
                        1083,
                        1089
                      ],
                      "loc": {
                        "start": {
                          "line": 38,
                          "column": 19
                        },
                        "end": {
                          "line": 38,
                          "column": 25
                        }
                      }
                    },
                    "range": [
                      1072,
                      1089
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 8
                      },
                      "end": {
                        "line": 38,
                        "column": 25
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2",
                    "range": [
                      1092,
                      1093
                    ],
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 28
                      },
                      "end": {
                        "line": 38,
                        "column": 29
                      }
                    }
                  },
                  "range": [
                    1072,
                    1093
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 8
                    },
                    "end": {
                      "line": 38,
                      "column": 29
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "raw": "1",
                  "range": [
                    1098,
                    1099
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 34
                    },
                    "end": {
                      "line": 38,
                      "column": 35
                    }
                  }
                },
                "range": [
                  1072,
                  1099
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 8
                  },
                  "end": {
                    "line": 38,
                    "column": 35
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "Literal",
                      "value": "Must have even length of validators",
                      "raw": "'Must have even length of validators'",
                      "range": [
                        1117,
                        1154
                      ],
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 14
                        },
                        "end": {
                          "line": 39,
                          "column": 51
                        }
                      }
                    },
                    "range": [
                      1111,
                      1155
                    ],
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 8
                      },
                      "end": {
                        "line": 39,
                        "column": 52
                      }
                    }
                  }
                ],
                "range": [
                  1101,
                  1161
                ],
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 37
                  },
                  "end": {
                    "line": 40,
                    "column": 5
                  }
                }
              },
              "alternate": null,
              "range": [
                1068,
                1161
              ],
              "loc": {
                "start": {
                  "line": 38,
                  "column": 4
                },
                "end": {
                  "line": 40,
                  "column": 5
                }
              }
            },
            {
              "type": "FunctionDeclaration",
              "id": {
                "type": "Identifier",
                "name": "validatePair",
                "range": [
                  1176,
                  1188
                ],
                "loc": {
                  "start": {
                    "line": 42,
                    "column": 13
                  },
                  "end": {
                    "line": 42,
                    "column": 25
                  }
                }
              },
              "params": [
                {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    1189,
                    1194
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 26
                    },
                    "end": {
                      "line": 42,
                      "column": 31
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "key",
                  "range": [
                    1196,
                    1199
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 33
                    },
                    "end": {
                      "line": 42,
                      "column": 36
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "some",
                        "range": [
                          1218,
                          1222
                        ],
                        "loc": {
                          "start": {
                            "line": 43,
                            "column": 15
                          },
                          "end": {
                            "line": 43,
                            "column": 19
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "pairs",
                          "range": [
                            1223,
                            1228
                          ],
                          "loc": {
                            "start": {
                              "line": 43,
                              "column": 20
                            },
                            "end": {
                              "line": 43,
                              "column": 25
                            }
                          }
                        },
                        {
                          "type": "ArrowFunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "pair",
                              "range": [
                                1230,
                                1234
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 27
                                },
                                "end": {
                                  "line": 43,
                                  "column": 31
                                }
                              }
                            }
                          ],
                          "body": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "checkPair",
                              "range": [
                                1238,
                                1247
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 35
                                },
                                "end": {
                                  "line": 43,
                                  "column": 44
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "pair",
                                "range": [
                                  1248,
                                  1252
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 45
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 49
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "key",
                                "range": [
                                  1254,
                                  1257
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 51
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 54
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "value",
                                "range": [
                                  1259,
                                  1264
                                ],
                                "loc": {
                                  "start": {
                                    "line": 43,
                                    "column": 56
                                  },
                                  "end": {
                                    "line": 43,
                                    "column": 61
                                  }
                                }
                              }
                            ],
                            "range": [
                              1238,
                              1265
                            ],
                            "loc": {
                              "start": {
                                "line": 43,
                                "column": 35
                              },
                              "end": {
                                "line": 43,
                                "column": 62
                              }
                            }
                          },
                          "generator": false,
                          "expression": true,
                          "range": [
                            1230,
                            1265
                          ],
                          "loc": {
                            "start": {
                              "line": 43,
                              "column": 27
                            },
                            "end": {
                              "line": 43,
                              "column": 62
                            }
                          }
                        }
                      ],
                      "range": [
                        1218,
                        1266
                      ],
                      "loc": {
                        "start": {
                          "line": 43,
                          "column": 15
                        },
                        "end": {
                          "line": 43,
                          "column": 63
                        }
                      }
                    },
                    "range": [
                      1211,
                      1267
                    ],
                    "loc": {
                      "start": {
                        "line": 43,
                        "column": 8
                      },
                      "end": {
                        "line": 43,
                        "column": 64
                      }
                    }
                  }
                ],
                "range": [
                  1201,
                  1273
                ],
                "loc": {
                  "start": {
                    "line": 42,
                    "column": 38
                  },
                  "end": {
                    "line": 44,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                1167,
                1273
              ],
              "loc": {
                "start": {
                  "line": 42,
                  "column": 4
                },
                "end": {
                  "line": 44,
                  "column": 5
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      1295,
                      1304
                    ],
                    "loc": {
                      "start": {
                        "line": 46,
                        "column": 20
                      },
                      "end": {
                        "line": 46,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Map",
                            "range": [
                              1320,
                              1323
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 12
                              },
                              "end": {
                                "line": 47,
                                "column": 15
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isMap",
                            "range": [
                              1324,
                              1329
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 16
                              },
                              "end": {
                                "line": 47,
                                "column": 21
                              }
                            }
                          },
                          "range": [
                            1320,
                            1329
                          ],
                          "loc": {
                            "start": {
                              "line": 47,
                              "column": 12
                            },
                            "end": {
                              "line": 47,
                              "column": 21
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              1330,
                              1339
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 22
                              },
                              "end": {
                                "line": 47,
                                "column": 31
                              }
                            }
                          }
                        ],
                        "range": [
                          1320,
                          1340
                        ],
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 12
                          },
                          "end": {
                            "line": 47,
                            "column": 32
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    1363,
                                    1372
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    1373,
                                    1378
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  1363,
                                  1378
                                ],
                                "loc": {
                                  "start": {
                                    "line": 48,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 48,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "validatePair",
                                  "range": [
                                    1379,
                                    1391
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 48,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 48,
                                      "column": 47
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1363,
                                1392
                              ],
                              "loc": {
                                "start": {
                                  "line": 48,
                                  "column": 19
                                },
                                "end": {
                                  "line": 48,
                                  "column": 48
                                }
                              }
                            },
                            "range": [
                              1356,
                              1393
                            ],
                            "loc": {
                              "start": {
                                "line": 48,
                                "column": 12
                              },
                              "end": {
                                "line": 48,
                                "column": 49
                              }
                            }
                          }
                        ],
                        "range": [
                          1342,
                          1403
                        ],
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 34
                          },
                          "end": {
                            "line": 49,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                1430,
                                1435
                              ],
                              "loc": {
                                "start": {
                                  "line": 50,
                                  "column": 19
                                },
                                "end": {
                                  "line": 50,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              1423,
                              1436
                            ],
                            "loc": {
                              "start": {
                                "line": 50,
                                "column": 12
                              },
                              "end": {
                                "line": 50,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          1409,
                          1446
                        ],
                        "loc": {
                          "start": {
                            "line": 49,
                            "column": 15
                          },
                          "end": {
                            "line": 51,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1316,
                        1446
                      ],
                      "loc": {
                        "start": {
                          "line": 47,
                          "column": 8
                        },
                        "end": {
                          "line": 51,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1306,
                    1452
                  ],
                  "loc": {
                    "start": {
                      "line": 46,
                      "column": 31
                    },
                    "end": {
                      "line": 52,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1286,
                  1452
                ],
                "loc": {
                  "start": {
                    "line": 46,
                    "column": 11
                  },
                  "end": {
                    "line": 52,
                    "column": 5
                  }
                }
              },
              "range": [
                1279,
                1453
              ],
              "loc": {
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 52,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            1022,
            1455
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 41
            },
            "end": {
              "line": 53,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          988,
          1455
        ],
        "loc": {
          "start": {
            "line": 36,
            "column": 7
          },
          "end": {
            "line": 53,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
            "range": [
              390,
              980
            ],
            "loc": {
              "start": {
                "line": 20,
                "column": 0
              },
              "end": {
                "line": 35,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1458,
              1979
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        981,
        1455
      ],
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 53,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
          "range": [
            390,
            980
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1458,
            1979
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "FixedListSchema",
          "range": [
            1996,
            2011
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 16
            },
            "end": {
              "line": 70,
              "column": 31
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2015,
                2025
              ],
              "loc": {
                "start": {
                  "line": 70,
                  "column": 35
                },
                "end": {
                  "line": 70,
                  "column": 45
                }
              }
            },
            "range": [
              2012,
              2025
            ],
            "loc": {
              "start": {
                "line": 70,
                "column": 32
              },
              "end": {
                "line": 70,
                "column": 45
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2049,
                      2058
                    ],
                    "loc": {
                      "start": {
                        "line": 71,
                        "column": 20
                      },
                      "end": {
                        "line": 71,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "List",
                              "range": [
                                2074,
                                2078
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 12
                                },
                                "end": {
                                  "line": 72,
                                  "column": 16
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "isList",
                              "range": [
                                2079,
                                2085
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 17
                                },
                                "end": {
                                  "line": 72,
                                  "column": 23
                                }
                              }
                            },
                            "range": [
                              2074,
                              2085
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 12
                              },
                              "end": {
                                "line": 72,
                                "column": 23
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2086,
                                2095
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 24
                                },
                                "end": {
                                  "line": 72,
                                  "column": 33
                                }
                              }
                            }
                          ],
                          "range": [
                            2074,
                            2096
                          ],
                          "loc": {
                            "start": {
                              "line": 72,
                              "column": 12
                            },
                            "end": {
                              "line": 72,
                              "column": 34
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "candidate",
                              "range": [
                                2100,
                                2109
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 38
                                },
                                "end": {
                                  "line": 72,
                                  "column": 47
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "size",
                              "range": [
                                2110,
                                2114
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 48
                                },
                                "end": {
                                  "line": 72,
                                  "column": 52
                                }
                              }
                            },
                            "range": [
                              2100,
                              2114
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 38
                              },
                              "end": {
                                "line": 72,
                                "column": 52
                              }
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "validators",
                              "range": [
                                2119,
                                2129
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 57
                                },
                                "end": {
                                  "line": 72,
                                  "column": 67
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length",
                              "range": [
                                2130,
                                2136
                              ],
                              "loc": {
                                "start": {
                                  "line": 72,
                                  "column": 68
                                },
                                "end": {
                                  "line": 72,
                                  "column": 74
                                }
                              }
                            },
                            "range": [
                              2119,
                              2136
                            ],
                            "loc": {
                              "start": {
                                "line": 72,
                                "column": 57
                              },
                              "end": {
                                "line": 72,
                                "column": 74
                              }
                            }
                          },
                          "range": [
                            2100,
                            2136
                          ],
                          "loc": {
                            "start": {
                              "line": 72,
                              "column": 38
                            },
                            "end": {
                              "line": 72,
                              "column": 74
                            }
                          }
                        },
                        "range": [
                          2074,
                          2136
                        ],
                        "loc": {
                          "start": {
                            "line": 72,
                            "column": 12
                          },
                          "end": {
                            "line": 72,
                            "column": 74
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2159,
                                    2168
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2169,
                                    2174
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2159,
                                  2174
                                ],
                                "loc": {
                                  "start": {
                                    "line": 73,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 73,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2176,
                                        2181
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 36
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 41
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "index",
                                      "range": [
                                        2183,
                                        2188
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 43
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 48
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2193,
                                          2203
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 53
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 63
                                          }
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "index",
                                        "range": [
                                          2204,
                                          2209
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 64
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 69
                                          }
                                        }
                                      },
                                      "range": [
                                        2193,
                                        2210
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 73,
                                          "column": 53
                                        },
                                        "end": {
                                          "line": 73,
                                          "column": 70
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "value",
                                        "range": [
                                          2211,
                                          2216
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 73,
                                            "column": 71
                                          },
                                          "end": {
                                            "line": 73,
                                            "column": 76
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2193,
                                      2217
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 73,
                                        "column": 53
                                      },
                                      "end": {
                                        "line": 73,
                                        "column": 77
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2175,
                                    2217
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 73,
                                      "column": 35
                                    },
                                    "end": {
                                      "line": 73,
                                      "column": 77
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2159,
                                2218
                              ],
                              "loc": {
                                "start": {
                                  "line": 73,
                                  "column": 19
                                },
                                "end": {
                                  "line": 73,
                                  "column": 78
                                }
                              }
                            },
                            "range": [
                              2152,
                              2219
                            ],
                            "loc": {
                              "start": {
                                "line": 73,
                                "column": 12
                              },
                              "end": {
                                "line": 73,
                                "column": 79
                              }
                            }
                          }
                        ],
                        "range": [
                          2138,
                          2229
                        ],
                        "loc": {
                          "start": {
                            "line": 72,
                            "column": 76
                          },
                          "end": {
                            "line": 74,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                2256,
                                2261
                              ],
                              "loc": {
                                "start": {
                                  "line": 75,
                                  "column": 19
                                },
                                "end": {
                                  "line": 75,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              2249,
                              2262
                            ],
                            "loc": {
                              "start": {
                                "line": 75,
                                "column": 12
                              },
                              "end": {
                                "line": 75,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          2235,
                          2272
                        ],
                        "loc": {
                          "start": {
                            "line": 74,
                            "column": 15
                          },
                          "end": {
                            "line": 76,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2070,
                        2272
                      ],
                      "loc": {
                        "start": {
                          "line": 72,
                          "column": 8
                        },
                        "end": {
                          "line": 76,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2060,
                    2278
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 31
                    },
                    "end": {
                      "line": 77,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2040,
                  2278
                ],
                "loc": {
                  "start": {
                    "line": 71,
                    "column": 11
                  },
                  "end": {
                    "line": 77,
                    "column": 5
                  }
                }
              },
              "range": [
                2033,
                2279
              ],
              "loc": {
                "start": {
                  "line": 71,
                  "column": 4
                },
                "end": {
                  "line": 77,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2027,
            2281
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 47
            },
            "end": {
              "line": 78,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1987,
          2281
        ],
        "loc": {
          "start": {
            "line": 70,
            "column": 7
          },
          "end": {
            "line": 78,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
            "range": [
              1458,
              1979
            ],
            "loc": {
              "start": {
                "line": 56,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2284,
              2774
            ],
            "loc": {
              "start": {
                "line": 81,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        1980,
        2281
      ],
      "loc": {
        "start": {
          "line": 70,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
          "range": [
            1458,
            1979
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2284,
            2774
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ListSchema",
          "range": [
            2791,
            2801
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 16
            },
            "end": {
              "line": 94,
              "column": 26
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "validators",
              "range": [
                2805,
                2815
              ],
              "loc": {
                "start": {
                  "line": 94,
                  "column": 30
                },
                "end": {
                  "line": 94,
                  "column": 40
                }
              }
            },
            "range": [
              2802,
              2815
            ],
            "loc": {
              "start": {
                "line": 94,
                "column": 27
              },
              "end": {
                "line": 94,
                "column": 40
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      2839,
                      2848
                    ],
                    "loc": {
                      "start": {
                        "line": 95,
                        "column": 20
                      },
                      "end": {
                        "line": 95,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "List",
                            "range": [
                              2864,
                              2868
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 12
                              },
                              "end": {
                                "line": 96,
                                "column": 16
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "isList",
                            "range": [
                              2869,
                              2875
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 17
                              },
                              "end": {
                                "line": 96,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            2864,
                            2875
                          ],
                          "loc": {
                            "start": {
                              "line": 96,
                              "column": 12
                            },
                            "end": {
                              "line": 96,
                              "column": 23
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "candidate",
                            "range": [
                              2876,
                              2885
                            ],
                            "loc": {
                              "start": {
                                "line": 96,
                                "column": 24
                              },
                              "end": {
                                "line": 96,
                                "column": 33
                              }
                            }
                          }
                        ],
                        "range": [
                          2864,
                          2886
                        ],
                        "loc": {
                          "start": {
                            "line": 96,
                            "column": 12
                          },
                          "end": {
                            "line": 96,
                            "column": 34
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "candidate",
                                  "range": [
                                    2909,
                                    2918
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 97,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 97,
                                      "column": 28
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "every",
                                  "range": [
                                    2919,
                                    2924
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 97,
                                      "column": 29
                                    },
                                    "end": {
                                      "line": 97,
                                      "column": 34
                                    }
                                  }
                                },
                                "range": [
                                  2909,
                                  2924
                                ],
                                "loc": {
                                  "start": {
                                    "line": 97,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 97,
                                    "column": 34
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        2942,
                                        2947
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 98,
                                          "column": 16
                                        },
                                        "end": {
                                          "line": 98,
                                          "column": 21
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "some",
                                      "range": [
                                        2951,
                                        2955
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 98,
                                          "column": 25
                                        },
                                        "end": {
                                          "line": 98,
                                          "column": 29
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "validators",
                                        "range": [
                                          2956,
                                          2966
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 98,
                                            "column": 30
                                          },
                                          "end": {
                                            "line": 98,
                                            "column": 40
                                          }
                                        }
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2968,
                                              2977
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 98,
                                                "column": 42
                                              },
                                              "end": {
                                                "line": 98,
                                                "column": 51
                                              }
                                            }
                                          }
                                        ],
                                        "body": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "validator",
                                            "range": [
                                              2981,
                                              2990
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 98,
                                                "column": 55
                                              },
                                              "end": {
                                                "line": 98,
                                                "column": 64
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value",
                                              "range": [
                                                2991,
                                                2996
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 98,
                                                  "column": 65
                                                },
                                                "end": {
                                                  "line": 98,
                                                  "column": 70
                                                }
                                              }
                                            }
                                          ],
                                          "range": [
                                            2981,
                                            2997
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 98,
                                              "column": 55
                                            },
                                            "end": {
                                              "line": 98,
                                              "column": 71
                                            }
                                          }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "range": [
                                          2968,
                                          2997
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 98,
                                            "column": 42
                                          },
                                          "end": {
                                            "line": 98,
                                            "column": 71
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2951,
                                      2998
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 98,
                                        "column": 25
                                      },
                                      "end": {
                                        "line": 98,
                                        "column": 72
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": true,
                                  "range": [
                                    2942,
                                    2998
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 98,
                                      "column": 16
                                    },
                                    "end": {
                                      "line": 98,
                                      "column": 72
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2909,
                                3012
                              ],
                              "loc": {
                                "start": {
                                  "line": 97,
                                  "column": 19
                                },
                                "end": {
                                  "line": 99,
                                  "column": 13
                                }
                              }
                            },
                            "range": [
                              2902,
                              3013
                            ],
                            "loc": {
                              "start": {
                                "line": 97,
                                "column": 12
                              },
                              "end": {
                                "line": 99,
                                "column": 14
                              }
                            }
                          }
                        ],
                        "range": [
                          2888,
                          3023
                        ],
                        "loc": {
                          "start": {
                            "line": 96,
                            "column": 36
                          },
                          "end": {
                            "line": 100,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Literal",
                              "value": false,
                              "raw": "false",
                              "range": [
                                3050,
                                3055
                              ],
                              "loc": {
                                "start": {
                                  "line": 101,
                                  "column": 19
                                },
                                "end": {
                                  "line": 101,
                                  "column": 24
                                }
                              }
                            },
                            "range": [
                              3043,
                              3056
                            ],
                            "loc": {
                              "start": {
                                "line": 101,
                                "column": 12
                              },
                              "end": {
                                "line": 101,
                                "column": 25
                              }
                            }
                          }
                        ],
                        "range": [
                          3029,
                          3066
                        ],
                        "loc": {
                          "start": {
                            "line": 100,
                            "column": 15
                          },
                          "end": {
                            "line": 102,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        2860,
                        3066
                      ],
                      "loc": {
                        "start": {
                          "line": 96,
                          "column": 8
                        },
                        "end": {
                          "line": 102,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    2850,
                    3072
                  ],
                  "loc": {
                    "start": {
                      "line": 95,
                      "column": 31
                    },
                    "end": {
                      "line": 103,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2830,
                  3072
                ],
                "loc": {
                  "start": {
                    "line": 95,
                    "column": 11
                  },
                  "end": {
                    "line": 103,
                    "column": 5
                  }
                }
              },
              "range": [
                2823,
                3073
              ],
              "loc": {
                "start": {
                  "line": 95,
                  "column": 4
                },
                "end": {
                  "line": 103,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2817,
            3075
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 42
            },
            "end": {
              "line": 104,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2782,
          3075
        ],
        "loc": {
          "start": {
            "line": 94,
            "column": 7
          },
          "end": {
            "line": 104,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
            "range": [
              2284,
              2774
            ],
            "loc": {
              "start": {
                "line": 81,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3078,
              3409
            ],
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 118,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2775,
        3075
      ],
      "loc": {
        "start": {
          "line": 94,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
          "range": [
            2284,
            2774
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3078,
            3409
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 0
            },
            "end": {
              "line": 118,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Exactly",
          "range": [
            3426,
            3433
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 16
            },
            "end": {
              "line": 119,
              "column": 23
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "value",
            "range": [
              3434,
              3439
            ],
            "loc": {
              "start": {
                "line": 119,
                "column": 24
              },
              "end": {
                "line": 119,
                "column": 29
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3454,
                      3463
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 11
                      },
                      "end": {
                        "line": 120,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      3467,
                      3472
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 24
                      },
                      "end": {
                        "line": 120,
                        "column": 29
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3477,
                      3486
                    ],
                    "loc": {
                      "start": {
                        "line": 120,
                        "column": 34
                      },
                      "end": {
                        "line": 120,
                        "column": 43
                      }
                    }
                  },
                  "range": [
                    3467,
                    3486
                  ],
                  "loc": {
                    "start": {
                      "line": 120,
                      "column": 24
                    },
                    "end": {
                      "line": 120,
                      "column": 43
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3454,
                  3486
                ],
                "loc": {
                  "start": {
                    "line": 120,
                    "column": 11
                  },
                  "end": {
                    "line": 120,
                    "column": 43
                  }
                }
              },
              "range": [
                3447,
                3487
              ],
              "loc": {
                "start": {
                  "line": 120,
                  "column": 4
                },
                "end": {
                  "line": 120,
                  "column": 44
                }
              }
            }
          ],
          "range": [
            3441,
            3489
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 31
            },
            "end": {
              "line": 121,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3417,
          3489
        ],
        "loc": {
          "start": {
            "line": 119,
            "column": 7
          },
          "end": {
            "line": 121,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
            "range": [
              3078,
              3409
            ],
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 118,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3492,
              3920
            ],
            "loc": {
              "start": {
                "line": 124,
                "column": 0
              },
              "end": {
                "line": 137,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        3410,
        3489
      ],
      "loc": {
        "start": {
          "line": 119,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
          "range": [
            3078,
            3409
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 0
            },
            "end": {
              "line": 118,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3492,
            3920
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0
            },
            "end": {
              "line": 137,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "OneOf",
          "range": [
            3937,
            3942
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 16
            },
            "end": {
              "line": 138,
              "column": 21
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "values",
              "range": [
                3946,
                3952
              ],
              "loc": {
                "start": {
                  "line": 138,
                  "column": 25
                },
                "end": {
                  "line": 138,
                  "column": 31
                }
              }
            },
            "range": [
              3943,
              3952
            ],
            "loc": {
              "start": {
                "line": 138,
                "column": 22
              },
              "end": {
                "line": 138,
                "column": 31
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "candidate",
                    "range": [
                      3967,
                      3976
                    ],
                    "loc": {
                      "start": {
                        "line": 139,
                        "column": 11
                      },
                      "end": {
                        "line": 139,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "some",
                    "range": [
                      3980,
                      3984
                    ],
                    "loc": {
                      "start": {
                        "line": 139,
                        "column": 24
                      },
                      "end": {
                        "line": 139,
                        "column": 28
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "values",
                      "range": [
                        3985,
                        3991
                      ],
                      "loc": {
                        "start": {
                          "line": 139,
                          "column": 29
                        },
                        "end": {
                          "line": 139,
                          "column": 35
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "Exactly",
                      "range": [
                        3993,
                        4000
                      ],
                      "loc": {
                        "start": {
                          "line": 139,
                          "column": 37
                        },
                        "end": {
                          "line": 139,
                          "column": 44
                        }
                      }
                    }
                  ],
                  "range": [
                    3980,
                    4001
                  ],
                  "loc": {
                    "start": {
                      "line": 139,
                      "column": 24
                    },
                    "end": {
                      "line": 139,
                      "column": 45
                    }
                  }
                },
                "generator": false,
                "expression": true,
                "range": [
                  3967,
                  4001
                ],
                "loc": {
                  "start": {
                    "line": 139,
                    "column": 11
                  },
                  "end": {
                    "line": 139,
                    "column": 45
                  }
                }
              },
              "range": [
                3960,
                4002
              ],
              "loc": {
                "start": {
                  "line": 139,
                  "column": 4
                },
                "end": {
                  "line": 139,
                  "column": 46
                }
              }
            }
          ],
          "range": [
            3954,
            4004
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 33
            },
            "end": {
              "line": 140,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          3928,
          4004
        ],
        "loc": {
          "start": {
            "line": 138,
            "column": 7
          },
          "end": {
            "line": 140,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
            "range": [
              3492,
              3920
            ],
            "loc": {
              "start": {
                "line": 124,
                "column": 0
              },
              "end": {
                "line": 137,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        3921,
        4004
      ],
      "loc": {
        "start": {
          "line": 138,
          "column": 0
        },
        "end": {
          "line": 140,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
          "range": [
            3492,
            3920
          ],
          "loc": {
            "start": {
              "line": 124,
              "column": 0
            },
            "end": {
              "line": 137,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    4004
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 140,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * @private\n * Checks a key and value against callables given by a tuple of functions\n *\n * @param {Array} pair\n * @param {*} key\n * @param {*} value\n * @returns {Boolean}\n ",
      "range": [
        75,
        254
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Creates a validator function based on passed validator 2-tuples.\n *\n * Key-value entries in the map must satisfy at least one of the validator tuples.\n *\n * TODO: Optional and required key/values\n *\n * @param {function} ...validators functions in pairs to match with each key-value pair\n * @returns {function} function returns true if passed a valid Map\n * @example\n * var isValid = MapSchema(isNumber, Exactly('hi'), isString, isNumber);\n *\n * isValid(Map().set(5, 'hi')); // true\n * isValid(Map().set('hi', 'hi')); // false\n * isValid(Map().set(5, 'hi').set('foo', 3)); // true\n ",
      "range": [
        390,
        980
      ],
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks each value matches the validators passed,\n * respective per index.\n *\n * @param {function} ...validators functions, in order, to check each value in the passed list\n * @returns {function} which returns true if each element in list matches in order\n * @example\n * var schema = FixedListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // false\n * schema(List.of('roar'));  // false\n * schema(List.of('fake roar'));  // false\n * schema(List.of('roar', 15));  // true\n ",
      "range": [
        1458,
        1979
      ],
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 69,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Generates a function that checks that each element of a List matches at least\n * one of the passed validators.\n *\n * @param {function} ...validators functions to check each value in the passed list\n * @returns {function} which returns true if each element in list matches at least one validator\n * @example\n * var schema = ListSchema(Exactly('roar'), isNumber);\n *\n * schema(List.of(3));  // true\n * schema(List.of('roar'));  // true\n * schema(List.of(3, 'fake roar'));  // false\n ",
      "range": [
        2284,
        2774
      ],
      "loc": {
        "start": {
          "line": 81,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict equality.\n *\n * @param {*} value value to test equality\n * @returns {function} evaluates strict equality of passed value\n * @example\n * var isExactly = Exactly('3');\n *\n * isExactly('hi');  // false\n * isExactly(3);  // false\n * isExactly('3');  // true\n ",
      "range": [
        3078,
        3409
      ],
      "loc": {
        "start": {
          "line": 107,
          "column": 0
        },
        "end": {
          "line": 118,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Convenience function that returns a function that validates strict membership\n * in passed arguments.\n *\n * @param {*} ...values collection of values to test membership upon\n * @returns {function} evaluates membership of passed value\n * @example\n * var membership = OneOf('hi', '3', 19);\n *\n * membership('hi');  // true\n * membership(3);  // false\n * membership('not in there');  // false\n * membership(19);  // true\n ",
      "range": [
        3492,
        3920
      ],
      "loc": {
        "start": {
          "line": 124,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 3
        }
      }
    }
  ]
}